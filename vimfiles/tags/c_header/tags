!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABDAY_1	langinfo.h	/^  ABDAY_1 = _NL_ITEM (__LC_TIME, 0), \/* Sun *\/$/;"	e	enum:__anon20
ABDAY_1	langinfo.h	48;"	d
ABDAY_2	langinfo.h	/^  ABDAY_2,$/;"	e	enum:__anon20
ABDAY_2	langinfo.h	50;"	d
ABDAY_3	langinfo.h	/^  ABDAY_3,$/;"	e	enum:__anon20
ABDAY_3	langinfo.h	52;"	d
ABDAY_4	langinfo.h	/^  ABDAY_4,$/;"	e	enum:__anon20
ABDAY_4	langinfo.h	54;"	d
ABDAY_5	langinfo.h	/^  ABDAY_5,$/;"	e	enum:__anon20
ABDAY_5	langinfo.h	56;"	d
ABDAY_6	langinfo.h	/^  ABDAY_6,$/;"	e	enum:__anon20
ABDAY_6	langinfo.h	58;"	d
ABDAY_7	langinfo.h	/^  ABDAY_7,$/;"	e	enum:__anon20
ABDAY_7	langinfo.h	60;"	d
ABMON_1	langinfo.h	/^  ABMON_1,			\/* Jan *\/$/;"	e	enum:__anon20
ABMON_1	langinfo.h	80;"	d
ABMON_10	langinfo.h	/^  ABMON_10,$/;"	e	enum:__anon20
ABMON_10	langinfo.h	98;"	d
ABMON_11	langinfo.h	/^  ABMON_11,$/;"	e	enum:__anon20
ABMON_11	langinfo.h	100;"	d
ABMON_12	langinfo.h	/^  ABMON_12,$/;"	e	enum:__anon20
ABMON_12	langinfo.h	102;"	d
ABMON_2	langinfo.h	/^  ABMON_2,$/;"	e	enum:__anon20
ABMON_2	langinfo.h	82;"	d
ABMON_3	langinfo.h	/^  ABMON_3,$/;"	e	enum:__anon20
ABMON_3	langinfo.h	84;"	d
ABMON_4	langinfo.h	/^  ABMON_4,$/;"	e	enum:__anon20
ABMON_4	langinfo.h	86;"	d
ABMON_5	langinfo.h	/^  ABMON_5,$/;"	e	enum:__anon20
ABMON_5	langinfo.h	88;"	d
ABMON_6	langinfo.h	/^  ABMON_6,$/;"	e	enum:__anon20
ABMON_6	langinfo.h	90;"	d
ABMON_7	langinfo.h	/^  ABMON_7,$/;"	e	enum:__anon20
ABMON_7	langinfo.h	92;"	d
ABMON_8	langinfo.h	/^  ABMON_8,$/;"	e	enum:__anon20
ABMON_8	langinfo.h	94;"	d
ABMON_9	langinfo.h	/^  ABMON_9,$/;"	e	enum:__anon20
ABMON_9	langinfo.h	96;"	d
ACTION	search.h	/^ACTION;$/;"	t	typeref:enum:__anon77
AIO_ALLDONE	aio.h	/^  AIO_ALLDONE$/;"	e	enum:__anon82
AIO_ALLDONE	aio.h	111;"	d
AIO_CANCELED	aio.h	/^  AIO_CANCELED,$/;"	e	enum:__anon82
AIO_CANCELED	aio.h	107;"	d
AIO_NOTCANCELED	aio.h	/^  AIO_NOTCANCELED,$/;"	e	enum:__anon82
AIO_NOTCANCELED	aio.h	109;"	d
AI_ADDRCONFIG	netdb.h	605;"	d
AI_ALL	netdb.h	604;"	d
AI_CANONIDN	netdb.h	611;"	d
AI_CANONNAME	netdb.h	601;"	d
AI_IDN	netdb.h	608;"	d
AI_IDN_ALLOW_UNASSIGNED	netdb.h	612;"	d
AI_IDN_USE_STD3_ASCII_RULES	netdb.h	614;"	d
AI_NUMERICHOST	netdb.h	602;"	d
AI_NUMERICSERV	netdb.h	617;"	d
AI_PASSIVE	netdb.h	600;"	d
AI_V4MAPPED	netdb.h	603;"	d
ALT_DIGITS	langinfo.h	/^  ALT_DIGITS,			\/* Alternate symbols for digits.  *\/$/;"	e	enum:__anon20
ALT_DIGITS	langinfo.h	153;"	d
AM_STR	langinfo.h	/^  AM_STR,			\/* Ante meridiem string.  *\/$/;"	e	enum:__anon20
AM_STR	langinfo.h	131;"	d
AREGTYPE	tar.h	90;"	d
ARFMAG	ar.h	32;"	d
ARGP_EI	argp.h	562;"	d
ARGP_ERR_UNKNOWN	argp.h	161;"	d
ARGP_HELP_BUG_ADDR	argp.h	456;"	d
ARGP_HELP_DOC	argp.h	455;"	d
ARGP_HELP_EXIT_ERR	argp.h	461;"	d
ARGP_HELP_EXIT_OK	argp.h	462;"	d
ARGP_HELP_LONG	argp.h	452;"	d
ARGP_HELP_LONG_ONLY	argp.h	457;"	d
ARGP_HELP_POST_DOC	argp.h	454;"	d
ARGP_HELP_PRE_DOC	argp.h	453;"	d
ARGP_HELP_SEE	argp.h	451;"	d
ARGP_HELP_SHORT_USAGE	argp.h	450;"	d
ARGP_HELP_STD_ERR	argp.h	466;"	d
ARGP_HELP_STD_HELP	argp.h	473;"	d
ARGP_HELP_STD_USAGE	argp.h	470;"	d
ARGP_HELP_USAGE	argp.h	449;"	d
ARGP_IN_ORDER	argp.h	388;"	d
ARGP_KEY_ARG	argp.h	189;"	d
ARGP_KEY_ARGS	argp.h	195;"	d
ARGP_KEY_END	argp.h	197;"	d
ARGP_KEY_ERROR	argp.h	214;"	d
ARGP_KEY_FINI	argp.h	209;"	d
ARGP_KEY_HELP_ARGS_DOC	argp.h	284;"	d
ARGP_KEY_HELP_DUP_ARGS_NOTE	argp.h	283;"	d
ARGP_KEY_HELP_EXTRA	argp.h	279;"	d
ARGP_KEY_HELP_HEADER	argp.h	278;"	d
ARGP_KEY_HELP_POST_DOC	argp.h	277;"	d
ARGP_KEY_HELP_PRE_DOC	argp.h	276;"	d
ARGP_KEY_INIT	argp.h	207;"	d
ARGP_KEY_NO_ARGS	argp.h	203;"	d
ARGP_KEY_SUCCESS	argp.h	212;"	d
ARGP_LONG_ONLY	argp.h	398;"	d
ARGP_NO_ARGS	argp.h	384;"	d
ARGP_NO_ERRS	argp.h	372;"	d
ARGP_NO_EXIT	argp.h	395;"	d
ARGP_NO_HELP	argp.h	392;"	d
ARGP_PARSE_ARGV0	argp.h	366;"	d
ARGP_SILENT	argp.h	401;"	d
ARMAG	ar.h	29;"	d
ASN1_API	libtasn1.h	29;"	d
ASN1_API	libtasn1.h	31;"	d
ASN1_API	libtasn1.h	33;"	d
ASN1_API	libtasn1.h	35;"	d
ASN1_ARRAY_ERROR	libtasn1.h	71;"	d
ASN1_ARRAY_TYPE	libtasn1.h	/^  typedef struct static_struct_asn ASN1_ARRAY_TYPE;$/;"	t	typeref:struct:static_struct_asn
ASN1_CLASS_APPLICATION	libtasn1.h	86;"	d
ASN1_CLASS_CONTEXT_SPECIFIC	libtasn1.h	87;"	d
ASN1_CLASS_PRIVATE	libtasn1.h	88;"	d
ASN1_CLASS_STRUCTURED	libtasn1.h	89;"	d
ASN1_CLASS_UNIVERSAL	libtasn1.h	85;"	d
ASN1_DER_ERROR	libtasn1.h	59;"	d
ASN1_DER_OVERFLOW	libtasn1.h	69;"	d
ASN1_ELEMENT_NOT_EMPTY	libtasn1.h	72;"	d
ASN1_ELEMENT_NOT_FOUND	libtasn1.h	57;"	d
ASN1_ERROR_TYPE_ANY	libtasn1.h	65;"	d
ASN1_FILE_NOT_FOUND	libtasn1.h	56;"	d
ASN1_GENERIC_ERROR	libtasn1.h	61;"	d
ASN1_IDENTIFIER_NOT_FOUND	libtasn1.h	58;"	d
ASN1_MAX_ERROR_DESCRIPTION_SIZE	libtasn1.h	156;"	d
ASN1_MAX_NAME_SIZE	libtasn1.h	151;"	d
ASN1_MEM_ALLOC_ERROR	libtasn1.h	68;"	d
ASN1_MEM_ERROR	libtasn1.h	67;"	d
ASN1_NAME_TOO_LONG	libtasn1.h	70;"	d
ASN1_PRINT_ALL	libtasn1.h	80;"	d
ASN1_PRINT_NAME	libtasn1.h	77;"	d
ASN1_PRINT_NAME_TYPE	libtasn1.h	78;"	d
ASN1_PRINT_NAME_TYPE_VALUE	libtasn1.h	79;"	d
ASN1_SUCCESS	libtasn1.h	55;"	d
ASN1_SYNTAX_ERROR	libtasn1.h	66;"	d
ASN1_TAG_BIT_STRING	libtasn1.h	99;"	d
ASN1_TAG_BOOLEAN	libtasn1.h	94;"	d
ASN1_TAG_ENUMERATED	libtasn1.h	103;"	d
ASN1_TAG_ERROR	libtasn1.h	63;"	d
ASN1_TAG_GENERALIZEDTime	libtasn1.h	101;"	d
ASN1_TAG_GENERALSTRING	libtasn1.h	105;"	d
ASN1_TAG_IMPLICIT	libtasn1.h	64;"	d
ASN1_TAG_INTEGER	libtasn1.h	95;"	d
ASN1_TAG_NULL	libtasn1.h	104;"	d
ASN1_TAG_OBJECT_ID	libtasn1.h	102;"	d
ASN1_TAG_OCTET_STRING	libtasn1.h	98;"	d
ASN1_TAG_SEQUENCE	libtasn1.h	96;"	d
ASN1_TAG_SET	libtasn1.h	97;"	d
ASN1_TAG_UTCTime	libtasn1.h	100;"	d
ASN1_TYPE	libtasn1.h	/^  typedef node_asn *ASN1_TYPE;$/;"	t
ASN1_TYPE_EMPTY	libtasn1.h	132;"	d
ASN1_VALUE_NOT_FOUND	libtasn1.h	60;"	d
ASN1_VALUE_NOT_VALID	libtasn1.h	62;"	d
ASN1_VERSION	libtasn1.h	48;"	d
AT_BASE	elf.h	955;"	d
AT_BASE_PLATFORM	elf.h	985;"	d
AT_CLKTCK	elf.h	963;"	d
AT_DCACHEBSIZE	elf.h	975;"	d
AT_EGID	elf.h	962;"	d
AT_ENTRY	elf.h	957;"	d
AT_EUID	elf.h	960;"	d
AT_EXECFD	elf.h	950;"	d
AT_EXECFN	elf.h	989;"	d
AT_FLAGS	elf.h	956;"	d
AT_FPUCW	elf.h	972;"	d
AT_GID	elf.h	961;"	d
AT_HWCAP	elf.h	967;"	d
AT_ICACHEBSIZE	elf.h	976;"	d
AT_IGNORE	elf.h	949;"	d
AT_IGNOREPPC	elf.h	981;"	d
AT_L1D_CACHESHAPE	elf.h	999;"	d
AT_L1I_CACHESHAPE	elf.h	998;"	d
AT_L2_CACHESHAPE	elf.h	1000;"	d
AT_L3_CACHESHAPE	elf.h	1001;"	d
AT_NOTELF	elf.h	958;"	d
AT_NULL	elf.h	948;"	d
AT_PAGESZ	elf.h	954;"	d
AT_PHDR	elf.h	951;"	d
AT_PHENT	elf.h	952;"	d
AT_PHNUM	elf.h	953;"	d
AT_PLATFORM	elf.h	966;"	d
AT_RANDOM	elf.h	987;"	d
AT_SECURE	elf.h	983;"	d
AT_SYSINFO	elf.h	993;"	d
AT_SYSINFO_EHDR	elf.h	994;"	d
AT_UCACHEBSIZE	elf.h	977;"	d
AT_UID	elf.h	959;"	d
BIG_ENDIAN	endian.h	47;"	d
BITSPERBYTE	values.h	66;"	d
BLKTYPE	tar.h	94;"	d
BT_NBIPUI	thread_db.h	112;"	d
BT_UIMASK	thread_db.h	113;"	d
BT_UISHIFT	thread_db.h	111;"	d
BUFSIZ	stdio.h	128;"	d
BYTEORDER	expat_config.h	5;"	d
BYTE_ORDER	endian.h	49;"	d
Byte	zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Byte	zconf.h	94;"	d
Bytef	zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	zconf.h	335;"	d
Bytef	zconf.h	95;"	d
CCEQ	termios.h	45;"	d
CHARBITS	values.h	32;"	d
CHAR_BIT	limits.h	55;"	d
CHAR_MAX	limits.h	67;"	d
CHAR_MAX	limits.h	70;"	d
CHAR_MIN	limits.h	66;"	d
CHAR_MIN	limits.h	69;"	d
CHRTYPE	tar.h	93;"	d
CLK_TCK	time.h	47;"	d
CMAGIC	a.out.h	57;"	d
CODESET	langinfo.h	/^  CODESET = _NL_CTYPE_CODESET_NAME,$/;"	e	enum:__anon20
CODESET	langinfo.h	280;"	d
CONTTYPE	tar.h	97;"	d
CPU_ALLOC	sched.h	113;"	d
CPU_ALLOC_SIZE	sched.h	112;"	d
CPU_AND	sched.h	99;"	d
CPU_AND_S	sched.h	105;"	d
CPU_CLR	sched.h	81;"	d
CPU_CLR_S	sched.h	88;"	d
CPU_COUNT	sched.h	85;"	d
CPU_COUNT_S	sched.h	92;"	d
CPU_EQUAL	sched.h	94;"	d
CPU_EQUAL_S	sched.h	96;"	d
CPU_FREE	sched.h	114;"	d
CPU_ISSET	sched.h	82;"	d
CPU_ISSET_S	sched.h	89;"	d
CPU_OR	sched.h	101;"	d
CPU_OR_S	sched.h	107;"	d
CPU_SET	sched.h	80;"	d
CPU_SETSIZE	sched.h	79;"	d
CPU_SET_S	sched.h	87;"	d
CPU_XOR	sched.h	103;"	d
CPU_XOR_S	sched.h	109;"	d
CPU_ZERO	sched.h	84;"	d
CPU_ZERO_S	sched.h	91;"	d
CRNCYSTR	langinfo.h	418;"	d
CURRENCY_SYMBOL	langinfo.h	363;"	d
C_IRGRP	cpio.h	54;"	d
C_IROTH	cpio.h	57;"	d
C_IRUSR	cpio.h	51;"	d
C_ISBLK	cpio.h	65;"	d
C_ISCHR	cpio.h	66;"	d
C_ISCTG	cpio.h	71;"	d
C_ISDIR	cpio.h	67;"	d
C_ISFIFO	cpio.h	68;"	d
C_ISGID	cpio.h	62;"	d
C_ISLNK	cpio.h	70;"	d
C_ISREG	cpio.h	72;"	d
C_ISSOCK	cpio.h	69;"	d
C_ISUID	cpio.h	61;"	d
C_ISVTX	cpio.h	63;"	d
C_IWGRP	cpio.h	55;"	d
C_IWOTH	cpio.h	58;"	d
C_IWUSR	cpio.h	52;"	d
C_IXGRP	cpio.h	56;"	d
C_IXOTH	cpio.h	59;"	d
C_IXUSR	cpio.h	53;"	d
DAY_1	langinfo.h	/^  DAY_1,			\/* Sunday *\/$/;"	e	enum:__anon20
DAY_1	langinfo.h	64;"	d
DAY_2	langinfo.h	/^  DAY_2,			\/* Monday *\/$/;"	e	enum:__anon20
DAY_2	langinfo.h	66;"	d
DAY_3	langinfo.h	/^  DAY_3,			\/* Tuesday *\/$/;"	e	enum:__anon20
DAY_3	langinfo.h	68;"	d
DAY_4	langinfo.h	/^  DAY_4,			\/* Wednesday *\/$/;"	e	enum:__anon20
DAY_4	langinfo.h	70;"	d
DAY_5	langinfo.h	/^  DAY_5,			\/* Thursday *\/$/;"	e	enum:__anon20
DAY_5	langinfo.h	72;"	d
DAY_6	langinfo.h	/^  DAY_6,			\/* Friday *\/$/;"	e	enum:__anon20
DAY_6	langinfo.h	74;"	d
DAY_7	langinfo.h	/^  DAY_7,			\/* Saturday *\/$/;"	e	enum:__anon20
DAY_7	langinfo.h	76;"	d
DECIMAL_POINT	langinfo.h	473;"	d
DF_1_CONFALT	elf.h	783;"	d
DF_1_DIRECT	elf.h	778;"	d
DF_1_DISPRELDNE	elf.h	785;"	d
DF_1_DISPRELPND	elf.h	786;"	d
DF_1_ENDFILTEE	elf.h	784;"	d
DF_1_GLOBAL	elf.h	771;"	d
DF_1_GROUP	elf.h	772;"	d
DF_1_INITFIRST	elf.h	775;"	d
DF_1_INTERPOSE	elf.h	780;"	d
DF_1_LOADFLTR	elf.h	774;"	d
DF_1_NODEFLIB	elf.h	781;"	d
DF_1_NODELETE	elf.h	773;"	d
DF_1_NODUMP	elf.h	782;"	d
DF_1_NOOPEN	elf.h	776;"	d
DF_1_NOW	elf.h	770;"	d
DF_1_ORIGIN	elf.h	777;"	d
DF_1_TRANS	elf.h	779;"	d
DF_BIND_NOW	elf.h	765;"	d
DF_ORIGIN	elf.h	762;"	d
DF_P1_GROUPPERM	elf.h	794;"	d
DF_P1_LAZYLOAD	elf.h	793;"	d
DF_STATIC_TLS	elf.h	766;"	d
DF_SYMBOLIC	elf.h	763;"	d
DF_TEXTREL	elf.h	764;"	d
DIR	dirent.h	/^typedef struct __dirstream DIR;$/;"	t	typeref:struct:__dirstream
DIRTYPE	tar.h	95;"	d
DMAXEXP	values.h	60;"	d
DMINEXP	values.h	58;"	d
DOMAIN	math.h	339;"	d
DOUBLEBITS	values.h	37;"	d
DTF_1_CONFEXP	elf.h	790;"	d
DTF_1_PARINIT	elf.h	789;"	d
DTTOIF	dirent.h	122;"	d
DT_ADDRNUM	elf.h	734;"	d
DT_ADDRRNGHI	elf.h	732;"	d
DT_ADDRRNGLO	elf.h	720;"	d
DT_ADDRTAGIDX	elf.h	733;"	d
DT_ALPHA_NUM	elf.h	1994;"	d
DT_ALPHA_PLTRO	elf.h	1993;"	d
DT_AUDIT	elf.h	728;"	d
DT_AUXILIARY	elf.h	756;"	d
DT_BIND_NOW	elf.h	678;"	d
DT_BLK	dirent.h	/^    DT_BLK = 6,$/;"	e	enum:__anon45
DT_BLK	dirent.h	109;"	d
DT_CHECKSUM	elf.h	702;"	d
DT_CHR	dirent.h	/^    DT_CHR = 2,$/;"	e	enum:__anon45
DT_CHR	dirent.h	105;"	d
DT_CONFIG	elf.h	726;"	d
DT_DEBUG	elf.h	675;"	d
DT_DEPAUDIT	elf.h	727;"	d
DT_DIR	dirent.h	/^    DT_DIR = 4,$/;"	e	enum:__anon45
DT_DIR	dirent.h	107;"	d
DT_ENCODING	elf.h	685;"	d
DT_EXTRANUM	elf.h	759;"	d
DT_EXTRATAGIDX	elf.h	758;"	d
DT_FEATURE_1	elf.h	706;"	d
DT_FIFO	dirent.h	/^    DT_FIFO = 1,$/;"	e	enum:__anon45
DT_FIFO	dirent.h	103;"	d
DT_FILTER	elf.h	757;"	d
DT_FINI	elf.h	667;"	d
DT_FINI_ARRAY	elf.h	680;"	d
DT_FINI_ARRAYSZ	elf.h	682;"	d
DT_FLAGS	elf.h	684;"	d
DT_FLAGS_1	elf.h	744;"	d
DT_GNU_CONFLICT	elf.h	724;"	d
DT_GNU_CONFLICTSZ	elf.h	700;"	d
DT_GNU_HASH	elf.h	721;"	d
DT_GNU_LIBLIST	elf.h	725;"	d
DT_GNU_LIBLISTSZ	elf.h	701;"	d
DT_GNU_PRELINKED	elf.h	699;"	d
DT_HASH	elf.h	658;"	d
DT_HIOS	elf.h	690;"	d
DT_HIPROC	elf.h	692;"	d
DT_IA_64_NUM	elf.h	2393;"	d
DT_IA_64_PLT_RESERVE	elf.h	2392;"	d
DT_INIT	elf.h	666;"	d
DT_INIT_ARRAY	elf.h	679;"	d
DT_INIT_ARRAYSZ	elf.h	681;"	d
DT_JMPREL	elf.h	677;"	d
DT_LNK	dirent.h	/^    DT_LNK = 10,$/;"	e	enum:__anon45
DT_LNK	dirent.h	113;"	d
DT_LOOS	elf.h	689;"	d
DT_LOPROC	elf.h	691;"	d
DT_MIPS_AUX_DYNAMIC	elf.h	1670;"	d
DT_MIPS_BASE_ADDRESS	elf.h	1624;"	d
DT_MIPS_COMPACT_SIZE	elf.h	1668;"	d
DT_MIPS_CONFLICT	elf.h	1626;"	d
DT_MIPS_CONFLICTNO	elf.h	1629;"	d
DT_MIPS_CXX_FLAGS	elf.h	1653;"	d
DT_MIPS_DELTA_CLASS	elf.h	1636;"	d
DT_MIPS_DELTA_CLASSSYM	elf.h	1649;"	d
DT_MIPS_DELTA_CLASSSYM_NO	elf.h	1651;"	d
DT_MIPS_DELTA_CLASS_NO	elf.h	1637;"	d
DT_MIPS_DELTA_INSTANCE	elf.h	1639;"	d
DT_MIPS_DELTA_INSTANCE_NO	elf.h	1640;"	d
DT_MIPS_DELTA_RELOC	elf.h	1642;"	d
DT_MIPS_DELTA_RELOC_NO	elf.h	1643;"	d
DT_MIPS_DELTA_SYM	elf.h	1645;"	d
DT_MIPS_DELTA_SYM_NO	elf.h	1647;"	d
DT_MIPS_DYNSTR_ALIGN	elf.h	1662;"	d
DT_MIPS_FLAGS	elf.h	1623;"	d
DT_MIPS_GOTSYM	elf.h	1633;"	d
DT_MIPS_GP_VALUE	elf.h	1669;"	d
DT_MIPS_HIDDEN_GOTIDX	elf.h	1658;"	d
DT_MIPS_HIPAGENO	elf.h	1634;"	d
DT_MIPS_ICHECKSUM	elf.h	1621;"	d
DT_MIPS_INTERFACE	elf.h	1661;"	d
DT_MIPS_INTERFACE_SIZE	elf.h	1663;"	d
DT_MIPS_IVERSION	elf.h	1622;"	d
DT_MIPS_LIBLIST	elf.h	1627;"	d
DT_MIPS_LIBLISTNO	elf.h	1630;"	d
DT_MIPS_LOCALPAGE_GOTIDX	elf.h	1656;"	d
DT_MIPS_LOCAL_GOTIDX	elf.h	1657;"	d
DT_MIPS_LOCAL_GOTNO	elf.h	1628;"	d
DT_MIPS_MSYM	elf.h	1625;"	d
DT_MIPS_NUM	elf.h	1677;"	d
DT_MIPS_OPTIONS	elf.h	1660;"	d
DT_MIPS_PERF_SUFFIX	elf.h	1666;"	d
DT_MIPS_PIXIE_INIT	elf.h	1654;"	d
DT_MIPS_PLTGOT	elf.h	1672;"	d
DT_MIPS_PROTECTED_GOTIDX	elf.h	1659;"	d
DT_MIPS_RLD_MAP	elf.h	1635;"	d
DT_MIPS_RLD_TEXT_RESOLVE_ADDR	elf.h	1664;"	d
DT_MIPS_RLD_VERSION	elf.h	1619;"	d
DT_MIPS_RWPLT	elf.h	1676;"	d
DT_MIPS_SYMBOL_LIB	elf.h	1655;"	d
DT_MIPS_SYMTABNO	elf.h	1631;"	d
DT_MIPS_TIME_STAMP	elf.h	1620;"	d
DT_MIPS_UNREFEXTNO	elf.h	1632;"	d
DT_MOVEENT	elf.h	704;"	d
DT_MOVESZ	elf.h	705;"	d
DT_MOVETAB	elf.h	730;"	d
DT_NEEDED	elf.h	655;"	d
DT_NULL	elf.h	654;"	d
DT_NUM	elf.h	688;"	d
DT_PLTGOT	elf.h	657;"	d
DT_PLTPAD	elf.h	729;"	d
DT_PLTPADSZ	elf.h	703;"	d
DT_PLTREL	elf.h	674;"	d
DT_PLTRELSZ	elf.h	656;"	d
DT_POSFLAG_1	elf.h	707;"	d
DT_PPC64_GLINK	elf.h	2240;"	d
DT_PPC64_NUM	elf.h	2243;"	d
DT_PPC64_OPD	elf.h	2241;"	d
DT_PPC64_OPDSZ	elf.h	2242;"	d
DT_PPC_GOT	elf.h	2116;"	d
DT_PPC_NUM	elf.h	2117;"	d
DT_PREINIT_ARRAY	elf.h	686;"	d
DT_PREINIT_ARRAYSZ	elf.h	687;"	d
DT_PROCNUM	elf.h	693;"	d
DT_REG	dirent.h	/^    DT_REG = 8,$/;"	e	enum:__anon45
DT_REG	dirent.h	111;"	d
DT_REL	elf.h	671;"	d
DT_RELA	elf.h	661;"	d
DT_RELACOUNT	elf.h	740;"	d
DT_RELAENT	elf.h	663;"	d
DT_RELASZ	elf.h	662;"	d
DT_RELCOUNT	elf.h	741;"	d
DT_RELENT	elf.h	673;"	d
DT_RELSZ	elf.h	672;"	d
DT_RPATH	elf.h	669;"	d
DT_RUNPATH	elf.h	683;"	d
DT_SOCK	dirent.h	/^    DT_SOCK = 12,$/;"	e	enum:__anon45
DT_SOCK	dirent.h	115;"	d
DT_SONAME	elf.h	668;"	d
DT_SPARC_NUM	elf.h	1340;"	d
DT_SPARC_REGISTER	elf.h	1339;"	d
DT_STRSZ	elf.h	664;"	d
DT_STRTAB	elf.h	659;"	d
DT_SYMBOLIC	elf.h	670;"	d
DT_SYMENT	elf.h	665;"	d
DT_SYMINENT	elf.h	710;"	d
DT_SYMINFO	elf.h	731;"	d
DT_SYMINSZ	elf.h	709;"	d
DT_SYMTAB	elf.h	660;"	d
DT_TEXTREL	elf.h	676;"	d
DT_TLSDESC_GOT	elf.h	723;"	d
DT_TLSDESC_PLT	elf.h	722;"	d
DT_UNKNOWN	dirent.h	/^    DT_UNKNOWN = 0,$/;"	e	enum:__anon45
DT_UNKNOWN	dirent.h	101;"	d
DT_VALNUM	elf.h	713;"	d
DT_VALRNGHI	elf.h	711;"	d
DT_VALRNGLO	elf.h	698;"	d
DT_VALTAGIDX	elf.h	712;"	d
DT_VERDEF	elf.h	745;"	d
DT_VERDEFNUM	elf.h	747;"	d
DT_VERNEED	elf.h	748;"	d
DT_VERNEEDNUM	elf.h	750;"	d
DT_VERSIONTAGIDX	elf.h	751;"	d
DT_VERSIONTAGNUM	elf.h	752;"	d
DT_VERSYM	elf.h	738;"	d
DT_WHT	dirent.h	/^    DT_WHT = 14$/;"	e	enum:__anon45
DT_WHT	dirent.h	117;"	d
D_FMT	langinfo.h	/^  D_FMT,			\/* Date format for strftime.  *\/$/;"	e	enum:__anon20
D_FMT	langinfo.h	138;"	d
D_T_FMT	langinfo.h	/^  D_T_FMT,			\/* Date and time format for strftime.  *\/$/;"	e	enum:__anon20
D_T_FMT	langinfo.h	136;"	d
Dl_info	dlfcn.h	/^} Dl_info;$/;"	t	typeref:struct:__anon9
Dl_serinfo	dlfcn.h	/^} Dl_serinfo;$/;"	t	typeref:struct:__anon13
Dl_serpath	dlfcn.h	/^} Dl_serpath;$/;"	t	typeref:struct:__anon12
EAI_ADDRFAMILY	netdb.h	632;"	d
EAI_AGAIN	netdb.h	622;"	d
EAI_ALLDONE	netdb.h	636;"	d
EAI_BADFLAGS	netdb.h	620;"	d
EAI_CANCELED	netdb.h	634;"	d
EAI_FAIL	netdb.h	623;"	d
EAI_FAMILY	netdb.h	624;"	d
EAI_IDN_ENCODE	netdb.h	638;"	d
EAI_INPROGRESS	netdb.h	633;"	d
EAI_INTR	netdb.h	637;"	d
EAI_MEMORY	netdb.h	627;"	d
EAI_NODATA	netdb.h	631;"	d
EAI_NONAME	netdb.h	621;"	d
EAI_NOTCANCELED	netdb.h	635;"	d
EAI_OVERFLOW	netdb.h	629;"	d
EAI_SERVICE	netdb.h	626;"	d
EAI_SOCKTYPE	netdb.h	625;"	d
EAI_SYSTEM	netdb.h	628;"	d
EFA_PARISC_1_0	elf.h	1749;"	d
EFA_PARISC_1_1	elf.h	1750;"	d
EFA_PARISC_2_0	elf.h	1751;"	d
EF_ALPHA_32BIT	elf.h	1929;"	d
EF_ALPHA_CANRELAX	elf.h	1930;"	d
EF_ARM_ALIGN8	elf.h	2255;"	d
EF_ARM_APCS_26	elf.h	2252;"	d
EF_ARM_APCS_FLOAT	elf.h	2253;"	d
EF_ARM_BE8	elf.h	2271;"	d
EF_ARM_DYNSYMSUSESEGIDX	elf.h	2266;"	d
EF_ARM_EABIMASK	elf.h	2268;"	d
EF_ARM_EABI_UNKNOWN	elf.h	2275;"	d
EF_ARM_EABI_VER1	elf.h	2276;"	d
EF_ARM_EABI_VER2	elf.h	2277;"	d
EF_ARM_EABI_VER3	elf.h	2278;"	d
EF_ARM_EABI_VER4	elf.h	2279;"	d
EF_ARM_EABI_VER5	elf.h	2280;"	d
EF_ARM_EABI_VERSION	elf.h	2274;"	d
EF_ARM_HASENTRY	elf.h	2250;"	d
EF_ARM_INTERWORK	elf.h	2251;"	d
EF_ARM_LE8	elf.h	2272;"	d
EF_ARM_MAPSYMSFIRST	elf.h	2267;"	d
EF_ARM_MAVERICK_FLOAT	elf.h	2260;"	d
EF_ARM_NEW_ABI	elf.h	2256;"	d
EF_ARM_OLD_ABI	elf.h	2257;"	d
EF_ARM_PIC	elf.h	2254;"	d
EF_ARM_RELEXEC	elf.h	2249;"	d
EF_ARM_SOFT_FLOAT	elf.h	2258;"	d
EF_ARM_SYMSARESORTED	elf.h	2265;"	d
EF_ARM_VFP_FLOAT	elf.h	2259;"	d
EF_CPU32	elf.h	1101;"	d
EF_IA_64_ABI64	elf.h	2370;"	d
EF_IA_64_ARCH	elf.h	2371;"	d
EF_IA_64_MASKOS	elf.h	2369;"	d
EF_MIPS_64BIT_WHIRL	elf.h	1361;"	d
EF_MIPS_ABI2	elf.h	1362;"	d
EF_MIPS_ABI_ON32	elf.h	1363;"	d
EF_MIPS_ARCH	elf.h	1364;"	d
EF_MIPS_ARCH_1	elf.h	1368;"	d
EF_MIPS_ARCH_2	elf.h	1369;"	d
EF_MIPS_ARCH_3	elf.h	1370;"	d
EF_MIPS_ARCH_32	elf.h	1373;"	d
EF_MIPS_ARCH_4	elf.h	1371;"	d
EF_MIPS_ARCH_5	elf.h	1372;"	d
EF_MIPS_ARCH_64	elf.h	1374;"	d
EF_MIPS_CPIC	elf.h	1359;"	d
EF_MIPS_NOREORDER	elf.h	1357;"	d
EF_MIPS_PIC	elf.h	1358;"	d
EF_MIPS_XGOT	elf.h	1360;"	d
EF_PARISC_ARCH	elf.h	1745;"	d
EF_PARISC_EXT	elf.h	1739;"	d
EF_PARISC_LAZYSWAP	elf.h	1744;"	d
EF_PARISC_LSB	elf.h	1740;"	d
EF_PARISC_NO_KABP	elf.h	1742;"	d
EF_PARISC_TRAPNIL	elf.h	1738;"	d
EF_PARISC_WIDE	elf.h	1741;"	d
EF_PPC_EMB	elf.h	1999;"	d
EF_PPC_RELOCATABLE	elf.h	2002;"	d
EF_PPC_RELOCATABLE_LIB	elf.h	2003;"	d
EF_S390_HIGH_GPRS	elf.h	2549;"	d
EF_SH1	elf.h	2483;"	d
EF_SH2	elf.h	2484;"	d
EF_SH2A	elf.h	2493;"	d
EF_SH2A_NOFPU	elf.h	2497;"	d
EF_SH2A_SH3E	elf.h	2502;"	d
EF_SH2A_SH3_NOFPU	elf.h	2500;"	d
EF_SH2A_SH4	elf.h	2501;"	d
EF_SH2A_SH4_NOFPU	elf.h	2499;"	d
EF_SH2E	elf.h	2491;"	d
EF_SH3	elf.h	2485;"	d
EF_SH3E	elf.h	2489;"	d
EF_SH3_DSP	elf.h	2487;"	d
EF_SH3_NOMMU	elf.h	2498;"	d
EF_SH4	elf.h	2490;"	d
EF_SH4A	elf.h	2492;"	d
EF_SH4AL_DSP	elf.h	2488;"	d
EF_SH4A_NOFPU	elf.h	2495;"	d
EF_SH4_NOFPU	elf.h	2494;"	d
EF_SH4_NOMMU_NOFPU	elf.h	2496;"	d
EF_SH_DSP	elf.h	2486;"	d
EF_SH_MACH_MASK	elf.h	2481;"	d
EF_SH_UNKNOWN	elf.h	2482;"	d
EF_SPARCV9_MM	elf.h	1225;"	d
EF_SPARCV9_PSO	elf.h	1227;"	d
EF_SPARCV9_RMO	elf.h	1228;"	d
EF_SPARCV9_TSO	elf.h	1226;"	d
EF_SPARC_32PLUS	elf.h	1231;"	d
EF_SPARC_EXT_MASK	elf.h	1230;"	d
EF_SPARC_HAL_R1	elf.h	1233;"	d
EF_SPARC_LEDATA	elf.h	1229;"	d
EF_SPARC_SUN_US1	elf.h	1232;"	d
EF_SPARC_SUN_US3	elf.h	1234;"	d
EI_ABIVERSION	elf.h	157;"	d
EI_CLASS	elf.h	125;"	d
EI_DATA	elf.h	131;"	d
EI_MAG0	elf.h	109;"	d
EI_MAG1	elf.h	112;"	d
EI_MAG2	elf.h	115;"	d
EI_MAG3	elf.h	118;"	d
EI_NIDENT	elf.h	67;"	d
EI_OSABI	elf.h	140;"	d
EI_PAD	elf.h	159;"	d
EI_VERSION	elf.h	137;"	d
ELF32_M_INFO	elf.h	1091;"	d
ELF32_M_SIZE	elf.h	1090;"	d
ELF32_M_SYM	elf.h	1089;"	d
ELF32_R_INFO	elf.h	530;"	d
ELF32_R_SYM	elf.h	528;"	d
ELF32_R_TYPE	elf.h	529;"	d
ELF32_ST_BIND	elf.h	432;"	d
ELF32_ST_INFO	elf.h	434;"	d
ELF32_ST_TYPE	elf.h	433;"	d
ELF32_ST_VISIBILITY	elf.h	479;"	d
ELF64_M_INFO	elf.h	1095;"	d
ELF64_M_SIZE	elf.h	1094;"	d
ELF64_M_SYM	elf.h	1093;"	d
ELF64_R_INFO	elf.h	534;"	d
ELF64_R_SYM	elf.h	532;"	d
ELF64_R_TYPE	elf.h	533;"	d
ELF64_ST_BIND	elf.h	437;"	d
ELF64_ST_INFO	elf.h	439;"	d
ELF64_ST_TYPE	elf.h	438;"	d
ELF64_ST_VISIBILITY	elf.h	482;"	d
ELFCLASS32	elf.h	127;"	d
ELFCLASS64	elf.h	128;"	d
ELFCLASSNONE	elf.h	126;"	d
ELFCLASSNUM	elf.h	129;"	d
ELFDATA2LSB	elf.h	133;"	d
ELFDATA2MSB	elf.h	134;"	d
ELFDATANONE	elf.h	132;"	d
ELFDATANUM	elf.h	135;"	d
ELFMAG	elf.h	122;"	d
ELFMAG0	elf.h	110;"	d
ELFMAG1	elf.h	113;"	d
ELFMAG2	elf.h	116;"	d
ELFMAG3	elf.h	119;"	d
ELFOSABI_AIX	elf.h	147;"	d
ELFOSABI_ARM	elf.h	154;"	d
ELFOSABI_ARM_AEABI	elf.h	153;"	d
ELFOSABI_FREEBSD	elf.h	149;"	d
ELFOSABI_HPUX	elf.h	143;"	d
ELFOSABI_IRIX	elf.h	148;"	d
ELFOSABI_LINUX	elf.h	145;"	d
ELFOSABI_MODESTO	elf.h	151;"	d
ELFOSABI_NETBSD	elf.h	144;"	d
ELFOSABI_NONE	elf.h	141;"	d
ELFOSABI_OPENBSD	elf.h	152;"	d
ELFOSABI_SOLARIS	elf.h	146;"	d
ELFOSABI_STANDALONE	elf.h	155;"	d
ELFOSABI_SYSV	elf.h	142;"	d
ELFOSABI_TRU64	elf.h	150;"	d
ELF_NOTE_ABI	elf.h	1044;"	d
ELF_NOTE_GNU	elf.h	1026;"	d
ELF_NOTE_OS_FREEBSD	elf.h	1051;"	d
ELF_NOTE_OS_GNU	elf.h	1049;"	d
ELF_NOTE_OS_LINUX	elf.h	1048;"	d
ELF_NOTE_OS_SOLARIS2	elf.h	1050;"	d
ELF_NOTE_PAGESIZE_HINT	elf.h	1032;"	d
ELF_NOTE_SOLARIS	elf.h	1023;"	d
EM_386	elf.h	179;"	d
EM_68HC05	elf.h	230;"	d
EM_68HC08	elf.h	229;"	d
EM_68HC11	elf.h	228;"	d
EM_68HC12	elf.h	212;"	d
EM_68HC16	elf.h	227;"	d
EM_68K	elf.h	180;"	d
EM_860	elf.h	182;"	d
EM_88K	elf.h	181;"	d
EM_960	elf.h	190;"	d
EM_ALPHA	elf.h	259;"	d
EM_ARC	elf.h	204;"	d
EM_ARC_A5	elf.h	251;"	d
EM_ARM	elf.h	199;"	d
EM_AVR	elf.h	241;"	d
EM_COLDFIRE	elf.h	211;"	d
EM_CRIS	elf.h	234;"	d
EM_D10V	elf.h	243;"	d
EM_D30V	elf.h	244;"	d
EM_FAKE_ALPHA	elf.h	200;"	d
EM_FIREPATH	elf.h	236;"	d
EM_FR20	elf.h	196;"	d
EM_FR30	elf.h	242;"	d
EM_FX66	elf.h	224;"	d
EM_H8S	elf.h	207;"	d
EM_H8_300	elf.h	205;"	d
EM_H8_300H	elf.h	206;"	d
EM_H8_500	elf.h	208;"	d
EM_HUANY	elf.h	239;"	d
EM_IA_64	elf.h	209;"	d
EM_JAVELIN	elf.h	235;"	d
EM_M32	elf.h	177;"	d
EM_M32R	elf.h	246;"	d
EM_ME16	elf.h	218;"	d
EM_MIPS	elf.h	183;"	d
EM_MIPS_RS3_LE	elf.h	185;"	d
EM_MIPS_X	elf.h	210;"	d
EM_MMA	elf.h	213;"	d
EM_MMIX	elf.h	238;"	d
EM_MN10200	elf.h	248;"	d
EM_MN10300	elf.h	247;"	d
EM_NCPU	elf.h	215;"	d
EM_NDR1	elf.h	216;"	d
EM_NONE	elf.h	176;"	d
EM_NUM	elf.h	253;"	d
EM_OPENRISC	elf.h	250;"	d
EM_PARISC	elf.h	187;"	d
EM_PCP	elf.h	214;"	d
EM_PDSP	elf.h	222;"	d
EM_PJ	elf.h	249;"	d
EM_PPC	elf.h	191;"	d
EM_PPC64	elf.h	192;"	d
EM_PRISM	elf.h	240;"	d
EM_RCE	elf.h	198;"	d
EM_RH32	elf.h	197;"	d
EM_S370	elf.h	184;"	d
EM_S390	elf.h	193;"	d
EM_SH	elf.h	201;"	d
EM_SPARC	elf.h	178;"	d
EM_SPARC32PLUS	elf.h	189;"	d
EM_SPARCV9	elf.h	202;"	d
EM_ST100	elf.h	219;"	d
EM_ST19	elf.h	232;"	d
EM_ST7	elf.h	226;"	d
EM_ST9PLUS	elf.h	225;"	d
EM_STARCORE	elf.h	217;"	d
EM_SVX	elf.h	231;"	d
EM_TINYJ	elf.h	220;"	d
EM_TRICORE	elf.h	203;"	d
EM_V800	elf.h	195;"	d
EM_V850	elf.h	245;"	d
EM_VAX	elf.h	233;"	d
EM_VPP500	elf.h	188;"	d
EM_X86_64	elf.h	221;"	d
EM_XTENSA	elf.h	252;"	d
EM_ZSP	elf.h	237;"	d
ENTER	search.h	/^    ENTER$/;"	e	enum:__anon77
ENTRY	search.h	/^ENTRY;$/;"	t	typeref:struct:entry
EOF	libio.h	90;"	d
EOF	stdio.h	135;"	d
ERA	langinfo.h	/^  ERA,				\/* Alternate era.  *\/$/;"	e	enum:__anon20
ERA	langinfo.h	145;"	d
ERA_D_FMT	langinfo.h	/^  ERA_D_FMT,			\/* Date in alternate era format.  *\/$/;"	e	enum:__anon20
ERA_D_FMT	langinfo.h	151;"	d
ERA_D_T_FMT	langinfo.h	/^  ERA_D_T_FMT,			\/* Date and time in alternate era format.  *\/$/;"	e	enum:__anon20
ERA_D_T_FMT	langinfo.h	155;"	d
ERA_T_FMT	langinfo.h	/^  ERA_T_FMT,			\/* Time in alternate era format.  *\/$/;"	e	enum:__anon20
ERA_T_FMT	langinfo.h	157;"	d
ERA_YEAR	langinfo.h	148;"	d
ET_CORE	elf.h	167;"	d
ET_DYN	elf.h	166;"	d
ET_EXEC	elf.h	165;"	d
ET_HIOS	elf.h	170;"	d
ET_HIPROC	elf.h	172;"	d
ET_LOOS	elf.h	169;"	d
ET_LOPROC	elf.h	171;"	d
ET_NONE	elf.h	163;"	d
ET_NUM	elf.h	168;"	d
ET_REL	elf.h	164;"	d
EV_CURRENT	elf.h	264;"	d
EV_NONE	elf.h	263;"	d
EV_NUM	elf.h	265;"	d
EXIT_FAILURE	stdlib.h	134;"	d
EXIT_SUCCESS	stdlib.h	135;"	d
EX_CANTCREAT	sysexits.h	105;"	d
EX_CONFIG	sysexits.h	110;"	d
EX_DATAERR	sysexits.h	97;"	d
EX_IOERR	sysexits.h	106;"	d
EX_NOHOST	sysexits.h	100;"	d
EX_NOINPUT	sysexits.h	98;"	d
EX_NOPERM	sysexits.h	109;"	d
EX_NOUSER	sysexits.h	99;"	d
EX_OK	sysexits.h	92;"	d
EX_OSERR	sysexits.h	103;"	d
EX_OSFILE	sysexits.h	104;"	d
EX_PROTOCOL	sysexits.h	108;"	d
EX_SOFTWARE	sysexits.h	102;"	d
EX_TEMPFAIL	sysexits.h	107;"	d
EX_UNAVAILABLE	sysexits.h	101;"	d
EX_USAGE	sysexits.h	96;"	d
EX__BASE	sysexits.h	94;"	d
EX__MAX	sysexits.h	112;"	d
E_MIPS_ARCH_1	elf.h	1378;"	d
E_MIPS_ARCH_2	elf.h	1379;"	d
E_MIPS_ARCH_3	elf.h	1380;"	d
E_MIPS_ARCH_32	elf.h	1383;"	d
E_MIPS_ARCH_4	elf.h	1381;"	d
E_MIPS_ARCH_5	elf.h	1382;"	d
E_MIPS_ARCH_64	elf.h	1384;"	d
Elf32_Addr	elf.h	/^typedef uint32_t Elf32_Addr;$/;"	t
Elf32_Conflict	elf.h	/^typedef Elf32_Addr Elf32_Conflict;$/;"	t
Elf32_Dyn	elf.h	/^} Elf32_Dyn;$/;"	t	typeref:struct:__anon99
Elf32_Ehdr	elf.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anon85
Elf32_Half	elf.h	/^typedef uint16_t Elf32_Half;$/;"	t
Elf32_Lib	elf.h	/^} Elf32_Lib;$/;"	t	typeref:struct:__anon125
Elf32_Move	elf.h	/^} Elf32_Move;$/;"	t	typeref:struct:__anon117
Elf32_Nhdr	elf.h	/^} Elf32_Nhdr;$/;"	t	typeref:struct:__anon115
Elf32_Off	elf.h	/^typedef uint32_t Elf32_Off;$/;"	t
Elf32_Phdr	elf.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon97
Elf32_RegInfo	elf.h	/^} Elf32_RegInfo;$/;"	t	typeref:struct:__anon122
Elf32_Rel	elf.h	/^} Elf32_Rel;$/;"	t	typeref:struct:__anon93
Elf32_Rela	elf.h	/^} Elf32_Rela;$/;"	t	typeref:struct:__anon95
Elf32_Section	elf.h	/^typedef uint16_t Elf32_Section;$/;"	t
Elf32_Shdr	elf.h	/^} Elf32_Shdr;$/;"	t	typeref:struct:__anon87
Elf32_Sword	elf.h	/^typedef	int32_t  Elf32_Sword;$/;"	t
Elf32_Sxword	elf.h	/^typedef	int64_t  Elf32_Sxword;$/;"	t
Elf32_Sym	elf.h	/^} Elf32_Sym;$/;"	t	typeref:struct:__anon89
Elf32_Syminfo	elf.h	/^} Elf32_Syminfo;$/;"	t	typeref:struct:__anon91
Elf32_Verdaux	elf.h	/^} Elf32_Verdaux;$/;"	t	typeref:struct:__anon105
Elf32_Verdef	elf.h	/^} Elf32_Verdef;$/;"	t	typeref:struct:__anon103
Elf32_Vernaux	elf.h	/^} Elf32_Vernaux;$/;"	t	typeref:struct:__anon109
Elf32_Verneed	elf.h	/^} Elf32_Verneed;$/;"	t	typeref:struct:__anon107
Elf32_Versym	elf.h	/^typedef Elf32_Half Elf32_Versym;$/;"	t
Elf32_Word	elf.h	/^typedef uint32_t Elf32_Word;$/;"	t
Elf32_Xword	elf.h	/^typedef uint64_t Elf32_Xword;$/;"	t
Elf32_auxv_t	elf.h	/^} Elf32_auxv_t;$/;"	t	typeref:struct:__anon111
Elf32_gptab	elf.h	/^} Elf32_gptab;$/;"	t	typeref:union:__anon119
Elf64_Addr	elf.h	/^typedef uint64_t Elf64_Addr;$/;"	t
Elf64_Dyn	elf.h	/^} Elf64_Dyn;$/;"	t	typeref:struct:__anon101
Elf64_Ehdr	elf.h	/^} Elf64_Ehdr;$/;"	t	typeref:struct:__anon86
Elf64_Half	elf.h	/^typedef uint16_t Elf64_Half;$/;"	t
Elf64_Lib	elf.h	/^} Elf64_Lib;$/;"	t	typeref:struct:__anon126
Elf64_Move	elf.h	/^} Elf64_Move;$/;"	t	typeref:struct:__anon118
Elf64_Nhdr	elf.h	/^} Elf64_Nhdr;$/;"	t	typeref:struct:__anon116
Elf64_Off	elf.h	/^typedef uint64_t Elf64_Off;$/;"	t
Elf64_Phdr	elf.h	/^} Elf64_Phdr;$/;"	t	typeref:struct:__anon98
Elf64_Rel	elf.h	/^} Elf64_Rel;$/;"	t	typeref:struct:__anon94
Elf64_Rela	elf.h	/^} Elf64_Rela;$/;"	t	typeref:struct:__anon96
Elf64_Section	elf.h	/^typedef uint16_t Elf64_Section;$/;"	t
Elf64_Shdr	elf.h	/^} Elf64_Shdr;$/;"	t	typeref:struct:__anon88
Elf64_Sword	elf.h	/^typedef	int32_t  Elf64_Sword;$/;"	t
Elf64_Sxword	elf.h	/^typedef	int64_t  Elf64_Sxword;$/;"	t
Elf64_Sym	elf.h	/^} Elf64_Sym;$/;"	t	typeref:struct:__anon90
Elf64_Syminfo	elf.h	/^} Elf64_Syminfo;$/;"	t	typeref:struct:__anon92
Elf64_Verdaux	elf.h	/^} Elf64_Verdaux;$/;"	t	typeref:struct:__anon106
Elf64_Verdef	elf.h	/^} Elf64_Verdef;$/;"	t	typeref:struct:__anon104
Elf64_Vernaux	elf.h	/^} Elf64_Vernaux;$/;"	t	typeref:struct:__anon110
Elf64_Verneed	elf.h	/^} Elf64_Verneed;$/;"	t	typeref:struct:__anon108
Elf64_Versym	elf.h	/^typedef Elf64_Half Elf64_Versym;$/;"	t
Elf64_Word	elf.h	/^typedef uint32_t Elf64_Word;$/;"	t
Elf64_Xword	elf.h	/^typedef uint64_t Elf64_Xword;$/;"	t
Elf64_auxv_t	elf.h	/^} Elf64_auxv_t;$/;"	t	typeref:struct:__anon113
ElfW	link.h	31;"	d
Elf_Options	elf.h	/^} Elf_Options;$/;"	t	typeref:struct:__anon123
Elf_Options_Hw	elf.h	/^} Elf_Options_Hw;$/;"	t	typeref:struct:__anon124
Expat_External_INCLUDED	expat_external.h	6;"	d
Expat_INCLUDED	expat.h	6;"	d
FAR	zconf.h	248;"	d
FAR	zconf.h	250;"	d
FAR	zconf.h	257;"	d
FAR	zconf.h	259;"	d
FAR	zconf.h	283;"	d
FAR	zconf.h	324;"	d
FIFOTYPE	tar.h	96;"	d
FILE	stdio.h	/^typedef struct _IO_FILE FILE;$/;"	t	typeref:struct:_IO_FILE
FIND	search.h	/^    FIND,$/;"	e	enum:__anon77
FLEX_STD	FlexLexer.h	53;"	d
FLOATBITS	values.h	38;"	d
FMAXEXP	values.h	61;"	d
FMINEXP	values.h	59;"	d
FNM_CASEFOLD	fnmatch.h	48;"	d
FNM_EXTMATCH	fnmatch.h	49;"	d
FNM_FILE_NAME	fnmatch.h	46;"	d
FNM_LEADING_DIR	fnmatch.h	47;"	d
FNM_NOESCAPE	fnmatch.h	37;"	d
FNM_NOESCAPE	fnmatch.h	42;"	d
FNM_NOMATCH	fnmatch.h	53;"	d
FNM_NOSYS	fnmatch.h	60;"	d
FNM_PATHNAME	fnmatch.h	36;"	d
FNM_PATHNAME	fnmatch.h	41;"	d
FNM_PERIOD	fnmatch.h	38;"	d
FNM_PERIOD	fnmatch.h	43;"	d
FP_INFINITE	math.h	/^    FP_INFINITE,$/;"	e	enum:__anon56
FP_INFINITE	math.h	207;"	d
FP_NAN	math.h	/^    FP_NAN,$/;"	e	enum:__anon56
FP_NAN	math.h	205;"	d
FP_NORMAL	math.h	/^    FP_NORMAL$/;"	e	enum:__anon56
FP_NORMAL	math.h	213;"	d
FP_SUBNORMAL	math.h	/^    FP_SUBNORMAL,$/;"	e	enum:__anon56
FP_SUBNORMAL	math.h	211;"	d
FP_ZERO	math.h	/^    FP_ZERO,$/;"	e	enum:__anon56
FP_ZERO	math.h	209;"	d
FRAC_DIGITS	langinfo.h	391;"	d
FSETLOCKING_BYCALLER	stdio_ext.h	/^  FSETLOCKING_BYCALLER$/;"	e	enum:__anon14
FSETLOCKING_BYCALLER	stdio_ext.h	39;"	d
FSETLOCKING_INTERNAL	stdio_ext.h	/^  FSETLOCKING_INTERNAL,$/;"	e	enum:__anon14
FSETLOCKING_INTERNAL	stdio_ext.h	36;"	d
FSETLOCKING_QUERY	stdio_ext.h	/^  FSETLOCKING_QUERY = 0,$/;"	e	enum:__anon14
FSETLOCKING_QUERY	stdio_ext.h	32;"	d
FSTAB	fstab.h	49;"	d
FSTAB_RO	fstab.h	53;"	d
FSTAB_RQ	fstab.h	52;"	d
FSTAB_RW	fstab.h	51;"	d
FSTAB_SW	fstab.h	54;"	d
FSTAB_XX	fstab.h	55;"	d
FTS	fts.h	/^} FTS;$/;"	t	typeref:struct:__anon58
FTSENT	fts.h	/^} FTSENT;$/;"	t	typeref:struct:_ftsent
FTS_AGAIN	fts.h	112;"	d
FTS_COMFOLLOW	fts.h	56;"	d
FTS_D	fts.h	92;"	d
FTS_DC	fts.h	93;"	d
FTS_DEFAULT	fts.h	94;"	d
FTS_DNR	fts.h	95;"	d
FTS_DONTCHDIR	fts.h	108;"	d
FTS_DOT	fts.h	96;"	d
FTS_DP	fts.h	97;"	d
FTS_ERR	fts.h	98;"	d
FTS_F	fts.h	99;"	d
FTS_FOLLOW	fts.h	113;"	d
FTS_INIT	fts.h	100;"	d
FTS_LOGICAL	fts.h	57;"	d
FTS_NAMEONLY	fts.h	66;"	d
FTS_NOCHDIR	fts.h	58;"	d
FTS_NOINSTR	fts.h	114;"	d
FTS_NOSTAT	fts.h	59;"	d
FTS_NS	fts.h	101;"	d
FTS_NSOK	fts.h	102;"	d
FTS_OPTIONMASK	fts.h	64;"	d
FTS_PHYSICAL	fts.h	60;"	d
FTS_ROOTLEVEL	fts.h	89;"	d
FTS_ROOTPARENTLEVEL	fts.h	88;"	d
FTS_SEEDOT	fts.h	61;"	d
FTS_SKIP	fts.h	115;"	d
FTS_SL	fts.h	103;"	d
FTS_SLNONE	fts.h	104;"	d
FTS_STOP	fts.h	67;"	d
FTS_SYMFOLLOW	fts.h	109;"	d
FTS_W	fts.h	105;"	d
FTS_WHITEOUT	fts.h	63;"	d
FTS_XDEV	fts.h	62;"	d
FTW	ftw.h	/^struct FTW$/;"	s
FTW::base	ftw.h	/^    int base;$/;"	m	struct:FTW	access:public
FTW::level	ftw.h	/^    int level;$/;"	m	struct:FTW	access:public
FTW_ACTIONRETVAL	ftw.h	/^  FTW_ACTIONRETVAL = 16	\/* Assume callback to return FTW_* values instead of$/;"	e	enum:__anon73
FTW_ACTIONRETVAL	ftw.h	81;"	d
FTW_CHDIR	ftw.h	/^  FTW_CHDIR = 4,	\/* Change to current directory while processing it.  *\/$/;"	e	enum:__anon73
FTW_CHDIR	ftw.h	74;"	d
FTW_CONTINUE	ftw.h	/^  FTW_CONTINUE = 0,	\/* Continue with next sibling or for FTW_D with the$/;"	e	enum:__anon74
FTW_CONTINUE	ftw.h	91;"	d
FTW_D	ftw.h	/^  FTW_D,		\/* Directory.  *\/$/;"	e	enum:__anon72
FTW_D	ftw.h	41;"	d
FTW_DEPTH	ftw.h	/^  FTW_DEPTH = 8		\/* Report files in directory before directory itself.*\/$/;"	e	enum:__anon73
FTW_DEPTH	ftw.h	76;"	d
FTW_DNR	ftw.h	/^  FTW_DNR,		\/* Unreadable directory.  *\/$/;"	e	enum:__anon72
FTW_DNR	ftw.h	43;"	d
FTW_DP	ftw.h	/^  FTW_DP,		\/* Directory, all subdirs have been visited. *\/$/;"	e	enum:__anon72
FTW_DP	ftw.h	56;"	d
FTW_F	ftw.h	/^  FTW_F,		\/* Regular file.  *\/$/;"	e	enum:__anon72
FTW_F	ftw.h	39;"	d
FTW_MOUNT	ftw.h	/^  FTW_MOUNT = 2,	\/* Report only files on same file system as the$/;"	e	enum:__anon73
FTW_MOUNT	ftw.h	72;"	d
FTW_NS	ftw.h	/^  FTW_NS,		\/* Unstatable file.  *\/$/;"	e	enum:__anon72
FTW_NS	ftw.h	45;"	d
FTW_PHYS	ftw.h	/^  FTW_PHYS = 1,		\/* Perform physical walk, ignore symlinks.  *\/$/;"	e	enum:__anon73
FTW_PHYS	ftw.h	69;"	d
FTW_SKIP_SIBLINGS	ftw.h	/^  FTW_SKIP_SIBLINGS = 3,\/* Continue with FTW_DP callback for current directory$/;"	e	enum:__anon74
FTW_SKIP_SIBLINGS	ftw.h	101;"	d
FTW_SKIP_SUBTREE	ftw.h	/^  FTW_SKIP_SUBTREE = 2,	\/* Only meaningful for FTW_D: Don't walk through the$/;"	e	enum:__anon74
FTW_SKIP_SUBTREE	ftw.h	98;"	d
FTW_SL	ftw.h	/^  FTW_SL,		\/* Symbolic link.  *\/$/;"	e	enum:__anon72
FTW_SL	ftw.h	50;"	d
FTW_SLN	ftw.h	/^  FTW_SLN		\/* Symbolic link naming non-existing file.  *\/$/;"	e	enum:__anon72
FTW_SLN	ftw.h	58;"	d
FTW_STOP	ftw.h	/^  FTW_STOP = 1,		\/* Return from `ftw' or `nftw' with FTW_STOP as return$/;"	e	enum:__anon74
FTW_STOP	ftw.h	94;"	d
F_LOCK	fcntl.h	189;"	d
F_LOCK	unistd.h	1089;"	d
F_OK	fcntl.h	94;"	d
F_OK	unistd.h	285;"	d
F_TEST	fcntl.h	191;"	d
F_TEST	unistd.h	1091;"	d
F_TLOCK	fcntl.h	190;"	d
F_TLOCK	unistd.h	1090;"	d
F_ULOCK	fcntl.h	188;"	d
F_ULOCK	unistd.h	1088;"	d
FlexLexer	FlexLexer.h	/^class FlexLexer {$/;"	c
FlexLexer::YYLeng	FlexLexer.h	/^	int YYLeng()	const	{ return yyleng; }$/;"	f	class:FlexLexer	access:public	signature:() const
FlexLexer::YYText	FlexLexer.h	/^	const char* YYText() const	{ return yytext; }$/;"	f	class:FlexLexer	access:public	signature:() const
FlexLexer::debug	FlexLexer.h	/^	int debug() const		{ return yy_flex_debug; }$/;"	f	class:FlexLexer	access:public	signature:() const
FlexLexer::lineno	FlexLexer.h	/^	int lineno() const		{ return yylineno; }$/;"	f	class:FlexLexer	access:public	signature:() const
FlexLexer::set_debug	FlexLexer.h	/^	void set_debug( int flag )	{ yy_flex_debug = flag; }$/;"	f	class:FlexLexer	access:public	signature:( int flag )
FlexLexer::switch_streams	FlexLexer.h	/^	virtual void switch_streams( FLEX_STD istream* new_in = 0,$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* new_in = 0, FLEX_STD ostream* new_out = 0 )
FlexLexer::yy_create_buffer	FlexLexer.h	/^		yy_create_buffer( FLEX_STD istream* s, int size ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* s, int size )
FlexLexer::yy_delete_buffer	FlexLexer.h	/^	virtual void yy_delete_buffer( struct yy_buffer_state* b ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( struct yy_buffer_state* b )
FlexLexer::yy_flex_debug	FlexLexer.h	/^	int yy_flex_debug;	\/\/ only has effect with -d or "%option debug"$/;"	m	class:FlexLexer	access:protected
FlexLexer::yy_switch_to_buffer	FlexLexer.h	/^		yy_switch_to_buffer( struct yy_buffer_state* new_buffer ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
FlexLexer::yyleng	FlexLexer.h	/^	int yyleng;$/;"	m	class:FlexLexer	access:protected
FlexLexer::yylex	FlexLexer.h	/^	int yylex( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )$/;"	f	class:FlexLexer	access:public	signature:( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )
FlexLexer::yylex	FlexLexer.h	/^	virtual int yylex() = 0;$/;"	p	class:FlexLexer	access:public	signature:()
FlexLexer::yylineno	FlexLexer.h	/^	int yylineno;		\/\/ only maintained if you use %option yylineno$/;"	m	class:FlexLexer	access:protected
FlexLexer::yyrestart	FlexLexer.h	/^	virtual void yyrestart( FLEX_STD istream* s ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* s )
FlexLexer::yytext	FlexLexer.h	/^	char* yytext;$/;"	m	class:FlexLexer	access:protected
FlexLexer::~FlexLexer	FlexLexer.h	/^	virtual ~FlexLexer()	{ }$/;"	f	class:FlexLexer	access:public	signature:()
GAI_NOWAIT	netdb.h	596;"	d
GAI_WAIT	netdb.h	595;"	d
GLOB_ABEND	glob.h	84;"	d
GLOB_ABORTED	glob.h	78;"	d
GLOB_ALTDIRFUNC	glob.h	59;"	d
GLOB_APPEND	glob.h	53;"	d
GLOB_BRACE	glob.h	60;"	d
GLOB_DOOFFS	glob.h	51;"	d
GLOB_ERR	glob.h	48;"	d
GLOB_MAGCHAR	glob.h	58;"	d
GLOB_MARK	glob.h	49;"	d
GLOB_NOCHECK	glob.h	52;"	d
GLOB_NOESCAPE	glob.h	54;"	d
GLOB_NOMAGIC	glob.h	61;"	d
GLOB_NOMATCH	glob.h	79;"	d
GLOB_NOSORT	glob.h	50;"	d
GLOB_NOSPACE	glob.h	77;"	d
GLOB_NOSYS	glob.h	80;"	d
GLOB_ONLYDIR	glob.h	63;"	d
GLOB_PERIOD	glob.h	55;"	d
GLOB_TILDE	glob.h	62;"	d
GLOB_TILDE_CHECK	glob.h	64;"	d
GROUPING	langinfo.h	485;"	d
GRP_COMDAT	elf.h	374;"	d
GSHADOW	gshadow.h	34;"	d
HAVE_BCOPY	expat_config.h	8;"	d
HAVE_DLFCN_H	expat_config.h	11;"	d
HAVE_FCNTL_H	expat_config.h	14;"	d
HAVE_GETPAGESIZE	expat_config.h	17;"	d
HAVE_INTTYPES_H	expat_config.h	20;"	d
HAVE_MEMMOVE	expat_config.h	23;"	d
HAVE_MEMORY_H	expat_config.h	26;"	d
HAVE_MMAP	expat_config.h	29;"	d
HAVE_STDINT_H	expat_config.h	32;"	d
HAVE_STDLIB_H	expat_config.h	35;"	d
HAVE_STRINGS_H	expat_config.h	38;"	d
HAVE_STRING_H	expat_config.h	41;"	d
HAVE_SYS_STAT_H	expat_config.h	44;"	d
HAVE_SYS_TYPES_H	expat_config.h	47;"	d
HAVE_UNISTD_H	expat_config.h	50;"	d
HIBITL	values.h	49;"	d
HIBITS	values.h	48;"	d
HOST_NOT_FOUND	netdb.h	66;"	d
HUGE	math.h	347;"	d
HWCAP_SPARC_BLKINIT	elf.h	1350;"	d
HWCAP_SPARC_FLUSH	elf.h	1344;"	d
HWCAP_SPARC_MULDIV	elf.h	1347;"	d
HWCAP_SPARC_N2	elf.h	1351;"	d
HWCAP_SPARC_STBAR	elf.h	1345;"	d
HWCAP_SPARC_SWAP	elf.h	1346;"	d
HWCAP_SPARC_ULTRA3	elf.h	1349;"	d
HWCAP_SPARC_V9	elf.h	1348;"	d
I	complex.h	49;"	d
I	complex.h	50;"	d
IEEE754_DOUBLE_BIAS	ieee754.h	127;"	d
IEEE754_FLOAT_BIAS	ieee754.h	65;"	d
IEEE854_LONG_DOUBLE_BIAS	ieee754.h	195;"	d
IFTODT	dirent.h	121;"	d
INT16_C	stdint.h	291;"	d
INT16_MAX	stdint.h	166;"	d
INT16_MIN	stdint.h	161;"	d
INT32_C	stdint.h	292;"	d
INT32_MAX	stdint.h	167;"	d
INT32_MIN	stdint.h	162;"	d
INT64_C	stdint.h	294;"	d
INT64_C	stdint.h	296;"	d
INT64_MAX	stdint.h	168;"	d
INT64_MIN	stdint.h	163;"	d
INT8_C	stdint.h	290;"	d
INT8_MAX	stdint.h	165;"	d
INT8_MIN	stdint.h	160;"	d
INTBITS	values.h	34;"	d
INTMAX_C	stdint.h	311;"	d
INTMAX_C	stdint.h	314;"	d
INTMAX_MAX	stdint.h	243;"	d
INTMAX_MIN	stdint.h	241;"	d
INTPTR_MAX	stdint.h	231;"	d
INTPTR_MAX	stdint.h	235;"	d
INTPTR_MIN	stdint.h	230;"	d
INTPTR_MIN	stdint.h	234;"	d
INT_CURR_SYMBOL	langinfo.h	359;"	d
INT_FAST16_MAX	stdint.h	208;"	d
INT_FAST16_MAX	stdint.h	211;"	d
INT_FAST16_MIN	stdint.h	198;"	d
INT_FAST16_MIN	stdint.h	201;"	d
INT_FAST32_MAX	stdint.h	209;"	d
INT_FAST32_MAX	stdint.h	212;"	d
INT_FAST32_MIN	stdint.h	199;"	d
INT_FAST32_MIN	stdint.h	202;"	d
INT_FAST64_MAX	stdint.h	214;"	d
INT_FAST64_MIN	stdint.h	204;"	d
INT_FAST8_MAX	stdint.h	206;"	d
INT_FAST8_MIN	stdint.h	196;"	d
INT_FRAC_DIGITS	langinfo.h	387;"	d
INT_LEAST16_MAX	stdint.h	184;"	d
INT_LEAST16_MIN	stdint.h	179;"	d
INT_LEAST32_MAX	stdint.h	185;"	d
INT_LEAST32_MIN	stdint.h	180;"	d
INT_LEAST64_MAX	stdint.h	186;"	d
INT_LEAST64_MIN	stdint.h	181;"	d
INT_LEAST8_MAX	stdint.h	183;"	d
INT_LEAST8_MIN	stdint.h	178;"	d
INT_MAX	limits.h	82;"	d
INT_MIN	limits.h	81;"	d
INT_N_CS_PRECEDES	langinfo.h	429;"	d
INT_N_SEP_BY_SPACE	langinfo.h	433;"	d
INT_N_SIGN_POSN	langinfo.h	441;"	d
INT_P_CS_PRECEDES	langinfo.h	421;"	d
INT_P_SEP_BY_SPACE	langinfo.h	425;"	d
INT_P_SIGN_POSN	langinfo.h	437;"	d
IPPORT_RESERVED	netdb.h	82;"	d
LAST_UNUSED_STAB_CODE	stab.h	/^LAST_UNUSED_STAB_CODE$/;"	e	enum:__stab_debug_code
LAV_CURRENT	link.h	99;"	d
LA_ACT_ADD	link.h	/^    LA_ACT_ADD,			\/* New object will be added.  *\/$/;"	e	enum:__anon52
LA_ACT_CONSISTENT	link.h	/^    LA_ACT_CONSISTENT,		\/* Link map consistent again.  *\/$/;"	e	enum:__anon52
LA_ACT_DELETE	link.h	/^    LA_ACT_DELETE		\/* Objects will be removed.  *\/$/;"	e	enum:__anon52
LA_FLG_BINDFROM	link.h	/^    LA_FLG_BINDFROM = 0x02	\/* Audit symbols bound from this object.  *\/$/;"	e	enum:__anon54
LA_FLG_BINDTO	link.h	/^    LA_FLG_BINDTO = 0x01,	\/* Audit symbols bound to this object.  *\/$/;"	e	enum:__anon54
LA_SER_CONFIG	link.h	/^    LA_SER_CONFIG = 0x08,	\/* Found through ldconfig.  *\/$/;"	e	enum:__anon53
LA_SER_DEFAULT	link.h	/^    LA_SER_DEFAULT = 0x40,	\/* Default directory.  *\/$/;"	e	enum:__anon53
LA_SER_LIBPATH	link.h	/^    LA_SER_LIBPATH = 0x02,	\/* Directory from LD_LIBRARY_PATH.  *\/$/;"	e	enum:__anon53
LA_SER_ORIG	link.h	/^    LA_SER_ORIG = 0x01,		\/* Original name.  *\/$/;"	e	enum:__anon53
LA_SER_RUNPATH	link.h	/^    LA_SER_RUNPATH = 0x04,	\/* Directory from RPATH\/RUNPATH.  *\/$/;"	e	enum:__anon53
LA_SER_SECURE	link.h	/^    LA_SER_SECURE = 0x80	\/* Unused.  *\/$/;"	e	enum:__anon53
LA_SYMB_ALTVALUE	link.h	/^    LA_SYMB_ALTVALUE = 0x10	\/* Value has been changed by a previous$/;"	e	enum:__anon55
LA_SYMB_DLSYM	link.h	/^    LA_SYMB_DLSYM = 0x08,	\/* Binding due to dlsym call.  *\/$/;"	e	enum:__anon55
LA_SYMB_NOPLTENTER	link.h	/^    LA_SYMB_NOPLTENTER = 0x01,	\/* la_pltenter will not be called.  *\/$/;"	e	enum:__anon55
LA_SYMB_NOPLTEXIT	link.h	/^    LA_SYMB_NOPLTEXIT = 0x02,	\/* la_pltexit will not be called.  *\/$/;"	e	enum:__anon55
LA_SYMB_STRUCTCALL	link.h	/^    LA_SYMB_STRUCTCALL = 0x04,	\/* Return value is a structure.  *\/$/;"	e	enum:__anon55
LC_ADDRESS	locale.h	45;"	d
LC_ADDRESS_MASK	locale.h	167;"	d
LC_ALL	locale.h	42;"	d
LC_ALL_MASK	locale.h	171;"	d
LC_COLLATE	locale.h	39;"	d
LC_COLLATE_MASK	locale.h	162;"	d
LC_CTYPE	locale.h	36;"	d
LC_CTYPE_MASK	locale.h	159;"	d
LC_GLOBAL_LOCALE	locale.h	202;"	d
LC_IDENTIFICATION	locale.h	48;"	d
LC_IDENTIFICATION_MASK	locale.h	170;"	d
LC_MEASUREMENT	locale.h	47;"	d
LC_MEASUREMENT_MASK	locale.h	169;"	d
LC_MESSAGES	locale.h	41;"	d
LC_MESSAGES_MASK	locale.h	164;"	d
LC_MONETARY	locale.h	40;"	d
LC_MONETARY_MASK	locale.h	163;"	d
LC_NAME	locale.h	44;"	d
LC_NAME_MASK	locale.h	166;"	d
LC_NUMERIC	locale.h	37;"	d
LC_NUMERIC_MASK	locale.h	160;"	d
LC_PAPER	locale.h	43;"	d
LC_PAPER_MASK	locale.h	165;"	d
LC_TELEPHONE	locale.h	46;"	d
LC_TELEPHONE_MASK	locale.h	168;"	d
LC_TIME	locale.h	38;"	d
LC_TIME_MASK	locale.h	161;"	d
LIBGETTEXTPO_VERSION	gettext-po.h	31;"	d
LIBTASN1_H	libtasn1.h	25;"	d
LIBTASN1_VERSION	libtasn1.h	287;"	d
LIO_NOP	aio.h	/^  LIO_NOP$/;"	e	enum:__anon83
LIO_NOP	aio.h	123;"	d
LIO_NOWAIT	aio.h	/^  LIO_NOWAIT$/;"	e	enum:__anon84
LIO_NOWAIT	aio.h	133;"	d
LIO_READ	aio.h	/^  LIO_READ,$/;"	e	enum:__anon83
LIO_READ	aio.h	119;"	d
LIO_WAIT	aio.h	/^  LIO_WAIT,$/;"	e	enum:__anon84
LIO_WAIT	aio.h	131;"	d
LIO_WRITE	aio.h	/^  LIO_WRITE,$/;"	e	enum:__anon83
LIO_WRITE	aio.h	121;"	d
LITTLE_ENDIAN	endian.h	46;"	d
LITUSE_ALPHA_ADDR	elf.h	1985;"	d
LITUSE_ALPHA_BASE	elf.h	1986;"	d
LITUSE_ALPHA_BYTOFF	elf.h	1987;"	d
LITUSE_ALPHA_JSR	elf.h	1988;"	d
LITUSE_ALPHA_TLS_GD	elf.h	1989;"	d
LITUSE_ALPHA_TLS_LDM	elf.h	1990;"	d
LLONG_MAX	limits.h	105;"	d
LLONG_MAX	limits.h	136;"	d
LLONG_MIN	limits.h	106;"	d
LLONG_MIN	limits.h	133;"	d
LL_DELAY_LOAD	elf.h	1726;"	d
LL_DELTA	elf.h	1727;"	d
LL_EXACT_MATCH	elf.h	1722;"	d
LL_EXPORTS	elf.h	1725;"	d
LL_IGNORE_INT_VER	elf.h	1723;"	d
LL_NONE	elf.h	1721;"	d
LL_REQUIRE_MINOR	elf.h	1724;"	d
LM_ID_BASE	dlfcn.h	48;"	d
LM_ID_NEWLM	dlfcn.h	49;"	d
LNKTYPE	tar.h	91;"	d
LOCALDOMAINPARTS	resolv.h	94;"	d
LONGBITS	values.h	35;"	d
LONG_MAX	limits.h	89;"	d
LONG_MAX	limits.h	91;"	d
LONG_MIN	limits.h	93;"	d
L_INCR	unistd.h	320;"	d
L_SET	unistd.h	319;"	d
L_XTND	unistd.h	321;"	d
LexerError	FlexLexer.h	/^	virtual void LexerError( const char* msg );$/;"	p	class:yyFlexLexer	access:protected	signature:( const char* msg )
LexerInput	FlexLexer.h	/^	virtual int LexerInput( char* buf, int max_size );$/;"	p	class:yyFlexLexer	access:protected	signature:( char* buf, int max_size )
LexerOutput	FlexLexer.h	/^	virtual void LexerOutput( const char* buf, int size );$/;"	p	class:yyFlexLexer	access:protected	signature:( const char* buf, int size )
Lmid_t	dlfcn.h	/^typedef long int Lmid_t;$/;"	t
MAGIC	cpio.h	47;"	d
MATH_ERREXCEPT	math.h	282;"	d
MATH_ERRNO	math.h	281;"	d
MAXDFLSRCH	resolv.h	92;"	d
MAXDNSRCH	resolv.h	93;"	d
MAXDOUBLE	values.h	54;"	d
MAXFLOAT	math.h	353;"	d
MAXFLOAT	values.h	55;"	d
MAXINT	values.h	45;"	d
MAXLONG	values.h	46;"	d
MAXNAMLEN	dirent.h	237;"	d
MAXNAMLEN	dirent.h	239;"	d
MAXNS	resolv.h	91;"	d
MAXRESOLVSORT	resolv.h	97;"	d
MAXSEG_64K	zconf.h	152;"	d
MAXSHORT	values.h	44;"	d
MAX_ERROR_DESCRIPTION_SIZE	libtasn1.h	294;"	d
MAX_MEM_LEVEL	zconf.h	199;"	d
MAX_MEM_LEVEL	zconf.h	201;"	d
MAX_NAME_SIZE	libtasn1.h	290;"	d
MAX_WBITS	zconf.h	211;"	d
MB_CUR_MAX	stdlib.h	139;"	d
MB_LEN_MAX	limits.h	33;"	d
MCHECK_DISABLED	mcheck.h	/^    MCHECK_DISABLED = -1,       \/* Consistency checking is not turned on.  *\/$/;"	e	enum:mcheck_status
MCHECK_FREE	mcheck.h	/^    MCHECK_FREE,                \/* Block freed twice.  *\/$/;"	e	enum:mcheck_status
MCHECK_HEAD	mcheck.h	/^    MCHECK_HEAD,                \/* Memory before the block was clobbered.  *\/$/;"	e	enum:mcheck_status
MCHECK_OK	mcheck.h	/^    MCHECK_OK,                  \/* Block is fine.  *\/$/;"	e	enum:mcheck_status
MCHECK_TAIL	mcheck.h	/^    MCHECK_TAIL                 \/* Memory after the block was clobbered.  *\/$/;"	e	enum:mcheck_status
MINDOUBLE	values.h	56;"	d
MINFLOAT	values.h	57;"	d
MININT	values.h	41;"	d
MINLONG	values.h	42;"	d
MINSHORT	values.h	40;"	d
MM_APPL	fmtmsg.h	/^  MM_APPL = 0x008,	\/* Condition detected by application.  *\/$/;"	e	enum:__anon21
MM_APPL	fmtmsg.h	38;"	d
MM_CONSOLE	fmtmsg.h	/^  MM_CONSOLE = 0x200	\/* Display message on system console.  *\/$/;"	e	enum:__anon21
MM_CONSOLE	fmtmsg.h	50;"	d
MM_ERROR	fmtmsg.h	/^  MM_ERROR,		\/* Application has encountered a non-fatal fault.  *\/$/;"	e	enum:__anon22
MM_ERROR	fmtmsg.h	61;"	d
MM_FIRM	fmtmsg.h	/^  MM_FIRM = 0x004,	\/* Source of the condition is firmware.  *\/$/;"	e	enum:__anon21
MM_FIRM	fmtmsg.h	36;"	d
MM_HALT	fmtmsg.h	/^  MM_HALT,		\/* Error causing application to halt.  *\/$/;"	e	enum:__anon22
MM_HALT	fmtmsg.h	59;"	d
MM_HARD	fmtmsg.h	/^  MM_HARD = 0x001,	\/* Source of the condition is hardware.  *\/$/;"	e	enum:__anon21
MM_HARD	fmtmsg.h	32;"	d
MM_INFO	fmtmsg.h	/^  MM_INFO		\/* Informative message.  *\/$/;"	e	enum:__anon22
MM_INFO	fmtmsg.h	66;"	d
MM_NOCON	fmtmsg.h	/^  MM_NOCON = 4$/;"	e	enum:__anon23
MM_NOCON	fmtmsg.h	89;"	d
MM_NOMSG	fmtmsg.h	/^  MM_NOMSG = 1,$/;"	e	enum:__anon23
MM_NOMSG	fmtmsg.h	87;"	d
MM_NOSEV	fmtmsg.h	/^  MM_NOSEV = 0,		\/* No severity level provided for the message.  *\/$/;"	e	enum:__anon22
MM_NOSEV	fmtmsg.h	57;"	d
MM_NOTOK	fmtmsg.h	/^  MM_NOTOK = -1,$/;"	e	enum:__anon23
MM_NOTOK	fmtmsg.h	83;"	d
MM_NRECOV	fmtmsg.h	/^  MM_NRECOV = 0x080,	\/* Non-recoverable error.  *\/$/;"	e	enum:__anon21
MM_NRECOV	fmtmsg.h	46;"	d
MM_NULLACT	fmtmsg.h	75;"	d
MM_NULLLBL	fmtmsg.h	71;"	d
MM_NULLMC	fmtmsg.h	73;"	d
MM_NULLSEV	fmtmsg.h	72;"	d
MM_NULLTAG	fmtmsg.h	76;"	d
MM_NULLTXT	fmtmsg.h	74;"	d
MM_OK	fmtmsg.h	/^  MM_OK = 0,$/;"	e	enum:__anon23
MM_OK	fmtmsg.h	85;"	d
MM_OPSYS	fmtmsg.h	/^  MM_OPSYS = 0x020,	\/* Condition detected by operating system.  *\/$/;"	e	enum:__anon21
MM_OPSYS	fmtmsg.h	42;"	d
MM_PRINT	fmtmsg.h	/^  MM_PRINT = 0x100,	\/* Display message in standard error.  *\/$/;"	e	enum:__anon21
MM_PRINT	fmtmsg.h	48;"	d
MM_RECOVER	fmtmsg.h	/^  MM_RECOVER = 0x040,	\/* Recoverable error.  *\/$/;"	e	enum:__anon21
MM_RECOVER	fmtmsg.h	44;"	d
MM_SOFT	fmtmsg.h	/^  MM_SOFT = 0x002,	\/* Source of the condition is software.  *\/$/;"	e	enum:__anon21
MM_SOFT	fmtmsg.h	34;"	d
MM_UTIL	fmtmsg.h	/^  MM_UTIL = 0x010,	\/* Condition detected by utility.  *\/$/;"	e	enum:__anon21
MM_UTIL	fmtmsg.h	40;"	d
MM_WARNING	fmtmsg.h	/^  MM_WARNING,		\/* Application has detected unusual non-error$/;"	e	enum:__anon22
MM_WARNING	fmtmsg.h	64;"	d
MNTOPT_DEFAULTS	mntent.h	43;"	d
MNTOPT_NOAUTO	mntent.h	48;"	d
MNTOPT_NOSUID	mntent.h	47;"	d
MNTOPT_RO	mntent.h	44;"	d
MNTOPT_RW	mntent.h	45;"	d
MNTOPT_SUID	mntent.h	46;"	d
MNTTAB	mntent.h	30;"	d
MNTTYPE_IGNORE	mntent.h	37;"	d
MNTTYPE_NFS	mntent.h	38;"	d
MNTTYPE_SWAP	mntent.h	39;"	d
MON_1	langinfo.h	/^  MON_1,			\/* January *\/$/;"	e	enum:__anon20
MON_1	langinfo.h	106;"	d
MON_10	langinfo.h	/^  MON_10,$/;"	e	enum:__anon20
MON_10	langinfo.h	124;"	d
MON_11	langinfo.h	/^  MON_11,$/;"	e	enum:__anon20
MON_11	langinfo.h	126;"	d
MON_12	langinfo.h	/^  MON_12,$/;"	e	enum:__anon20
MON_12	langinfo.h	128;"	d
MON_2	langinfo.h	/^  MON_2,$/;"	e	enum:__anon20
MON_2	langinfo.h	108;"	d
MON_3	langinfo.h	/^  MON_3,$/;"	e	enum:__anon20
MON_3	langinfo.h	110;"	d
MON_4	langinfo.h	/^  MON_4,$/;"	e	enum:__anon20
MON_4	langinfo.h	112;"	d
MON_5	langinfo.h	/^  MON_5,$/;"	e	enum:__anon20
MON_5	langinfo.h	114;"	d
MON_6	langinfo.h	/^  MON_6,$/;"	e	enum:__anon20
MON_6	langinfo.h	116;"	d
MON_7	langinfo.h	/^  MON_7,$/;"	e	enum:__anon20
MON_7	langinfo.h	118;"	d
MON_8	langinfo.h	/^  MON_8,$/;"	e	enum:__anon20
MON_8	langinfo.h	120;"	d
MON_9	langinfo.h	/^  MON_9,$/;"	e	enum:__anon20
MON_9	langinfo.h	122;"	d
MON_DECIMAL_POINT	langinfo.h	367;"	d
MON_GROUPING	langinfo.h	375;"	d
MON_THOUSANDS_SEP	langinfo.h	371;"	d
MOUNTED	mntent.h	33;"	d
MSDOS	zconf.h	126;"	d
M_1_PI	math.h	369;"	d
M_1_PIl	math.h	388;"	d
M_2_PI	math.h	370;"	d
M_2_PIl	math.h	389;"	d
M_2_SQRTPI	math.h	371;"	d
M_2_SQRTPIl	math.h	390;"	d
M_386	a.out.h	/^  M_386 = 100,$/;"	e	enum:machine_type
M_68010	a.out.h	/^  M_68010 = 1,$/;"	e	enum:machine_type
M_68020	a.out.h	/^  M_68020 = 2,$/;"	e	enum:machine_type
M_ARENA_MAX	malloc.h	132;"	d
M_ARENA_TEST	malloc.h	131;"	d
M_CHECK_ACTION	malloc.h	129;"	d
M_E	math.h	361;"	d
M_El	math.h	380;"	d
M_GRAIN	malloc.h	118;"	d
M_KEEP	malloc.h	121;"	d
M_LN10	math.h	365;"	d
M_LN10l	math.h	384;"	d
M_LN2	math.h	364;"	d
M_LN2l	math.h	383;"	d
M_LOG10E	math.h	363;"	d
M_LOG10El	math.h	382;"	d
M_LOG2E	math.h	362;"	d
M_LOG2El	math.h	381;"	d
M_MIPS1	a.out.h	/^  M_MIPS1 = 151,$/;"	e	enum:machine_type
M_MIPS2	a.out.h	/^  M_MIPS2 = 152$/;"	e	enum:machine_type
M_MMAP_MAX	malloc.h	128;"	d
M_MMAP_THRESHOLD	malloc.h	127;"	d
M_MXFAST	malloc.h	112;"	d
M_NLBLKS	malloc.h	115;"	d
M_OLDSUN2	a.out.h	/^  M_OLDSUN2 = 0,$/;"	e	enum:machine_type
M_PERTURB	malloc.h	130;"	d
M_PI	math.h	366;"	d
M_PI_2	math.h	367;"	d
M_PI_2l	math.h	386;"	d
M_PI_4	math.h	368;"	d
M_PI_4l	math.h	387;"	d
M_PIl	math.h	385;"	d
M_SPARC	a.out.h	/^  M_SPARC = 3,$/;"	e	enum:machine_type
M_SQRT1_2	math.h	373;"	d
M_SQRT1_2l	math.h	392;"	d
M_SQRT2	math.h	372;"	d
M_SQRT2l	math.h	391;"	d
M_TOP_PAD	malloc.h	126;"	d
M_TRIM_THRESHOLD	malloc.h	125;"	d
NEGATIVE_SIGN	langinfo.h	383;"	d
NETDB_INTERNAL	netdb.h	75;"	d
NETDB_SUCCESS	netdb.h	76;"	d
NI_DGRAM	netdb.h	650;"	d
NI_IDN	netdb.h	652;"	d
NI_IDN_ALLOW_UNASSIGNED	netdb.h	653;"	d
NI_IDN_USE_STD3_ASCII_RULES	netdb.h	655;"	d
NI_MAXHOST	netdb.h	642;"	d
NI_MAXSERV	netdb.h	643;"	d
NI_NAMEREQD	netdb.h	649;"	d
NI_NOFQDN	netdb.h	648;"	d
NI_NUMERICHOST	netdb.h	646;"	d
NI_NUMERICSERV	netdb.h	647;"	d
NL_CAT_LOCALE	nl_types.h	28;"	d
NL_LOCALE_NAME	langinfo.h	574;"	d
NL_SETD	nl_types.h	25;"	d
NMAGIC	a.out.h	50;"	d
NOEXPR	langinfo.h	495;"	d
NOSTR	langinfo.h	502;"	d
NOTIFY_AUTOBPT	thread_db.h	/^  NOTIFY_AUTOBPT,		\/* Breakpoint at u.bptaddr is automatically$/;"	e	enum:__anon63
NOTIFY_BPT	thread_db.h	/^  NOTIFY_BPT,			\/* User must insert breakpoint at u.bptaddr. *\/$/;"	e	enum:__anon63
NOTIFY_SYSCALL	thread_db.h	/^  NOTIFY_SYSCALL		\/* System call u.syscallno will be invoked.  *\/$/;"	e	enum:__anon63
NO_ADDRESS	netdb.h	77;"	d
NO_DATA	netdb.h	71;"	d
NO_DUMMY_DECL	zconf.h	193;"	d
NO_RECOVERY	netdb.h	69;"	d
NO_vsnprintf	zconf.h	370;"	d
NO_vsnprintf	zconf.h	374;"	d
NSIG	signal.h	207;"	d
NSS_BUFLEN_GROUP	grp.h	120;"	d
NSS_BUFLEN_PASSWD	pwd.h	124;"	d
NSS_STATUS_NOTFOUND	nss.h	/^  NSS_STATUS_NOTFOUND,$/;"	e	enum:nss_status
NSS_STATUS_RETURN	nss.h	/^  NSS_STATUS_RETURN$/;"	e	enum:nss_status
NSS_STATUS_SUCCESS	nss.h	/^  NSS_STATUS_SUCCESS,$/;"	e	enum:nss_status
NSS_STATUS_TRYAGAIN	nss.h	/^  NSS_STATUS_TRYAGAIN = -2,$/;"	e	enum:nss_status
NSS_STATUS_UNAVAIL	nss.h	/^  NSS_STATUS_UNAVAIL,$/;"	e	enum:nss_status
NT_386_IOPERM	elf.h	622;"	d
NT_386_TLS	elf.h	621;"	d
NT_ASRS	elf.h	609;"	d
NT_AUXV	elf.h	607;"	d
NT_FPREGSET	elf.h	602;"	d
NT_GNU_ABI_TAG	elf.h	1043;"	d
NT_GNU_BUILD_ID	elf.h	1063;"	d
NT_GNU_GOLD_VERSION	elf.h	1066;"	d
NT_GNU_HWCAP	elf.h	1059;"	d
NT_GWINDOWS	elf.h	608;"	d
NT_LWPSINFO	elf.h	615;"	d
NT_LWPSTATUS	elf.h	614;"	d
NT_PLATFORM	elf.h	606;"	d
NT_PPC_SPE	elf.h	619;"	d
NT_PPC_VMX	elf.h	618;"	d
NT_PPC_VSX	elf.h	620;"	d
NT_PRCRED	elf.h	612;"	d
NT_PRFPXREG	elf.h	616;"	d
NT_PRPSINFO	elf.h	603;"	d
NT_PRSTATUS	elf.h	601;"	d
NT_PRXFPREG	elf.h	617;"	d
NT_PRXREG	elf.h	604;"	d
NT_PSINFO	elf.h	611;"	d
NT_PSTATUS	elf.h	610;"	d
NT_TASKSTRUCT	elf.h	605;"	d
NT_UTSNAME	elf.h	613;"	d
NT_VERSION	elf.h	627;"	d
NT_X86_XSTATE	elf.h	623;"	d
NULL	libio.h	100;"	d
NULL	libio.h	95;"	d
NULL	libio.h	98;"	d
N_ABS	a.out.h	106;"	d
N_BADMAG	a.out.h	62;"	d
N_BSS	a.out.h	109;"	d
N_BSSADDR	a.out.h	87;"	d
N_CS_PRECEDES	langinfo.h	403;"	d
N_DATA	a.out.h	108;"	d
N_DATADDR	a.out.h	84;"	d
N_DATOFF	a.out.h	69;"	d
N_DRELOFF	a.out.h	71;"	d
N_DRSIZE	a.out.h	60;"	d
N_EXT	a.out.h	111;"	d
N_FLAGS	a.out.h	33;"	d
N_FN	a.out.h	110;"	d
N_INDR	a.out.h	114;"	d
N_MACHTYPE	a.out.h	32;"	d
N_MAGIC	a.out.h	31;"	d
N_SEP_BY_SPACE	langinfo.h	407;"	d
N_SETA	a.out.h	115;"	d
N_SETB	a.out.h	118;"	d
N_SETD	a.out.h	117;"	d
N_SETT	a.out.h	116;"	d
N_SETV	a.out.h	119;"	d
N_SET_FLAGS	a.out.h	43;"	d
N_SET_INFO	a.out.h	34;"	d
N_SET_MACHTYPE	a.out.h	40;"	d
N_SET_MAGIC	a.out.h	38;"	d
N_SIGN_POSN	langinfo.h	415;"	d
N_STAB	a.out.h	113;"	d
N_STROFF	a.out.h	73;"	d
N_SYMOFF	a.out.h	72;"	d
N_SYMSIZE	a.out.h	61;"	d
N_TEXT	a.out.h	107;"	d
N_TRELOFF	a.out.h	70;"	d
N_TRSIZE	a.out.h	59;"	d
N_TXTADDR	a.out.h	76;"	d
N_TXTOFF	a.out.h	66;"	d
N_TYPE	a.out.h	112;"	d
N_UNDF	a.out.h	105;"	d
ODK_EXCEPTIONS	elf.h	1502;"	d
ODK_FILL	elf.h	1505;"	d
ODK_HWAND	elf.h	1507;"	d
ODK_HWOR	elf.h	1508;"	d
ODK_HWPATCH	elf.h	1504;"	d
ODK_NULL	elf.h	1500;"	d
ODK_PAD	elf.h	1503;"	d
ODK_REGINFO	elf.h	1501;"	d
ODK_TAGS	elf.h	1506;"	d
OEX_DISMISS	elf.h	1518;"	d
OEX_FPDBUG	elf.h	1516;"	d
OEX_FPU_DIV0	elf.h	1521;"	d
OEX_FPU_INEX	elf.h	1524;"	d
OEX_FPU_INVAL	elf.h	1520;"	d
OEX_FPU_MAX	elf.h	1513;"	d
OEX_FPU_MIN	elf.h	1512;"	d
OEX_FPU_OFLO	elf.h	1522;"	d
OEX_FPU_UFLO	elf.h	1523;"	d
OEX_PAGE0	elf.h	1514;"	d
OEX_PRECISEFP	elf.h	1517;"	d
OEX_SMM	elf.h	1515;"	d
OF	zconf.h	231;"	d
OF	zconf.h	233;"	d
OHWA0_R4KEOP_CHECKED	elf.h	1547;"	d
OHWA1_R4KEOP_CLEAN	elf.h	1548;"	d
OHW_R4KEOP	elf.h	1528;"	d
OHW_R5KCVTL	elf.h	1531;"	d
OHW_R5KEOP	elf.h	1530;"	d
OHW_R8KPFETCH	elf.h	1529;"	d
OMAGIC	a.out.h	48;"	d
OPAD_POSTFIX	elf.h	1534;"	d
OPAD_PREFIX	elf.h	1533;"	d
OPAD_SYMBOL	elf.h	1535;"	d
OPTION_ALIAS	argp.h	125;"	d
OPTION_ARG_OPTIONAL	argp.h	117;"	d
OPTION_DOC	argp.h	137;"	d
OPTION_HIDDEN	argp.h	120;"	d
OPTION_NO_USAGE	argp.h	146;"	d
OS2	zconf.h	129;"	d
OVERFLOW	math.h	341;"	d
PACKAGE_BUGREPORT	expat_config.h	53;"	d
PACKAGE_NAME	expat_config.h	56;"	d
PACKAGE_STRING	expat_config.h	59;"	d
PACKAGE_TARNAME	expat_config.h	62;"	d
PACKAGE_VERSION	expat_config.h	65;"	d
PA_CHAR	printf.h	/^  PA_CHAR,			\/* int, cast to char *\/$/;"	e	enum:__anon44
PA_DOUBLE	printf.h	/^  PA_DOUBLE,			\/* double *\/$/;"	e	enum:__anon44
PA_FLAG_LONG	printf.h	163;"	d
PA_FLAG_LONG_DOUBLE	printf.h	162;"	d
PA_FLAG_LONG_LONG	printf.h	161;"	d
PA_FLAG_MASK	printf.h	160;"	d
PA_FLAG_PTR	printf.h	165;"	d
PA_FLAG_SHORT	printf.h	164;"	d
PA_FLOAT	printf.h	/^  PA_FLOAT,			\/* float *\/$/;"	e	enum:__anon44
PA_INT	printf.h	/^  PA_INT,			\/* int *\/$/;"	e	enum:__anon44
PA_LAST	printf.h	/^  PA_LAST$/;"	e	enum:__anon44
PA_POINTER	printf.h	/^  PA_POINTER,			\/* void * *\/$/;"	e	enum:__anon44
PA_STRING	printf.h	/^  PA_STRING,			\/* const char *, a '\\0'-terminated string *\/$/;"	e	enum:__anon44
PA_WCHAR	printf.h	/^  PA_WCHAR,			\/* wide char *\/$/;"	e	enum:__anon44
PA_WSTRING	printf.h	/^  PA_WSTRING,			\/* const wchar_t *, wide character string *\/$/;"	e	enum:__anon44
PDP_ENDIAN	endian.h	48;"	d
PF_ARM_ABS	elf.h	2295;"	d
PF_ARM_PI	elf.h	2294;"	d
PF_ARM_SB	elf.h	2292;"	d
PF_HP_CODE	elf.h	1919;"	d
PF_HP_FAR_SHARED	elf.h	1917;"	d
PF_HP_LAZYSWAP	elf.h	1921;"	d
PF_HP_MODIFY	elf.h	1920;"	d
PF_HP_NEAR_SHARED	elf.h	1918;"	d
PF_HP_PAGE_SIZE	elf.h	1916;"	d
PF_HP_SBP	elf.h	1922;"	d
PF_IA_64_NORECOV	elf.h	2381;"	d
PF_MASKOS	elf.h	596;"	d
PF_MASKPROC	elf.h	597;"	d
PF_MIPS_LOCAL	elf.h	1615;"	d
PF_PARISC_SBP	elf.h	1914;"	d
PF_R	elf.h	595;"	d
PF_W	elf.h	594;"	d
PF_X	elf.h	593;"	d
PLOSS	math.h	344;"	d
PM_STR	langinfo.h	/^  PM_STR,			\/* Post meridiem string.  *\/$/;"	e	enum:__anon20
PM_STR	langinfo.h	133;"	d
PN_XNUM	elf.h	566;"	d
POSITIVE_SIGN	langinfo.h	379;"	d
POSIX_SPAWN_RESETIDS	spawn.h	54;"	d
POSIX_SPAWN_SETPGROUP	spawn.h	55;"	d
POSIX_SPAWN_SETSCHEDPARAM	spawn.h	58;"	d
POSIX_SPAWN_SETSCHEDULER	spawn.h	59;"	d
POSIX_SPAWN_SETSIGDEF	spawn.h	56;"	d
POSIX_SPAWN_SETSIGMASK	spawn.h	57;"	d
POSIX_SPAWN_USEVFORK	spawn.h	61;"	d
PO_SEVERITY_ERROR	gettext-po.h	90;"	d
PO_SEVERITY_FATAL_ERROR	gettext-po.h	91;"	d
PO_SEVERITY_WARNING	gettext-po.h	89;"	d
PRIX16	inttypes.h	141;"	d
PRIX32	inttypes.h	142;"	d
PRIX64	inttypes.h	143;"	d
PRIX8	inttypes.h	140;"	d
PRIXFAST16	inttypes.h	151;"	d
PRIXFAST32	inttypes.h	152;"	d
PRIXFAST64	inttypes.h	153;"	d
PRIXFAST8	inttypes.h	150;"	d
PRIXLEAST16	inttypes.h	146;"	d
PRIXLEAST32	inttypes.h	147;"	d
PRIXLEAST64	inttypes.h	148;"	d
PRIXLEAST8	inttypes.h	145;"	d
PRIXMAX	inttypes.h	162;"	d
PRIXPTR	inttypes.h	171;"	d
PRId16	inttypes.h	61;"	d
PRId32	inttypes.h	62;"	d
PRId64	inttypes.h	63;"	d
PRId8	inttypes.h	60;"	d
PRIdFAST16	inttypes.h	71;"	d
PRIdFAST32	inttypes.h	72;"	d
PRIdFAST64	inttypes.h	73;"	d
PRIdFAST8	inttypes.h	70;"	d
PRIdLEAST16	inttypes.h	66;"	d
PRIdLEAST32	inttypes.h	67;"	d
PRIdLEAST64	inttypes.h	68;"	d
PRIdLEAST8	inttypes.h	65;"	d
PRIdMAX	inttypes.h	157;"	d
PRIdPTR	inttypes.h	166;"	d
PRIi16	inttypes.h	77;"	d
PRIi32	inttypes.h	78;"	d
PRIi64	inttypes.h	79;"	d
PRIi8	inttypes.h	76;"	d
PRIiFAST16	inttypes.h	87;"	d
PRIiFAST32	inttypes.h	88;"	d
PRIiFAST64	inttypes.h	89;"	d
PRIiFAST8	inttypes.h	86;"	d
PRIiLEAST16	inttypes.h	82;"	d
PRIiLEAST32	inttypes.h	83;"	d
PRIiLEAST64	inttypes.h	84;"	d
PRIiLEAST8	inttypes.h	81;"	d
PRIiMAX	inttypes.h	158;"	d
PRIiPTR	inttypes.h	167;"	d
PRIo16	inttypes.h	93;"	d
PRIo32	inttypes.h	94;"	d
PRIo64	inttypes.h	95;"	d
PRIo8	inttypes.h	92;"	d
PRIoFAST16	inttypes.h	103;"	d
PRIoFAST32	inttypes.h	104;"	d
PRIoFAST64	inttypes.h	105;"	d
PRIoFAST8	inttypes.h	102;"	d
PRIoLEAST16	inttypes.h	98;"	d
PRIoLEAST32	inttypes.h	99;"	d
PRIoLEAST64	inttypes.h	100;"	d
PRIoLEAST8	inttypes.h	97;"	d
PRIoMAX	inttypes.h	159;"	d
PRIoPTR	inttypes.h	168;"	d
PRIu16	inttypes.h	109;"	d
PRIu32	inttypes.h	110;"	d
PRIu64	inttypes.h	111;"	d
PRIu8	inttypes.h	108;"	d
PRIuFAST16	inttypes.h	119;"	d
PRIuFAST32	inttypes.h	120;"	d
PRIuFAST64	inttypes.h	121;"	d
PRIuFAST8	inttypes.h	118;"	d
PRIuLEAST16	inttypes.h	114;"	d
PRIuLEAST32	inttypes.h	115;"	d
PRIuLEAST64	inttypes.h	116;"	d
PRIuLEAST8	inttypes.h	113;"	d
PRIuMAX	inttypes.h	160;"	d
PRIuPTR	inttypes.h	169;"	d
PRIx16	inttypes.h	125;"	d
PRIx32	inttypes.h	126;"	d
PRIx64	inttypes.h	127;"	d
PRIx8	inttypes.h	124;"	d
PRIxFAST16	inttypes.h	135;"	d
PRIxFAST32	inttypes.h	136;"	d
PRIxFAST64	inttypes.h	137;"	d
PRIxFAST8	inttypes.h	134;"	d
PRIxLEAST16	inttypes.h	130;"	d
PRIxLEAST32	inttypes.h	131;"	d
PRIxLEAST64	inttypes.h	132;"	d
PRIxLEAST8	inttypes.h	129;"	d
PRIxMAX	inttypes.h	161;"	d
PRIxPTR	inttypes.h	170;"	d
PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP	pthread.h	107;"	d
PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP	pthread.h	96;"	d
PTHREAD_BARRIER_SERIAL_THREAD	pthread.h	216;"	d
PTHREAD_CANCELED	pthread.h	205;"	d
PTHREAD_CANCEL_ASYNCHRONOUS	pthread.h	/^  PTHREAD_CANCEL_ASYNCHRONOUS$/;"	e	enum:__anon37
PTHREAD_CANCEL_ASYNCHRONOUS	pthread.h	203;"	d
PTHREAD_CANCEL_DEFERRED	pthread.h	/^  PTHREAD_CANCEL_DEFERRED,$/;"	e	enum:__anon37
PTHREAD_CANCEL_DEFERRED	pthread.h	201;"	d
PTHREAD_CANCEL_DISABLE	pthread.h	/^  PTHREAD_CANCEL_DISABLE$/;"	e	enum:__anon36
PTHREAD_CANCEL_DISABLE	pthread.h	196;"	d
PTHREAD_CANCEL_ENABLE	pthread.h	/^  PTHREAD_CANCEL_ENABLE,$/;"	e	enum:__anon36
PTHREAD_CANCEL_ENABLE	pthread.h	194;"	d
PTHREAD_COND_INITIALIZER	pthread.h	178;"	d
PTHREAD_CREATE_DETACHED	pthread.h	/^  PTHREAD_CREATE_DETACHED$/;"	e	enum:__anon28
PTHREAD_CREATE_DETACHED	pthread.h	39;"	d
PTHREAD_CREATE_JOINABLE	pthread.h	/^  PTHREAD_CREATE_JOINABLE,$/;"	e	enum:__anon28
PTHREAD_CREATE_JOINABLE	pthread.h	37;"	d
PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP	pthread.h	105;"	d
PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP	pthread.h	94;"	d
PTHREAD_EXPLICIT_SCHED	pthread.h	/^  PTHREAD_EXPLICIT_SCHED$/;"	e	enum:__anon33
PTHREAD_EXPLICIT_SCHED	pthread.h	152;"	d
PTHREAD_INHERIT_SCHED	pthread.h	/^  PTHREAD_INHERIT_SCHED,$/;"	e	enum:__anon33
PTHREAD_INHERIT_SCHED	pthread.h	150;"	d
PTHREAD_MUTEX_ADAPTIVE_NP	pthread.h	/^  PTHREAD_MUTEX_ADAPTIVE_NP$/;"	e	enum:__anon29
PTHREAD_MUTEX_DEFAULT	pthread.h	/^  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL$/;"	e	enum:__anon29
PTHREAD_MUTEX_ERRORCHECK	pthread.h	/^  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,$/;"	e	enum:__anon29
PTHREAD_MUTEX_ERRORCHECK_NP	pthread.h	/^  PTHREAD_MUTEX_ERRORCHECK_NP,$/;"	e	enum:__anon29
PTHREAD_MUTEX_FAST_NP	pthread.h	/^  , PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_TIMED_NP$/;"	e	enum:__anon29
PTHREAD_MUTEX_INITIALIZER	pthread.h	100;"	d
PTHREAD_MUTEX_INITIALIZER	pthread.h	89;"	d
PTHREAD_MUTEX_NORMAL	pthread.h	/^  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP,$/;"	e	enum:__anon29
PTHREAD_MUTEX_RECURSIVE	pthread.h	/^  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,$/;"	e	enum:__anon29
PTHREAD_MUTEX_RECURSIVE_NP	pthread.h	/^  PTHREAD_MUTEX_RECURSIVE_NP,$/;"	e	enum:__anon29
PTHREAD_MUTEX_ROBUST	pthread.h	/^  PTHREAD_MUTEX_ROBUST,$/;"	e	enum:__anon30
PTHREAD_MUTEX_ROBUST_NP	pthread.h	/^  PTHREAD_MUTEX_ROBUST_NP = PTHREAD_MUTEX_ROBUST$/;"	e	enum:__anon30
PTHREAD_MUTEX_STALLED	pthread.h	/^  PTHREAD_MUTEX_STALLED,$/;"	e	enum:__anon30
PTHREAD_MUTEX_STALLED_NP	pthread.h	/^  PTHREAD_MUTEX_STALLED_NP = PTHREAD_MUTEX_STALLED,$/;"	e	enum:__anon30
PTHREAD_MUTEX_TIMED_NP	pthread.h	/^  PTHREAD_MUTEX_TIMED_NP,$/;"	e	enum:__anon29
PTHREAD_ONCE_INIT	pthread.h	209;"	d
PTHREAD_PRIO_INHERIT	pthread.h	/^  PTHREAD_PRIO_INHERIT,$/;"	e	enum:__anon31
PTHREAD_PRIO_NONE	pthread.h	/^  PTHREAD_PRIO_NONE,$/;"	e	enum:__anon31
PTHREAD_PRIO_PROTECT	pthread.h	/^  PTHREAD_PRIO_PROTECT$/;"	e	enum:__anon31
PTHREAD_PROCESS_PRIVATE	pthread.h	/^  PTHREAD_PROCESS_PRIVATE,$/;"	e	enum:__anon35
PTHREAD_PROCESS_PRIVATE	pthread.h	170;"	d
PTHREAD_PROCESS_SHARED	pthread.h	/^  PTHREAD_PROCESS_SHARED$/;"	e	enum:__anon35
PTHREAD_PROCESS_SHARED	pthread.h	172;"	d
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP	pthread.h	103;"	d
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP	pthread.h	92;"	d
PTHREAD_RWLOCK_DEFAULT_NP	pthread.h	/^  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP$/;"	e	enum:__anon32
PTHREAD_RWLOCK_INITIALIZER	pthread.h	124;"	d
PTHREAD_RWLOCK_PREFER_READER_NP	pthread.h	/^  PTHREAD_RWLOCK_PREFER_READER_NP,$/;"	e	enum:__anon32
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP	pthread.h	/^  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,$/;"	e	enum:__anon32
PTHREAD_RWLOCK_PREFER_WRITER_NP	pthread.h	/^  PTHREAD_RWLOCK_PREFER_WRITER_NP,$/;"	e	enum:__anon32
PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP	pthread.h	128;"	d
PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP	pthread.h	133;"	d
PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP	pthread.h	137;"	d
PTHREAD_SCOPE_PROCESS	pthread.h	/^  PTHREAD_SCOPE_PROCESS$/;"	e	enum:__anon34
PTHREAD_SCOPE_PROCESS	pthread.h	162;"	d
PTHREAD_SCOPE_SYSTEM	pthread.h	/^  PTHREAD_SCOPE_SYSTEM,$/;"	e	enum:__anon34
PTHREAD_SCOPE_SYSTEM	pthread.h	160;"	d
PTRBITS	values.h	36;"	d
PTRDIFF_MAX	stdint.h	254;"	d
PTRDIFF_MAX	stdint.h	257;"	d
PTRDIFF_MIN	stdint.h	253;"	d
PTRDIFF_MIN	stdint.h	256;"	d
PTR_INT_TYPE	obstack.h	119;"	d
PTR_INT_TYPE	obstack.h	122;"	d
PT_ARM_EXIDX	elf.h	2298;"	d
PT_DYNAMIC	elf.h	572;"	d
PT_GNU_EH_FRAME	elf.h	580;"	d
PT_GNU_RELRO	elf.h	582;"	d
PT_GNU_STACK	elf.h	581;"	d
PT_HIOS	elf.h	587;"	d
PT_HIPROC	elf.h	589;"	d
PT_HISUNW	elf.h	586;"	d
PT_HP_CORE_COMM	elf.h	1897;"	d
PT_HP_CORE_KERNEL	elf.h	1896;"	d
PT_HP_CORE_LOADABLE	elf.h	1899;"	d
PT_HP_CORE_MMF	elf.h	1902;"	d
PT_HP_CORE_NONE	elf.h	1894;"	d
PT_HP_CORE_PROC	elf.h	1898;"	d
PT_HP_CORE_SHM	elf.h	1901;"	d
PT_HP_CORE_STACK	elf.h	1900;"	d
PT_HP_CORE_VERSION	elf.h	1895;"	d
PT_HP_FASTBIND	elf.h	1904;"	d
PT_HP_HSL_ANNOT	elf.h	1906;"	d
PT_HP_OPT_ANNOT	elf.h	1905;"	d
PT_HP_PARALLEL	elf.h	1903;"	d
PT_HP_STACK	elf.h	1907;"	d
PT_HP_TLS	elf.h	1893;"	d
PT_IA_64_ARCHEXT	elf.h	2374;"	d
PT_IA_64_HP_HSL_ANOT	elf.h	2377;"	d
PT_IA_64_HP_OPT_ANOT	elf.h	2376;"	d
PT_IA_64_HP_STACK	elf.h	2378;"	d
PT_IA_64_UNWIND	elf.h	2375;"	d
PT_INTERP	elf.h	573;"	d
PT_LOAD	elf.h	571;"	d
PT_LOOS	elf.h	579;"	d
PT_LOPROC	elf.h	588;"	d
PT_LOSUNW	elf.h	583;"	d
PT_MIPS_OPTIONS	elf.h	1611;"	d
PT_MIPS_REGINFO	elf.h	1609;"	d
PT_MIPS_RTPROC	elf.h	1610;"	d
PT_NOTE	elf.h	574;"	d
PT_NULL	elf.h	570;"	d
PT_NUM	elf.h	578;"	d
PT_PARISC_ARCHEXT	elf.h	1909;"	d
PT_PARISC_UNWIND	elf.h	1910;"	d
PT_PHDR	elf.h	576;"	d
PT_SHLIB	elf.h	575;"	d
PT_SUNWBSS	elf.h	584;"	d
PT_SUNWSTACK	elf.h	585;"	d
PT_TLS	elf.h	577;"	d
P_CS_PRECEDES	langinfo.h	395;"	d
P_SEP_BY_SPACE	langinfo.h	399;"	d
P_SIGN_POSN	langinfo.h	411;"	d
P_tmpdir	stdio.h	148;"	d
QMAGIC	a.out.h	55;"	d
RADIXCHAR	langinfo.h	/^  RADIXCHAR = __DECIMAL_POINT,$/;"	e	enum:__anon20
RADIXCHAR	langinfo.h	476;"	d
RAND_MAX	stdlib.h	129;"	d
REGS_FIXED	regex.h	410;"	d
REGS_REALLOCATE	regex.h	409;"	d
REGS_UNALLOCATED	regex.h	408;"	d
REGTYPE	tar.h	89;"	d
REG_BADBR	regex.h	/^  REG_BADBR,		\/* Invalid contents of \\{\\}.  *\/$/;"	e	enum:__anon1
REG_BADPAT	regex.h	/^  REG_BADPAT,		\/* Invalid pattern.  *\/$/;"	e	enum:__anon1
REG_BADRPT	regex.h	/^  REG_BADRPT,		\/* No preceding re for repetition op.  *\/$/;"	e	enum:__anon1
REG_EBRACE	regex.h	/^  REG_EBRACE,		\/* Unmatched \\{.  *\/$/;"	e	enum:__anon1
REG_EBRACK	regex.h	/^  REG_EBRACK,		\/* Unmatched left bracket.  *\/$/;"	e	enum:__anon1
REG_ECOLLATE	regex.h	/^  REG_ECOLLATE,		\/* Inalid collating element.  *\/$/;"	e	enum:__anon1
REG_ECTYPE	regex.h	/^  REG_ECTYPE,		\/* Invalid character class name.  *\/$/;"	e	enum:__anon1
REG_EEND	regex.h	/^  REG_EEND,		\/* Premature end.  *\/$/;"	e	enum:__anon1
REG_EESCAPE	regex.h	/^  REG_EESCAPE,		\/* Trailing backslash.  *\/$/;"	e	enum:__anon1
REG_ENOSYS	regex.h	/^  REG_ENOSYS = -1,	\/* This will never happen for this implementation.  *\/$/;"	e	enum:__anon1
REG_EPAREN	regex.h	/^  REG_EPAREN,		\/* Parenthesis imbalance.  *\/$/;"	e	enum:__anon1
REG_ERANGE	regex.h	/^  REG_ERANGE,		\/* Invalid range end.  *\/$/;"	e	enum:__anon1
REG_ERPAREN	regex.h	/^  REG_ERPAREN		\/* Unmatched ) or \\); not returned from regcomp.  *\/$/;"	e	enum:__anon1
REG_ESIZE	regex.h	/^  REG_ESIZE,		\/* Compiled pattern bigger than 2^16 bytes.  *\/$/;"	e	enum:__anon1
REG_ESPACE	regex.h	/^  REG_ESPACE,		\/* Ran out of memory.  *\/$/;"	e	enum:__anon1
REG_ESUBREG	regex.h	/^  REG_ESUBREG,		\/* Invalid back reference.  *\/$/;"	e	enum:__anon1
REG_EXTENDED	regex.h	281;"	d
REG_ICASE	regex.h	285;"	d
REG_NEWLINE	regex.h	290;"	d
REG_NOERROR	regex.h	/^  REG_NOERROR = 0,	\/* Success.  *\/$/;"	e	enum:__anon1
REG_NOMATCH	regex.h	/^  REG_NOMATCH,		\/* Didn't find a match (for regexec).  *\/$/;"	e	enum:__anon1
REG_NOSUB	regex.h	294;"	d
REG_NOTBOL	regex.h	304;"	d
REG_NOTEOL	regex.h	307;"	d
REG_STARTEND	regex.h	312;"	d
RES_AAONLY	resolv.h	197;"	d
RES_BLAST	resolv.h	212;"	d
RES_DEBUG	resolv.h	196;"	d
RES_DEFAULT	resolv.h	225;"	d
RES_DEFNAMES	resolv.h	202;"	d
RES_DFLRETRY	resolv.h	101;"	d
RES_DNSRCH	resolv.h	204;"	d
RES_EXHAUSTIVE	resolv.h	190;"	d
RES_F_CONN	resolv.h	186;"	d
RES_F_EDNS0ERR	resolv.h	187;"	d
RES_F_VC	resolv.h	185;"	d
RES_IGNTC	resolv.h	200;"	d
RES_INIT	resolv.h	195;"	d
RES_INSECURE1	resolv.h	205;"	d
RES_INSECURE2	resolv.h	206;"	d
RES_KEEPTSIG	resolv.h	211;"	d
RES_MAXNDOTS	resolv.h	98;"	d
RES_MAXRETRANS	resolv.h	99;"	d
RES_MAXRETRY	resolv.h	100;"	d
RES_MAXTIME	resolv.h	102;"	d
RES_NOALIASES	resolv.h	207;"	d
RES_NOCHECKNAME	resolv.h	210;"	d
RES_NOIP6DOTINT	resolv.h	215;"	d
RES_NOTLDQUERY	resolv.h	222;"	d
RES_PRF_ADD	resolv.h	237;"	d
RES_PRF_ANS	resolv.h	235;"	d
RES_PRF_AUTH	resolv.h	236;"	d
RES_PRF_CLASS	resolv.h	232;"	d
RES_PRF_CMD	resolv.h	233;"	d
RES_PRF_HEAD1	resolv.h	238;"	d
RES_PRF_HEAD2	resolv.h	239;"	d
RES_PRF_HEADX	resolv.h	241;"	d
RES_PRF_INIT	resolv.h	244;"	d
RES_PRF_QUERY	resolv.h	242;"	d
RES_PRF_QUES	resolv.h	234;"	d
RES_PRF_REPLY	resolv.h	243;"	d
RES_PRF_STATS	resolv.h	230;"	d
RES_PRF_TTLID	resolv.h	240;"	d
RES_PRF_UPDATE	resolv.h	231;"	d
RES_PRIMARY	resolv.h	199;"	d
RES_RECURSE	resolv.h	201;"	d
RES_ROTATE	resolv.h	209;"	d
RES_SNGLKUP	resolv.h	218;"	d
RES_SNGLKUPREOP	resolv.h	219;"	d
RES_STAYOPEN	resolv.h	203;"	d
RES_TIMEOUT	resolv.h	96;"	d
RES_USEBSTRING	resolv.h	213;"	d
RES_USEVC	resolv.h	198;"	d
RES_USE_DNSSEC	resolv.h	221;"	d
RES_USE_EDNS0	resolv.h	217;"	d
RES_USE_INET6	resolv.h	208;"	d
RE_BACKSLASH_ESCAPE_IN_LISTS	regex.h	50;"	d
RE_BK_PLUS_QM	regex.h	55;"	d
RE_CARET_ANCHORS_HERE	regex.h	171;"	d
RE_CHAR_CLASSES	regex.h	61;"	d
RE_CONTEXT_INDEP_ANCHORS	regex.h	75;"	d
RE_CONTEXT_INDEP_OPS	regex.h	83;"	d
RE_CONTEXT_INVALID_DUP	regex.h	175;"	d
RE_CONTEXT_INVALID_OPS	regex.h	87;"	d
RE_DEBUG	regex.h	155;"	d
RE_DOT_NEWLINE	regex.h	91;"	d
RE_DOT_NOT_NULL	regex.h	95;"	d
RE_DUP_MAX	regex.h	270;"	d
RE_DUP_MAX	regex.h	273;"	d
RE_HAT_LISTS_NOT_NEWLINE	regex.h	99;"	d
RE_ICASE	regex.h	166;"	d
RE_INTERVALS	regex.h	104;"	d
RE_INVALID_INTERVAL_ORD	regex.h	160;"	d
RE_LIMITED_OPS	regex.h	108;"	d
RE_NEWLINE_ALT	regex.h	112;"	d
RE_NO_BK_BRACES	regex.h	117;"	d
RE_NO_BK_PARENS	regex.h	121;"	d
RE_NO_BK_REFS	regex.h	125;"	d
RE_NO_BK_VBAR	regex.h	129;"	d
RE_NO_EMPTY_RANGES	regex.h	135;"	d
RE_NO_GNU_OPS	regex.h	147;"	d
RE_NO_POSIX_BACKTRACKING	regex.h	143;"	d
RE_NO_SUB	regex.h	179;"	d
RE_NREGS	regex.h	454;"	d
RE_SYNTAX_AWK	regex.h	196;"	d
RE_SYNTAX_ED	regex.h	228;"	d
RE_SYNTAX_EGREP	regex.h	217;"	d
RE_SYNTAX_EMACS	regex.h	194;"	d
RE_SYNTAX_GNU_AWK	regex.h	203;"	d
RE_SYNTAX_GREP	regex.h	212;"	d
RE_SYNTAX_POSIX_AWK	regex.h	208;"	d
RE_SYNTAX_POSIX_BASIC	regex.h	238;"	d
RE_SYNTAX_POSIX_BASIC	regex.h	241;"	d
RE_SYNTAX_POSIX_EGREP	regex.h	223;"	d
RE_SYNTAX_POSIX_EXTENDED	regex.h	251;"	d
RE_SYNTAX_POSIX_MINIMAL_BASIC	regex.h	248;"	d
RE_SYNTAX_POSIX_MINIMAL_EXTENDED	regex.h	259;"	d
RE_SYNTAX_SED	regex.h	230;"	d
RE_TRANSLATE_TYPE	regex.h	357;"	d
RE_UNMATCHED_RIGHT_PAREN_ORD	regex.h	139;"	d
RHF_CORD	elf.h	1694;"	d
RHF_DEFAULT_DELAY_LOAD	elf.h	1691;"	d
RHF_DELTA_C_PLUS_PLUS	elf.h	1688;"	d
RHF_GUARANTEE_INIT	elf.h	1687;"	d
RHF_GUARANTEE_START_INIT	elf.h	1689;"	d
RHF_NONE	elf.h	1681;"	d
RHF_NOTPOT	elf.h	1683;"	d
RHF_NO_LIBRARY_REPLACEMENT	elf.h	1684;"	d
RHF_NO_MOVE	elf.h	1685;"	d
RHF_NO_UNRES_UNDEF	elf.h	1695;"	d
RHF_PIXIE	elf.h	1690;"	d
RHF_QUICKSTART	elf.h	1682;"	d
RHF_REQUICKSTART	elf.h	1692;"	d
RHF_REQUICKSTARTED	elf.h	1693;"	d
RHF_RLD_ORDER_SAFE	elf.h	1696;"	d
RHF_SGI_ONLY	elf.h	1686;"	d
RTLD_DEFAULT	dlfcn.h	41;"	d
RTLD_DI_CONFIGADDR	dlfcn.h	/^    RTLD_DI_CONFIGADDR = 3,	\/* Unsupported, defined by Solaris.  *\/$/;"	e	enum:__anon11
RTLD_DI_LINKMAP	dlfcn.h	/^    RTLD_DI_LINKMAP = 2,$/;"	e	enum:__anon11
RTLD_DI_LMID	dlfcn.h	/^    RTLD_DI_LMID = 1,$/;"	e	enum:__anon11
RTLD_DI_MAX	dlfcn.h	/^    RTLD_DI_MAX = 10$/;"	e	enum:__anon11
RTLD_DI_ORIGIN	dlfcn.h	/^    RTLD_DI_ORIGIN = 6,$/;"	e	enum:__anon11
RTLD_DI_PROFILENAME	dlfcn.h	/^    RTLD_DI_PROFILENAME = 7,	\/* Unsupported, defined by Solaris.  *\/$/;"	e	enum:__anon11
RTLD_DI_PROFILEOUT	dlfcn.h	/^    RTLD_DI_PROFILEOUT = 8,	\/* Unsupported, defined by Solaris.  *\/$/;"	e	enum:__anon11
RTLD_DI_SERINFO	dlfcn.h	/^    RTLD_DI_SERINFO = 4,$/;"	e	enum:__anon11
RTLD_DI_SERINFOSIZE	dlfcn.h	/^    RTLD_DI_SERINFOSIZE = 5,$/;"	e	enum:__anon11
RTLD_DI_TLS_DATA	dlfcn.h	/^    RTLD_DI_TLS_DATA = 10,$/;"	e	enum:__anon11
RTLD_DI_TLS_MODID	dlfcn.h	/^    RTLD_DI_TLS_MODID = 9,$/;"	e	enum:__anon11
RTLD_DL_LINKMAP	dlfcn.h	/^    RTLD_DL_LINKMAP = 2$/;"	e	enum:__anon10
RTLD_DL_SYMENT	dlfcn.h	/^    RTLD_DL_SYMENT = 1,$/;"	e	enum:__anon10
RTLD_NEXT	dlfcn.h	36;"	d
RT_ADD	link.h	/^	RT_ADD,			\/* Beginning to add a new object.  *\/$/;"	e	enum:r_debug::__anon51
RT_CONSISTENT	link.h	/^	RT_CONSISTENT,		\/* Mapping change is complete.  *\/$/;"	e	enum:r_debug::__anon51
RT_DELETE	link.h	/^	RT_DELETE		\/* Beginning to remove an object mapping.  *\/$/;"	e	enum:r_debug::__anon51
R_386_16	elf.h	1180;"	d
R_386_32	elf.h	1157;"	d
R_386_32PLT	elf.h	1167;"	d
R_386_8	elf.h	1182;"	d
R_386_COPY	elf.h	1161;"	d
R_386_GLOB_DAT	elf.h	1162;"	d
R_386_GOT32	elf.h	1159;"	d
R_386_GOTOFF	elf.h	1165;"	d
R_386_GOTPC	elf.h	1166;"	d
R_386_IRELATIVE	elf.h	1213;"	d
R_386_JMP_SLOT	elf.h	1163;"	d
R_386_NONE	elf.h	1156;"	d
R_386_NUM	elf.h	1215;"	d
R_386_PC16	elf.h	1181;"	d
R_386_PC32	elf.h	1158;"	d
R_386_PC8	elf.h	1183;"	d
R_386_PLT32	elf.h	1160;"	d
R_386_RELATIVE	elf.h	1164;"	d
R_386_TLS_DESC	elf.h	1209;"	d
R_386_TLS_DESC_CALL	elf.h	1206;"	d
R_386_TLS_DTPMOD32	elf.h	1201;"	d
R_386_TLS_DTPOFF32	elf.h	1202;"	d
R_386_TLS_GD	elf.h	1175;"	d
R_386_TLS_GD_32	elf.h	1184;"	d
R_386_TLS_GD_CALL	elf.h	1187;"	d
R_386_TLS_GD_POP	elf.h	1189;"	d
R_386_TLS_GD_PUSH	elf.h	1186;"	d
R_386_TLS_GOTDESC	elf.h	1205;"	d
R_386_TLS_GOTIE	elf.h	1171;"	d
R_386_TLS_IE	elf.h	1169;"	d
R_386_TLS_IE_32	elf.h	1197;"	d
R_386_TLS_LDM	elf.h	1177;"	d
R_386_TLS_LDM_32	elf.h	1190;"	d
R_386_TLS_LDM_CALL	elf.h	1193;"	d
R_386_TLS_LDM_POP	elf.h	1195;"	d
R_386_TLS_LDM_PUSH	elf.h	1192;"	d
R_386_TLS_LDO_32	elf.h	1196;"	d
R_386_TLS_LE	elf.h	1173;"	d
R_386_TLS_LE_32	elf.h	1199;"	d
R_386_TLS_TPOFF	elf.h	1168;"	d
R_386_TLS_TPOFF32	elf.h	1203;"	d
R_390_12	elf.h	2555;"	d
R_390_16	elf.h	2556;"	d
R_390_20	elf.h	2627;"	d
R_390_32	elf.h	2557;"	d
R_390_64	elf.h	2575;"	d
R_390_8	elf.h	2554;"	d
R_390_COPY	elf.h	2562;"	d
R_390_GLOB_DAT	elf.h	2563;"	d
R_390_GOT12	elf.h	2559;"	d
R_390_GOT16	elf.h	2568;"	d
R_390_GOT20	elf.h	2628;"	d
R_390_GOT32	elf.h	2560;"	d
R_390_GOT64	elf.h	2577;"	d
R_390_GOTENT	elf.h	2579;"	d
R_390_GOTOFF16	elf.h	2580;"	d
R_390_GOTOFF32	elf.h	2566;"	d
R_390_GOTOFF64	elf.h	2581;"	d
R_390_GOTPC	elf.h	2567;"	d
R_390_GOTPCDBL	elf.h	2574;"	d
R_390_GOTPLT12	elf.h	2582;"	d
R_390_GOTPLT16	elf.h	2583;"	d
R_390_GOTPLT20	elf.h	2629;"	d
R_390_GOTPLT32	elf.h	2584;"	d
R_390_GOTPLT64	elf.h	2585;"	d
R_390_GOTPLTENT	elf.h	2586;"	d
R_390_JMP_SLOT	elf.h	2564;"	d
R_390_NONE	elf.h	2553;"	d
R_390_NUM	elf.h	2633;"	d
R_390_PC16	elf.h	2569;"	d
R_390_PC16DBL	elf.h	2570;"	d
R_390_PC32	elf.h	2558;"	d
R_390_PC32DBL	elf.h	2572;"	d
R_390_PC64	elf.h	2576;"	d
R_390_PLT16DBL	elf.h	2571;"	d
R_390_PLT32	elf.h	2561;"	d
R_390_PLT32DBL	elf.h	2573;"	d
R_390_PLT64	elf.h	2578;"	d
R_390_PLTOFF16	elf.h	2587;"	d
R_390_PLTOFF32	elf.h	2588;"	d
R_390_PLTOFF64	elf.h	2589;"	d
R_390_RELATIVE	elf.h	2565;"	d
R_390_TLS_DTPMOD	elf.h	2623;"	d
R_390_TLS_DTPOFF	elf.h	2624;"	d
R_390_TLS_GD32	elf.h	2595;"	d
R_390_TLS_GD64	elf.h	2597;"	d
R_390_TLS_GDCALL	elf.h	2591;"	d
R_390_TLS_GOTIE12	elf.h	2599;"	d
R_390_TLS_GOTIE20	elf.h	2630;"	d
R_390_TLS_GOTIE32	elf.h	2601;"	d
R_390_TLS_GOTIE64	elf.h	2603;"	d
R_390_TLS_IE32	elf.h	2609;"	d
R_390_TLS_IE64	elf.h	2611;"	d
R_390_TLS_IEENT	elf.h	2613;"	d
R_390_TLS_LDCALL	elf.h	2593;"	d
R_390_TLS_LDM32	elf.h	2605;"	d
R_390_TLS_LDM64	elf.h	2607;"	d
R_390_TLS_LDO32	elf.h	2619;"	d
R_390_TLS_LDO64	elf.h	2621;"	d
R_390_TLS_LE32	elf.h	2615;"	d
R_390_TLS_LE64	elf.h	2617;"	d
R_390_TLS_LOAD	elf.h	2590;"	d
R_390_TLS_TPOFF	elf.h	2625;"	d
R_68K_16	elf.h	1107;"	d
R_68K_32	elf.h	1106;"	d
R_68K_8	elf.h	1108;"	d
R_68K_COPY	elf.h	1124;"	d
R_68K_GLOB_DAT	elf.h	1125;"	d
R_68K_GOT16	elf.h	1113;"	d
R_68K_GOT16O	elf.h	1116;"	d
R_68K_GOT32	elf.h	1112;"	d
R_68K_GOT32O	elf.h	1115;"	d
R_68K_GOT8	elf.h	1114;"	d
R_68K_GOT8O	elf.h	1117;"	d
R_68K_JMP_SLOT	elf.h	1126;"	d
R_68K_NONE	elf.h	1105;"	d
R_68K_NUM	elf.h	1150;"	d
R_68K_PC16	elf.h	1110;"	d
R_68K_PC32	elf.h	1109;"	d
R_68K_PC8	elf.h	1111;"	d
R_68K_PLT16	elf.h	1119;"	d
R_68K_PLT16O	elf.h	1122;"	d
R_68K_PLT32	elf.h	1118;"	d
R_68K_PLT32O	elf.h	1121;"	d
R_68K_PLT8	elf.h	1120;"	d
R_68K_PLT8O	elf.h	1123;"	d
R_68K_RELATIVE	elf.h	1127;"	d
R_68K_TLS_DTPMOD32	elf.h	1146;"	d
R_68K_TLS_DTPREL32	elf.h	1147;"	d
R_68K_TLS_GD16	elf.h	1129;"	d
R_68K_TLS_GD32	elf.h	1128;"	d
R_68K_TLS_GD8	elf.h	1130;"	d
R_68K_TLS_IE16	elf.h	1138;"	d
R_68K_TLS_IE32	elf.h	1137;"	d
R_68K_TLS_IE8	elf.h	1139;"	d
R_68K_TLS_LDM16	elf.h	1132;"	d
R_68K_TLS_LDM32	elf.h	1131;"	d
R_68K_TLS_LDM8	elf.h	1133;"	d
R_68K_TLS_LDO16	elf.h	1135;"	d
R_68K_TLS_LDO32	elf.h	1134;"	d
R_68K_TLS_LDO8	elf.h	1136;"	d
R_68K_TLS_LE16	elf.h	1142;"	d
R_68K_TLS_LE32	elf.h	1140;"	d
R_68K_TLS_LE8	elf.h	1144;"	d
R_68K_TLS_TPREL32	elf.h	1148;"	d
R_ALPHA_BRADDR	elf.h	1955;"	d
R_ALPHA_COPY	elf.h	1963;"	d
R_ALPHA_DTPMOD64	elf.h	1970;"	d
R_ALPHA_DTPREL16	elf.h	1975;"	d
R_ALPHA_DTPREL64	elf.h	1972;"	d
R_ALPHA_DTPRELHI	elf.h	1973;"	d
R_ALPHA_DTPRELLO	elf.h	1974;"	d
R_ALPHA_GLOB_DAT	elf.h	1964;"	d
R_ALPHA_GOTDTPREL	elf.h	1971;"	d
R_ALPHA_GOTTPREL	elf.h	1976;"	d
R_ALPHA_GPDISP	elf.h	1954;"	d
R_ALPHA_GPREL16	elf.h	1962;"	d
R_ALPHA_GPREL32	elf.h	1951;"	d
R_ALPHA_GPRELHIGH	elf.h	1960;"	d
R_ALPHA_GPRELLOW	elf.h	1961;"	d
R_ALPHA_HINT	elf.h	1956;"	d
R_ALPHA_JMP_SLOT	elf.h	1965;"	d
R_ALPHA_LITERAL	elf.h	1952;"	d
R_ALPHA_LITUSE	elf.h	1953;"	d
R_ALPHA_NONE	elf.h	1948;"	d
R_ALPHA_NUM	elf.h	1982;"	d
R_ALPHA_REFLONG	elf.h	1949;"	d
R_ALPHA_REFQUAD	elf.h	1950;"	d
R_ALPHA_RELATIVE	elf.h	1966;"	d
R_ALPHA_SREL16	elf.h	1957;"	d
R_ALPHA_SREL32	elf.h	1958;"	d
R_ALPHA_SREL64	elf.h	1959;"	d
R_ALPHA_TLSGD	elf.h	1968;"	d
R_ALPHA_TLS_GD_HI	elf.h	1967;"	d
R_ALPHA_TLS_LDM	elf.h	1969;"	d
R_ALPHA_TPREL16	elf.h	1980;"	d
R_ALPHA_TPREL64	elf.h	1977;"	d
R_ALPHA_TPRELHI	elf.h	1978;"	d
R_ALPHA_TPRELLO	elf.h	1979;"	d
R_ARM_ABS12	elf.h	2314;"	d
R_ARM_ABS16	elf.h	2313;"	d
R_ARM_ABS32	elf.h	2310;"	d
R_ARM_ABS8	elf.h	2316;"	d
R_ARM_ALU_PCREL_15_8	elf.h	2337;"	d
R_ARM_ALU_PCREL_23_15	elf.h	2338;"	d
R_ARM_ALU_PCREL_7_0	elf.h	2336;"	d
R_ARM_ALU_SBREL_19_12	elf.h	2340;"	d
R_ARM_ALU_SBREL_27_20	elf.h	2341;"	d
R_ARM_AMP_VCALL9	elf.h	2320;"	d
R_ARM_COPY	elf.h	2328;"	d
R_ARM_GLOB_DAT	elf.h	2329;"	d
R_ARM_GNU_VTENTRY	elf.h	2342;"	d
R_ARM_GNU_VTINHERIT	elf.h	2343;"	d
R_ARM_GOT32	elf.h	2334;"	d
R_ARM_GOTOFF	elf.h	2332;"	d
R_ARM_GOTPC	elf.h	2333;"	d
R_ARM_JUMP_SLOT	elf.h	2330;"	d
R_ARM_LDR_SBREL_11_0	elf.h	2339;"	d
R_ARM_NONE	elf.h	2308;"	d
R_ARM_NUM	elf.h	2364;"	d
R_ARM_PC13	elf.h	2312;"	d
R_ARM_PC24	elf.h	2309;"	d
R_ARM_PLT32	elf.h	2335;"	d
R_ARM_RABS22	elf.h	2360;"	d
R_ARM_RBASE	elf.h	2362;"	d
R_ARM_REL32	elf.h	2311;"	d
R_ARM_RELATIVE	elf.h	2331;"	d
R_ARM_RPC24	elf.h	2361;"	d
R_ARM_RREL32	elf.h	2359;"	d
R_ARM_RSBREL32	elf.h	2357;"	d
R_ARM_RXPC25	elf.h	2356;"	d
R_ARM_SBREL32	elf.h	2317;"	d
R_ARM_SWI24	elf.h	2321;"	d
R_ARM_THM_ABS5	elf.h	2315;"	d
R_ARM_THM_PC11	elf.h	2344;"	d
R_ARM_THM_PC22	elf.h	2318;"	d
R_ARM_THM_PC8	elf.h	2319;"	d
R_ARM_THM_PC9	elf.h	2345;"	d
R_ARM_THM_RPC22	elf.h	2358;"	d
R_ARM_THM_SWI8	elf.h	2322;"	d
R_ARM_THM_XPC22	elf.h	2324;"	d
R_ARM_TLS_DTPMOD32	elf.h	2325;"	d
R_ARM_TLS_DTPOFF32	elf.h	2326;"	d
R_ARM_TLS_GD32	elf.h	2346;"	d
R_ARM_TLS_IE32	elf.h	2352;"	d
R_ARM_TLS_LDM32	elf.h	2348;"	d
R_ARM_TLS_LDO32	elf.h	2350;"	d
R_ARM_TLS_LE32	elf.h	2354;"	d
R_ARM_TLS_TPOFF32	elf.h	2327;"	d
R_ARM_XPC25	elf.h	2323;"	d
R_CRIS_16	elf.h	2639;"	d
R_CRIS_16_GOT	elf.h	2650;"	d
R_CRIS_16_GOTPLT	elf.h	2652;"	d
R_CRIS_16_PCREL	elf.h	2642;"	d
R_CRIS_32	elf.h	2640;"	d
R_CRIS_32_GOT	elf.h	2651;"	d
R_CRIS_32_GOTPLT	elf.h	2653;"	d
R_CRIS_32_GOTREL	elf.h	2654;"	d
R_CRIS_32_PCREL	elf.h	2643;"	d
R_CRIS_32_PLT_GOTREL	elf.h	2655;"	d
R_CRIS_32_PLT_PCREL	elf.h	2656;"	d
R_CRIS_8	elf.h	2638;"	d
R_CRIS_8_PCREL	elf.h	2641;"	d
R_CRIS_COPY	elf.h	2646;"	d
R_CRIS_GLOB_DAT	elf.h	2647;"	d
R_CRIS_GNU_VTENTRY	elf.h	2645;"	d
R_CRIS_GNU_VTINHERIT	elf.h	2644;"	d
R_CRIS_JUMP_SLOT	elf.h	2648;"	d
R_CRIS_NONE	elf.h	2637;"	d
R_CRIS_NUM	elf.h	2658;"	d
R_CRIS_RELATIVE	elf.h	2649;"	d
R_IA64_COPY	elf.h	2456;"	d
R_IA64_DIR32LSB	elf.h	2401;"	d
R_IA64_DIR32MSB	elf.h	2400;"	d
R_IA64_DIR64LSB	elf.h	2403;"	d
R_IA64_DIR64MSB	elf.h	2402;"	d
R_IA64_DTPMOD64LSB	elf.h	2467;"	d
R_IA64_DTPMOD64MSB	elf.h	2466;"	d
R_IA64_DTPREL14	elf.h	2469;"	d
R_IA64_DTPREL22	elf.h	2470;"	d
R_IA64_DTPREL32LSB	elf.h	2473;"	d
R_IA64_DTPREL32MSB	elf.h	2472;"	d
R_IA64_DTPREL64I	elf.h	2471;"	d
R_IA64_DTPREL64LSB	elf.h	2475;"	d
R_IA64_DTPREL64MSB	elf.h	2474;"	d
R_IA64_FPTR32LSB	elf.h	2418;"	d
R_IA64_FPTR32MSB	elf.h	2417;"	d
R_IA64_FPTR64I	elf.h	2416;"	d
R_IA64_FPTR64LSB	elf.h	2420;"	d
R_IA64_FPTR64MSB	elf.h	2419;"	d
R_IA64_GPREL22	elf.h	2404;"	d
R_IA64_GPREL32LSB	elf.h	2407;"	d
R_IA64_GPREL32MSB	elf.h	2406;"	d
R_IA64_GPREL64I	elf.h	2405;"	d
R_IA64_GPREL64LSB	elf.h	2409;"	d
R_IA64_GPREL64MSB	elf.h	2408;"	d
R_IA64_IMM14	elf.h	2397;"	d
R_IA64_IMM22	elf.h	2398;"	d
R_IA64_IMM64	elf.h	2399;"	d
R_IA64_IPLTLSB	elf.h	2455;"	d
R_IA64_IPLTMSB	elf.h	2454;"	d
R_IA64_LDXMOV	elf.h	2459;"	d
R_IA64_LTOFF22	elf.h	2410;"	d
R_IA64_LTOFF22X	elf.h	2458;"	d
R_IA64_LTOFF64I	elf.h	2411;"	d
R_IA64_LTOFF_DTPMOD22	elf.h	2468;"	d
R_IA64_LTOFF_DTPREL22	elf.h	2476;"	d
R_IA64_LTOFF_FPTR22	elf.h	2429;"	d
R_IA64_LTOFF_FPTR32LSB	elf.h	2432;"	d
R_IA64_LTOFF_FPTR32MSB	elf.h	2431;"	d
R_IA64_LTOFF_FPTR64I	elf.h	2430;"	d
R_IA64_LTOFF_FPTR64LSB	elf.h	2434;"	d
R_IA64_LTOFF_FPTR64MSB	elf.h	2433;"	d
R_IA64_LTOFF_TPREL22	elf.h	2465;"	d
R_IA64_LTV32LSB	elf.h	2448;"	d
R_IA64_LTV32MSB	elf.h	2447;"	d
R_IA64_LTV64LSB	elf.h	2450;"	d
R_IA64_LTV64MSB	elf.h	2449;"	d
R_IA64_NONE	elf.h	2396;"	d
R_IA64_PCREL21B	elf.h	2422;"	d
R_IA64_PCREL21BI	elf.h	2451;"	d
R_IA64_PCREL21F	elf.h	2424;"	d
R_IA64_PCREL21M	elf.h	2423;"	d
R_IA64_PCREL22	elf.h	2452;"	d
R_IA64_PCREL32LSB	elf.h	2426;"	d
R_IA64_PCREL32MSB	elf.h	2425;"	d
R_IA64_PCREL60B	elf.h	2421;"	d
R_IA64_PCREL64I	elf.h	2453;"	d
R_IA64_PCREL64LSB	elf.h	2428;"	d
R_IA64_PCREL64MSB	elf.h	2427;"	d
R_IA64_PLTOFF22	elf.h	2412;"	d
R_IA64_PLTOFF64I	elf.h	2413;"	d
R_IA64_PLTOFF64LSB	elf.h	2415;"	d
R_IA64_PLTOFF64MSB	elf.h	2414;"	d
R_IA64_REL32LSB	elf.h	2444;"	d
R_IA64_REL32MSB	elf.h	2443;"	d
R_IA64_REL64LSB	elf.h	2446;"	d
R_IA64_REL64MSB	elf.h	2445;"	d
R_IA64_SECREL32LSB	elf.h	2440;"	d
R_IA64_SECREL32MSB	elf.h	2439;"	d
R_IA64_SECREL64LSB	elf.h	2442;"	d
R_IA64_SECREL64MSB	elf.h	2441;"	d
R_IA64_SEGREL32LSB	elf.h	2436;"	d
R_IA64_SEGREL32MSB	elf.h	2435;"	d
R_IA64_SEGREL64LSB	elf.h	2438;"	d
R_IA64_SEGREL64MSB	elf.h	2437;"	d
R_IA64_SUB	elf.h	2457;"	d
R_IA64_TPREL14	elf.h	2460;"	d
R_IA64_TPREL22	elf.h	2461;"	d
R_IA64_TPREL64I	elf.h	2462;"	d
R_IA64_TPREL64LSB	elf.h	2464;"	d
R_IA64_TPREL64MSB	elf.h	2463;"	d
R_M32R_10_PCREL	elf.h	2746;"	d
R_M32R_10_PCREL_RELA	elf.h	2759;"	d
R_M32R_16	elf.h	2743;"	d
R_M32R_16_RELA	elf.h	2756;"	d
R_M32R_18_PCREL	elf.h	2747;"	d
R_M32R_18_PCREL_RELA	elf.h	2760;"	d
R_M32R_24	elf.h	2745;"	d
R_M32R_24_RELA	elf.h	2758;"	d
R_M32R_26_PCREL	elf.h	2748;"	d
R_M32R_26_PCREL_RELA	elf.h	2761;"	d
R_M32R_26_PLTREL	elf.h	2771;"	d
R_M32R_32	elf.h	2744;"	d
R_M32R_32_RELA	elf.h	2757;"	d
R_M32R_COPY	elf.h	2772;"	d
R_M32R_GLOB_DAT	elf.h	2773;"	d
R_M32R_GNU_VTENTRY	elf.h	2754;"	d
R_M32R_GNU_VTINHERIT	elf.h	2753;"	d
R_M32R_GOT16_HI_SLO	elf.h	2780;"	d
R_M32R_GOT16_HI_ULO	elf.h	2778;"	d
R_M32R_GOT16_LO	elf.h	2782;"	d
R_M32R_GOT24	elf.h	2770;"	d
R_M32R_GOTOFF	elf.h	2776;"	d
R_M32R_GOTOFF_HI_SLO	elf.h	2791;"	d
R_M32R_GOTOFF_HI_ULO	elf.h	2789;"	d
R_M32R_GOTOFF_LO	elf.h	2793;"	d
R_M32R_GOTPC24	elf.h	2777;"	d
R_M32R_GOTPC_HI_SLO	elf.h	2785;"	d
R_M32R_GOTPC_HI_ULO	elf.h	2783;"	d
R_M32R_GOTPC_LO	elf.h	2787;"	d
R_M32R_HI16_SLO	elf.h	2750;"	d
R_M32R_HI16_SLO_RELA	elf.h	2763;"	d
R_M32R_HI16_ULO	elf.h	2749;"	d
R_M32R_HI16_ULO_RELA	elf.h	2762;"	d
R_M32R_JMP_SLOT	elf.h	2774;"	d
R_M32R_LO16	elf.h	2751;"	d
R_M32R_LO16_RELA	elf.h	2764;"	d
R_M32R_NONE	elf.h	2742;"	d
R_M32R_NUM	elf.h	2794;"	d
R_M32R_REL32	elf.h	2768;"	d
R_M32R_RELATIVE	elf.h	2775;"	d
R_M32R_RELA_GNU_VTENTRY	elf.h	2767;"	d
R_M32R_RELA_GNU_VTINHERIT	elf.h	2766;"	d
R_M32R_SDA16	elf.h	2752;"	d
R_M32R_SDA16_RELA	elf.h	2765;"	d
R_MIPS_16	elf.h	1553;"	d
R_MIPS_26	elf.h	1556;"	d
R_MIPS_32	elf.h	1554;"	d
R_MIPS_64	elf.h	1568;"	d
R_MIPS_ADD_IMMEDIATE	elf.h	1584;"	d
R_MIPS_CALL16	elf.h	1563;"	d
R_MIPS_CALL_HI16	elf.h	1580;"	d
R_MIPS_CALL_LO16	elf.h	1581;"	d
R_MIPS_COPY	elf.h	1602;"	d
R_MIPS_DELETE	elf.h	1577;"	d
R_MIPS_GLOB_DAT	elf.h	1601;"	d
R_MIPS_GOT16	elf.h	1561;"	d
R_MIPS_GOT_DISP	elf.h	1569;"	d
R_MIPS_GOT_HI16	elf.h	1572;"	d
R_MIPS_GOT_LO16	elf.h	1573;"	d
R_MIPS_GOT_OFST	elf.h	1571;"	d
R_MIPS_GOT_PAGE	elf.h	1570;"	d
R_MIPS_GPREL16	elf.h	1559;"	d
R_MIPS_GPREL32	elf.h	1564;"	d
R_MIPS_HI16	elf.h	1557;"	d
R_MIPS_HIGHER	elf.h	1578;"	d
R_MIPS_HIGHEST	elf.h	1579;"	d
R_MIPS_INSERT_A	elf.h	1575;"	d
R_MIPS_INSERT_B	elf.h	1576;"	d
R_MIPS_JALR	elf.h	1587;"	d
R_MIPS_JUMP_SLOT	elf.h	1603;"	d
R_MIPS_LITERAL	elf.h	1560;"	d
R_MIPS_LO16	elf.h	1558;"	d
R_MIPS_NONE	elf.h	1552;"	d
R_MIPS_NUM	elf.h	1605;"	d
R_MIPS_PC16	elf.h	1562;"	d
R_MIPS_PJUMP	elf.h	1585;"	d
R_MIPS_REL16	elf.h	1583;"	d
R_MIPS_REL32	elf.h	1555;"	d
R_MIPS_RELGOT	elf.h	1586;"	d
R_MIPS_SCN_DISP	elf.h	1582;"	d
R_MIPS_SHIFT5	elf.h	1566;"	d
R_MIPS_SHIFT6	elf.h	1567;"	d
R_MIPS_SUB	elf.h	1574;"	d
R_MIPS_TLS_DTPMOD32	elf.h	1588;"	d
R_MIPS_TLS_DTPMOD64	elf.h	1590;"	d
R_MIPS_TLS_DTPREL32	elf.h	1589;"	d
R_MIPS_TLS_DTPREL64	elf.h	1591;"	d
R_MIPS_TLS_DTPREL_HI16	elf.h	1594;"	d
R_MIPS_TLS_DTPREL_LO16	elf.h	1595;"	d
R_MIPS_TLS_GD	elf.h	1592;"	d
R_MIPS_TLS_GOTTPREL	elf.h	1596;"	d
R_MIPS_TLS_LDM	elf.h	1593;"	d
R_MIPS_TLS_TPREL32	elf.h	1597;"	d
R_MIPS_TLS_TPREL64	elf.h	1598;"	d
R_MIPS_TLS_TPREL_HI16	elf.h	1599;"	d
R_MIPS_TLS_TPREL_LO16	elf.h	1600;"	d
R_MN10300_16	elf.h	2715;"	d
R_MN10300_24	elf.h	2722;"	d
R_MN10300_32	elf.h	2714;"	d
R_MN10300_8	elf.h	2716;"	d
R_MN10300_COPY	elf.h	2733;"	d
R_MN10300_GLOB_DAT	elf.h	2734;"	d
R_MN10300_GNU_VTENTRY	elf.h	2721;"	d
R_MN10300_GNU_VTINHERIT	elf.h	2720;"	d
R_MN10300_GOT16	elf.h	2732;"	d
R_MN10300_GOT24	elf.h	2731;"	d
R_MN10300_GOT32	elf.h	2730;"	d
R_MN10300_GOTOFF16	elf.h	2727;"	d
R_MN10300_GOTOFF24	elf.h	2726;"	d
R_MN10300_GOTOFF32	elf.h	2725;"	d
R_MN10300_GOTPC16	elf.h	2724;"	d
R_MN10300_GOTPC32	elf.h	2723;"	d
R_MN10300_JMP_SLOT	elf.h	2735;"	d
R_MN10300_NONE	elf.h	2713;"	d
R_MN10300_NUM	elf.h	2738;"	d
R_MN10300_PCREL16	elf.h	2718;"	d
R_MN10300_PCREL32	elf.h	2717;"	d
R_MN10300_PCREL8	elf.h	2719;"	d
R_MN10300_PLT16	elf.h	2729;"	d
R_MN10300_PLT32	elf.h	2728;"	d
R_MN10300_RELATIVE	elf.h	2736;"	d
R_OK	fcntl.h	91;"	d
R_OK	unistd.h	282;"	d
R_PARISC_COPY	elf.h	1848;"	d
R_PARISC_DIR14DR	elf.h	1818;"	d
R_PARISC_DIR14R	elf.h	1785;"	d
R_PARISC_DIR14WR	elf.h	1817;"	d
R_PARISC_DIR16DF	elf.h	1821;"	d
R_PARISC_DIR16F	elf.h	1819;"	d
R_PARISC_DIR16WF	elf.h	1820;"	d
R_PARISC_DIR17F	elf.h	1784;"	d
R_PARISC_DIR17R	elf.h	1783;"	d
R_PARISC_DIR21L	elf.h	1782;"	d
R_PARISC_DIR32	elf.h	1781;"	d
R_PARISC_DIR64	elf.h	1816;"	d
R_PARISC_DPREL14R	elf.h	1792;"	d
R_PARISC_DPREL21L	elf.h	1791;"	d
R_PARISC_EPLT	elf.h	1850;"	d
R_PARISC_FPTR64	elf.h	1805;"	d
R_PARISC_GNU_VTENTRY	elf.h	1869;"	d
R_PARISC_GNU_VTINHERIT	elf.h	1870;"	d
R_PARISC_GPREL14DR	elf.h	1824;"	d
R_PARISC_GPREL14R	elf.h	1794;"	d
R_PARISC_GPREL14WR	elf.h	1823;"	d
R_PARISC_GPREL16DF	elf.h	1827;"	d
R_PARISC_GPREL16F	elf.h	1825;"	d
R_PARISC_GPREL16WF	elf.h	1826;"	d
R_PARISC_GPREL21L	elf.h	1793;"	d
R_PARISC_GPREL64	elf.h	1822;"	d
R_PARISC_HIRESERVE	elf.h	1889;"	d
R_PARISC_IPLT	elf.h	1849;"	d
R_PARISC_LORESERVE	elf.h	1847;"	d
R_PARISC_LTOFF14DR	elf.h	1830;"	d
R_PARISC_LTOFF14R	elf.h	1796;"	d
R_PARISC_LTOFF14WR	elf.h	1829;"	d
R_PARISC_LTOFF16DF	elf.h	1833;"	d
R_PARISC_LTOFF16F	elf.h	1831;"	d
R_PARISC_LTOFF16WF	elf.h	1832;"	d
R_PARISC_LTOFF21L	elf.h	1795;"	d
R_PARISC_LTOFF64	elf.h	1828;"	d
R_PARISC_LTOFF_FPTR14DR	elf.h	1843;"	d
R_PARISC_LTOFF_FPTR14R	elf.h	1804;"	d
R_PARISC_LTOFF_FPTR14WR	elf.h	1842;"	d
R_PARISC_LTOFF_FPTR16DF	elf.h	1846;"	d
R_PARISC_LTOFF_FPTR16F	elf.h	1844;"	d
R_PARISC_LTOFF_FPTR16WF	elf.h	1845;"	d
R_PARISC_LTOFF_FPTR21L	elf.h	1803;"	d
R_PARISC_LTOFF_FPTR32	elf.h	1802;"	d
R_PARISC_LTOFF_FPTR64	elf.h	1841;"	d
R_PARISC_LTOFF_TP14DR	elf.h	1865;"	d
R_PARISC_LTOFF_TP14F	elf.h	1856;"	d
R_PARISC_LTOFF_TP14R	elf.h	1855;"	d
R_PARISC_LTOFF_TP14WR	elf.h	1864;"	d
R_PARISC_LTOFF_TP16DF	elf.h	1868;"	d
R_PARISC_LTOFF_TP16F	elf.h	1866;"	d
R_PARISC_LTOFF_TP16WF	elf.h	1867;"	d
R_PARISC_LTOFF_TP21L	elf.h	1854;"	d
R_PARISC_LTOFF_TP64	elf.h	1863;"	d
R_PARISC_NONE	elf.h	1780;"	d
R_PARISC_PCREL14DR	elf.h	1812;"	d
R_PARISC_PCREL14R	elf.h	1790;"	d
R_PARISC_PCREL14WR	elf.h	1811;"	d
R_PARISC_PCREL16DF	elf.h	1815;"	d
R_PARISC_PCREL16F	elf.h	1813;"	d
R_PARISC_PCREL16WF	elf.h	1814;"	d
R_PARISC_PCREL17F	elf.h	1789;"	d
R_PARISC_PCREL17R	elf.h	1788;"	d
R_PARISC_PCREL21L	elf.h	1787;"	d
R_PARISC_PCREL22F	elf.h	1810;"	d
R_PARISC_PCREL32	elf.h	1786;"	d
R_PARISC_PCREL64	elf.h	1809;"	d
R_PARISC_PLABEL14R	elf.h	1808;"	d
R_PARISC_PLABEL21L	elf.h	1807;"	d
R_PARISC_PLABEL32	elf.h	1806;"	d
R_PARISC_PLTOFF14DR	elf.h	1837;"	d
R_PARISC_PLTOFF14R	elf.h	1801;"	d
R_PARISC_PLTOFF14WR	elf.h	1836;"	d
R_PARISC_PLTOFF16DF	elf.h	1840;"	d
R_PARISC_PLTOFF16F	elf.h	1838;"	d
R_PARISC_PLTOFF16WF	elf.h	1839;"	d
R_PARISC_PLTOFF21L	elf.h	1800;"	d
R_PARISC_SECREL32	elf.h	1797;"	d
R_PARISC_SECREL64	elf.h	1834;"	d
R_PARISC_SEGBASE	elf.h	1798;"	d
R_PARISC_SEGREL32	elf.h	1799;"	d
R_PARISC_SEGREL64	elf.h	1835;"	d
R_PARISC_TLS_DTPMOD32	elf.h	1879;"	d
R_PARISC_TLS_DTPMOD64	elf.h	1880;"	d
R_PARISC_TLS_DTPOFF32	elf.h	1881;"	d
R_PARISC_TLS_DTPOFF64	elf.h	1882;"	d
R_PARISC_TLS_GD14R	elf.h	1872;"	d
R_PARISC_TLS_GD21L	elf.h	1871;"	d
R_PARISC_TLS_GDCALL	elf.h	1873;"	d
R_PARISC_TLS_IE14R	elf.h	1886;"	d
R_PARISC_TLS_IE21L	elf.h	1885;"	d
R_PARISC_TLS_LDM14R	elf.h	1875;"	d
R_PARISC_TLS_LDM21L	elf.h	1874;"	d
R_PARISC_TLS_LDMCALL	elf.h	1876;"	d
R_PARISC_TLS_LDO14R	elf.h	1878;"	d
R_PARISC_TLS_LDO21L	elf.h	1877;"	d
R_PARISC_TLS_LE14R	elf.h	1884;"	d
R_PARISC_TLS_LE21L	elf.h	1883;"	d
R_PARISC_TLS_TPREL32	elf.h	1887;"	d
R_PARISC_TLS_TPREL64	elf.h	1888;"	d
R_PARISC_TPREL14DR	elf.h	1859;"	d
R_PARISC_TPREL14R	elf.h	1853;"	d
R_PARISC_TPREL14WR	elf.h	1858;"	d
R_PARISC_TPREL16DF	elf.h	1862;"	d
R_PARISC_TPREL16F	elf.h	1860;"	d
R_PARISC_TPREL16WF	elf.h	1861;"	d
R_PARISC_TPREL21L	elf.h	1852;"	d
R_PARISC_TPREL32	elf.h	1851;"	d
R_PARISC_TPREL64	elf.h	1857;"	d
R_PPC64_ADDR14	elf.h	2127;"	d
R_PPC64_ADDR14_BRNTAKEN	elf.h	2129;"	d
R_PPC64_ADDR14_BRTAKEN	elf.h	2128;"	d
R_PPC64_ADDR16	elf.h	2123;"	d
R_PPC64_ADDR16_DS	elf.h	2177;"	d
R_PPC64_ADDR16_HA	elf.h	2126;"	d
R_PPC64_ADDR16_HI	elf.h	2125;"	d
R_PPC64_ADDR16_HIGHER	elf.h	2159;"	d
R_PPC64_ADDR16_HIGHERA	elf.h	2160;"	d
R_PPC64_ADDR16_HIGHEST	elf.h	2161;"	d
R_PPC64_ADDR16_HIGHESTA	elf.h	2162;"	d
R_PPC64_ADDR16_LO	elf.h	2124;"	d
R_PPC64_ADDR16_LO_DS	elf.h	2178;"	d
R_PPC64_ADDR24	elf.h	2122;"	d
R_PPC64_ADDR30	elf.h	2157;"	d
R_PPC64_ADDR32	elf.h	2121;"	d
R_PPC64_ADDR64	elf.h	2158;"	d
R_PPC64_COPY	elf.h	2139;"	d
R_PPC64_DTPMOD64	elf.h	2191;"	d
R_PPC64_DTPREL16	elf.h	2197;"	d
R_PPC64_DTPREL16_DS	elf.h	2224;"	d
R_PPC64_DTPREL16_HA	elf.h	2200;"	d
R_PPC64_DTPREL16_HI	elf.h	2199;"	d
R_PPC64_DTPREL16_HIGHER	elf.h	2226;"	d
R_PPC64_DTPREL16_HIGHERA	elf.h	2227;"	d
R_PPC64_DTPREL16_HIGHEST	elf.h	2228;"	d
R_PPC64_DTPREL16_HIGHESTA	elf.h	2229;"	d
R_PPC64_DTPREL16_LO	elf.h	2198;"	d
R_PPC64_DTPREL16_LO_DS	elf.h	2225;"	d
R_PPC64_DTPREL64	elf.h	2201;"	d
R_PPC64_GLOB_DAT	elf.h	2140;"	d
R_PPC64_GOT16	elf.h	2134;"	d
R_PPC64_GOT16_DS	elf.h	2179;"	d
R_PPC64_GOT16_HA	elf.h	2137;"	d
R_PPC64_GOT16_HI	elf.h	2136;"	d
R_PPC64_GOT16_LO	elf.h	2135;"	d
R_PPC64_GOT16_LO_DS	elf.h	2180;"	d
R_PPC64_GOT_DTPREL16_DS	elf.h	2214;"	d
R_PPC64_GOT_DTPREL16_HA	elf.h	2217;"	d
R_PPC64_GOT_DTPREL16_HI	elf.h	2216;"	d
R_PPC64_GOT_DTPREL16_LO_DS	elf.h	2215;"	d
R_PPC64_GOT_TLSGD16	elf.h	2202;"	d
R_PPC64_GOT_TLSGD16_HA	elf.h	2205;"	d
R_PPC64_GOT_TLSGD16_HI	elf.h	2204;"	d
R_PPC64_GOT_TLSGD16_LO	elf.h	2203;"	d
R_PPC64_GOT_TLSLD16	elf.h	2206;"	d
R_PPC64_GOT_TLSLD16_HA	elf.h	2209;"	d
R_PPC64_GOT_TLSLD16_HI	elf.h	2208;"	d
R_PPC64_GOT_TLSLD16_LO	elf.h	2207;"	d
R_PPC64_GOT_TPREL16_DS	elf.h	2210;"	d
R_PPC64_GOT_TPREL16_HA	elf.h	2213;"	d
R_PPC64_GOT_TPREL16_HI	elf.h	2212;"	d
R_PPC64_GOT_TPREL16_LO_DS	elf.h	2211;"	d
R_PPC64_IRELATIVE	elf.h	2233;"	d
R_PPC64_JMP_IREL	elf.h	2232;"	d
R_PPC64_JMP_SLOT	elf.h	2141;"	d
R_PPC64_NONE	elf.h	2120;"	d
R_PPC64_PLT16_HA	elf.h	2151;"	d
R_PPC64_PLT16_HI	elf.h	2150;"	d
R_PPC64_PLT16_LO	elf.h	2149;"	d
R_PPC64_PLT16_LO_DS	elf.h	2181;"	d
R_PPC64_PLT32	elf.h	2147;"	d
R_PPC64_PLT64	elf.h	2165;"	d
R_PPC64_PLTGOT16	elf.h	2172;"	d
R_PPC64_PLTGOT16_DS	elf.h	2186;"	d
R_PPC64_PLTGOT16_HA	elf.h	2175;"	d
R_PPC64_PLTGOT16_HI	elf.h	2174;"	d
R_PPC64_PLTGOT16_LO	elf.h	2173;"	d
R_PPC64_PLTGOT16_LO_DS	elf.h	2187;"	d
R_PPC64_PLTREL32	elf.h	2148;"	d
R_PPC64_PLTREL64	elf.h	2166;"	d
R_PPC64_REL14	elf.h	2131;"	d
R_PPC64_REL14_BRNTAKEN	elf.h	2133;"	d
R_PPC64_REL14_BRTAKEN	elf.h	2132;"	d
R_PPC64_REL16	elf.h	2234;"	d
R_PPC64_REL16_HA	elf.h	2237;"	d
R_PPC64_REL16_HI	elf.h	2236;"	d
R_PPC64_REL16_LO	elf.h	2235;"	d
R_PPC64_REL24	elf.h	2130;"	d
R_PPC64_REL32	elf.h	2146;"	d
R_PPC64_REL64	elf.h	2164;"	d
R_PPC64_RELATIVE	elf.h	2142;"	d
R_PPC64_SECTOFF	elf.h	2153;"	d
R_PPC64_SECTOFF_DS	elf.h	2182;"	d
R_PPC64_SECTOFF_HA	elf.h	2156;"	d
R_PPC64_SECTOFF_HI	elf.h	2155;"	d
R_PPC64_SECTOFF_LO	elf.h	2154;"	d
R_PPC64_SECTOFF_LO_DS	elf.h	2183;"	d
R_PPC64_TLS	elf.h	2190;"	d
R_PPC64_TOC	elf.h	2171;"	d
R_PPC64_TOC16	elf.h	2167;"	d
R_PPC64_TOC16_DS	elf.h	2184;"	d
R_PPC64_TOC16_HA	elf.h	2170;"	d
R_PPC64_TOC16_HI	elf.h	2169;"	d
R_PPC64_TOC16_LO	elf.h	2168;"	d
R_PPC64_TOC16_LO_DS	elf.h	2185;"	d
R_PPC64_TPREL16	elf.h	2192;"	d
R_PPC64_TPREL16_DS	elf.h	2218;"	d
R_PPC64_TPREL16_HA	elf.h	2195;"	d
R_PPC64_TPREL16_HI	elf.h	2194;"	d
R_PPC64_TPREL16_HIGHER	elf.h	2220;"	d
R_PPC64_TPREL16_HIGHERA	elf.h	2221;"	d
R_PPC64_TPREL16_HIGHEST	elf.h	2222;"	d
R_PPC64_TPREL16_HIGHESTA	elf.h	2223;"	d
R_PPC64_TPREL16_LO	elf.h	2193;"	d
R_PPC64_TPREL16_LO_DS	elf.h	2219;"	d
R_PPC64_TPREL64	elf.h	2196;"	d
R_PPC64_UADDR16	elf.h	2145;"	d
R_PPC64_UADDR32	elf.h	2144;"	d
R_PPC64_UADDR64	elf.h	2163;"	d
R_PPC_ADDR14	elf.h	2014;"	d
R_PPC_ADDR14_BRNTAKEN	elf.h	2016;"	d
R_PPC_ADDR14_BRTAKEN	elf.h	2015;"	d
R_PPC_ADDR16	elf.h	2010;"	d
R_PPC_ADDR16_HA	elf.h	2013;"	d
R_PPC_ADDR16_HI	elf.h	2012;"	d
R_PPC_ADDR16_LO	elf.h	2011;"	d
R_PPC_ADDR24	elf.h	2009;"	d
R_PPC_ADDR32	elf.h	2008;"	d
R_PPC_COPY	elf.h	2026;"	d
R_PPC_DIAB_RELSDA_HA	elf.h	2100;"	d
R_PPC_DIAB_RELSDA_HI	elf.h	2099;"	d
R_PPC_DIAB_RELSDA_LO	elf.h	2098;"	d
R_PPC_DIAB_SDA21_HA	elf.h	2097;"	d
R_PPC_DIAB_SDA21_HI	elf.h	2096;"	d
R_PPC_DIAB_SDA21_LO	elf.h	2095;"	d
R_PPC_DTPMOD32	elf.h	2047;"	d
R_PPC_DTPREL16	elf.h	2053;"	d
R_PPC_DTPREL16_HA	elf.h	2056;"	d
R_PPC_DTPREL16_HI	elf.h	2055;"	d
R_PPC_DTPREL16_LO	elf.h	2054;"	d
R_PPC_DTPREL32	elf.h	2057;"	d
R_PPC_EMB_BIT_FLD	elf.h	2091;"	d
R_PPC_EMB_MRKREF	elf.h	2086;"	d
R_PPC_EMB_NADDR16	elf.h	2078;"	d
R_PPC_EMB_NADDR16_HA	elf.h	2081;"	d
R_PPC_EMB_NADDR16_HI	elf.h	2080;"	d
R_PPC_EMB_NADDR16_LO	elf.h	2079;"	d
R_PPC_EMB_NADDR32	elf.h	2077;"	d
R_PPC_EMB_RELSDA	elf.h	2092;"	d
R_PPC_EMB_RELSEC16	elf.h	2087;"	d
R_PPC_EMB_RELST_HA	elf.h	2090;"	d
R_PPC_EMB_RELST_HI	elf.h	2089;"	d
R_PPC_EMB_RELST_LO	elf.h	2088;"	d
R_PPC_EMB_SDA21	elf.h	2085;"	d
R_PPC_EMB_SDA2I16	elf.h	2083;"	d
R_PPC_EMB_SDA2REL	elf.h	2084;"	d
R_PPC_EMB_SDAI16	elf.h	2082;"	d
R_PPC_GLOB_DAT	elf.h	2027;"	d
R_PPC_GOT16	elf.h	2021;"	d
R_PPC_GOT16_HA	elf.h	2024;"	d
R_PPC_GOT16_HI	elf.h	2023;"	d
R_PPC_GOT16_LO	elf.h	2022;"	d
R_PPC_GOT_DTPREL16	elf.h	2070;"	d
R_PPC_GOT_DTPREL16_HA	elf.h	2073;"	d
R_PPC_GOT_DTPREL16_HI	elf.h	2072;"	d
R_PPC_GOT_DTPREL16_LO	elf.h	2071;"	d
R_PPC_GOT_TLSGD16	elf.h	2058;"	d
R_PPC_GOT_TLSGD16_HA	elf.h	2061;"	d
R_PPC_GOT_TLSGD16_HI	elf.h	2060;"	d
R_PPC_GOT_TLSGD16_LO	elf.h	2059;"	d
R_PPC_GOT_TLSLD16	elf.h	2062;"	d
R_PPC_GOT_TLSLD16_HA	elf.h	2065;"	d
R_PPC_GOT_TLSLD16_HI	elf.h	2064;"	d
R_PPC_GOT_TLSLD16_LO	elf.h	2063;"	d
R_PPC_GOT_TPREL16	elf.h	2066;"	d
R_PPC_GOT_TPREL16_HA	elf.h	2069;"	d
R_PPC_GOT_TPREL16_HI	elf.h	2068;"	d
R_PPC_GOT_TPREL16_LO	elf.h	2067;"	d
R_PPC_IRELATIVE	elf.h	2103;"	d
R_PPC_JMP_SLOT	elf.h	2028;"	d
R_PPC_LOCAL24PC	elf.h	2030;"	d
R_PPC_NONE	elf.h	2007;"	d
R_PPC_PLT16_HA	elf.h	2038;"	d
R_PPC_PLT16_HI	elf.h	2037;"	d
R_PPC_PLT16_LO	elf.h	2036;"	d
R_PPC_PLT32	elf.h	2034;"	d
R_PPC_PLTREL24	elf.h	2025;"	d
R_PPC_PLTREL32	elf.h	2035;"	d
R_PPC_REL14	elf.h	2018;"	d
R_PPC_REL14_BRNTAKEN	elf.h	2020;"	d
R_PPC_REL14_BRTAKEN	elf.h	2019;"	d
R_PPC_REL16	elf.h	2106;"	d
R_PPC_REL16_HA	elf.h	2109;"	d
R_PPC_REL16_HI	elf.h	2108;"	d
R_PPC_REL16_LO	elf.h	2107;"	d
R_PPC_REL24	elf.h	2017;"	d
R_PPC_REL32	elf.h	2033;"	d
R_PPC_RELATIVE	elf.h	2029;"	d
R_PPC_SDAREL16	elf.h	2039;"	d
R_PPC_SECTOFF	elf.h	2040;"	d
R_PPC_SECTOFF_HA	elf.h	2043;"	d
R_PPC_SECTOFF_HI	elf.h	2042;"	d
R_PPC_SECTOFF_LO	elf.h	2041;"	d
R_PPC_TLS	elf.h	2046;"	d
R_PPC_TOC16	elf.h	2113;"	d
R_PPC_TPREL16	elf.h	2048;"	d
R_PPC_TPREL16_HA	elf.h	2051;"	d
R_PPC_TPREL16_HI	elf.h	2050;"	d
R_PPC_TPREL16_LO	elf.h	2049;"	d
R_PPC_TPREL32	elf.h	2052;"	d
R_PPC_UADDR16	elf.h	2032;"	d
R_PPC_UADDR32	elf.h	2031;"	d
R_SH_ALIGN	elf.h	2519;"	d
R_SH_CODE	elf.h	2520;"	d
R_SH_COPY	elf.h	2536;"	d
R_SH_COUNT	elf.h	2518;"	d
R_SH_DATA	elf.h	2521;"	d
R_SH_DIR32	elf.h	2506;"	d
R_SH_DIR8BP	elf.h	2512;"	d
R_SH_DIR8L	elf.h	2514;"	d
R_SH_DIR8W	elf.h	2513;"	d
R_SH_DIR8WPL	elf.h	2510;"	d
R_SH_DIR8WPN	elf.h	2508;"	d
R_SH_DIR8WPZ	elf.h	2511;"	d
R_SH_GLOB_DAT	elf.h	2537;"	d
R_SH_GNU_VTENTRY	elf.h	2525;"	d
R_SH_GNU_VTINHERIT	elf.h	2524;"	d
R_SH_GOT32	elf.h	2534;"	d
R_SH_GOTOFF	elf.h	2540;"	d
R_SH_GOTPC	elf.h	2541;"	d
R_SH_IND12W	elf.h	2509;"	d
R_SH_JMP_SLOT	elf.h	2538;"	d
R_SH_LABEL	elf.h	2522;"	d
R_SH_NONE	elf.h	2505;"	d
R_SH_NUM	elf.h	2543;"	d
R_SH_PLT32	elf.h	2535;"	d
R_SH_REL32	elf.h	2507;"	d
R_SH_RELATIVE	elf.h	2539;"	d
R_SH_SWITCH16	elf.h	2515;"	d
R_SH_SWITCH32	elf.h	2516;"	d
R_SH_SWITCH8	elf.h	2523;"	d
R_SH_TLS_DTPMOD32	elf.h	2531;"	d
R_SH_TLS_DTPOFF32	elf.h	2532;"	d
R_SH_TLS_GD_32	elf.h	2526;"	d
R_SH_TLS_IE_32	elf.h	2529;"	d
R_SH_TLS_LDO_32	elf.h	2528;"	d
R_SH_TLS_LD_32	elf.h	2527;"	d
R_SH_TLS_LE_32	elf.h	2530;"	d
R_SH_TLS_TPOFF32	elf.h	2533;"	d
R_SH_USES	elf.h	2517;"	d
R_SPARC_10	elf.h	1271;"	d
R_SPARC_11	elf.h	1272;"	d
R_SPARC_13	elf.h	1249;"	d
R_SPARC_16	elf.h	1240;"	d
R_SPARC_22	elf.h	1248;"	d
R_SPARC_32	elf.h	1241;"	d
R_SPARC_5	elf.h	1285;"	d
R_SPARC_6	elf.h	1286;"	d
R_SPARC_64	elf.h	1273;"	d
R_SPARC_7	elf.h	1284;"	d
R_SPARC_8	elf.h	1239;"	d
R_SPARC_COPY	elf.h	1257;"	d
R_SPARC_DISP16	elf.h	1243;"	d
R_SPARC_DISP32	elf.h	1244;"	d
R_SPARC_DISP64	elf.h	1287;"	d
R_SPARC_DISP8	elf.h	1242;"	d
R_SPARC_GLOB_DAT	elf.h	1258;"	d
R_SPARC_GLOB_JMP	elf.h	1283;"	d
R_SPARC_GNU_VTENTRY	elf.h	1332;"	d
R_SPARC_GNU_VTINHERIT	elf.h	1331;"	d
R_SPARC_GOT10	elf.h	1251;"	d
R_SPARC_GOT13	elf.h	1252;"	d
R_SPARC_GOT22	elf.h	1253;"	d
R_SPARC_GOTDATA_HIX22	elf.h	1321;"	d
R_SPARC_GOTDATA_LOX10	elf.h	1322;"	d
R_SPARC_GOTDATA_OP	elf.h	1325;"	d
R_SPARC_GOTDATA_OP_HIX22	elf.h	1323;"	d
R_SPARC_GOTDATA_OP_LOX10	elf.h	1324;"	d
R_SPARC_H34	elf.h	1326;"	d
R_SPARC_H44	elf.h	1291;"	d
R_SPARC_HH22	elf.h	1275;"	d
R_SPARC_HI22	elf.h	1247;"	d
R_SPARC_HIPLT22	elf.h	1266;"	d
R_SPARC_HIX22	elf.h	1289;"	d
R_SPARC_HM10	elf.h	1276;"	d
R_SPARC_IRELATIVE	elf.h	1330;"	d
R_SPARC_JMP_IREL	elf.h	1329;"	d
R_SPARC_JMP_SLOT	elf.h	1259;"	d
R_SPARC_L44	elf.h	1293;"	d
R_SPARC_LM22	elf.h	1277;"	d
R_SPARC_LO10	elf.h	1250;"	d
R_SPARC_LOPLT10	elf.h	1267;"	d
R_SPARC_LOX10	elf.h	1290;"	d
R_SPARC_M44	elf.h	1292;"	d
R_SPARC_NONE	elf.h	1238;"	d
R_SPARC_NUM	elf.h	1335;"	d
R_SPARC_OLO10	elf.h	1274;"	d
R_SPARC_PC10	elf.h	1254;"	d
R_SPARC_PC22	elf.h	1255;"	d
R_SPARC_PCPLT10	elf.h	1270;"	d
R_SPARC_PCPLT22	elf.h	1269;"	d
R_SPARC_PCPLT32	elf.h	1268;"	d
R_SPARC_PC_HH22	elf.h	1278;"	d
R_SPARC_PC_HM10	elf.h	1279;"	d
R_SPARC_PC_LM22	elf.h	1280;"	d
R_SPARC_PLT32	elf.h	1265;"	d
R_SPARC_PLT64	elf.h	1288;"	d
R_SPARC_REGISTER	elf.h	1294;"	d
R_SPARC_RELATIVE	elf.h	1260;"	d
R_SPARC_REV32	elf.h	1333;"	d
R_SPARC_SIZE32	elf.h	1327;"	d
R_SPARC_SIZE64	elf.h	1328;"	d
R_SPARC_TLS_DTPMOD32	elf.h	1315;"	d
R_SPARC_TLS_DTPMOD64	elf.h	1316;"	d
R_SPARC_TLS_DTPOFF32	elf.h	1317;"	d
R_SPARC_TLS_DTPOFF64	elf.h	1318;"	d
R_SPARC_TLS_GD_ADD	elf.h	1299;"	d
R_SPARC_TLS_GD_CALL	elf.h	1300;"	d
R_SPARC_TLS_GD_HI22	elf.h	1297;"	d
R_SPARC_TLS_GD_LO10	elf.h	1298;"	d
R_SPARC_TLS_IE_ADD	elf.h	1312;"	d
R_SPARC_TLS_IE_HI22	elf.h	1308;"	d
R_SPARC_TLS_IE_LD	elf.h	1310;"	d
R_SPARC_TLS_IE_LDX	elf.h	1311;"	d
R_SPARC_TLS_IE_LO10	elf.h	1309;"	d
R_SPARC_TLS_LDM_ADD	elf.h	1303;"	d
R_SPARC_TLS_LDM_CALL	elf.h	1304;"	d
R_SPARC_TLS_LDM_HI22	elf.h	1301;"	d
R_SPARC_TLS_LDM_LO10	elf.h	1302;"	d
R_SPARC_TLS_LDO_ADD	elf.h	1307;"	d
R_SPARC_TLS_LDO_HIX22	elf.h	1305;"	d
R_SPARC_TLS_LDO_LOX10	elf.h	1306;"	d
R_SPARC_TLS_LE_HIX22	elf.h	1313;"	d
R_SPARC_TLS_LE_LOX10	elf.h	1314;"	d
R_SPARC_TLS_TPOFF32	elf.h	1319;"	d
R_SPARC_TLS_TPOFF64	elf.h	1320;"	d
R_SPARC_UA16	elf.h	1296;"	d
R_SPARC_UA32	elf.h	1261;"	d
R_SPARC_UA64	elf.h	1295;"	d
R_SPARC_WDISP16	elf.h	1281;"	d
R_SPARC_WDISP19	elf.h	1282;"	d
R_SPARC_WDISP22	elf.h	1246;"	d
R_SPARC_WDISP30	elf.h	1245;"	d
R_SPARC_WPLT30	elf.h	1256;"	d
R_X86_64_16	elf.h	2675;"	d
R_X86_64_32	elf.h	2673;"	d
R_X86_64_32S	elf.h	2674;"	d
R_X86_64_64	elf.h	2663;"	d
R_X86_64_8	elf.h	2677;"	d
R_X86_64_COPY	elf.h	2667;"	d
R_X86_64_DTPMOD64	elf.h	2679;"	d
R_X86_64_DTPOFF32	elf.h	2686;"	d
R_X86_64_DTPOFF64	elf.h	2680;"	d
R_X86_64_GLOB_DAT	elf.h	2668;"	d
R_X86_64_GOT32	elf.h	2665;"	d
R_X86_64_GOT64	elf.h	2694;"	d
R_X86_64_GOTOFF64	elf.h	2691;"	d
R_X86_64_GOTPC32	elf.h	2692;"	d
R_X86_64_GOTPC32_TLSDESC	elf.h	2703;"	d
R_X86_64_GOTPC64	elf.h	2697;"	d
R_X86_64_GOTPCREL	elf.h	2671;"	d
R_X86_64_GOTPCREL64	elf.h	2695;"	d
R_X86_64_GOTPLT64	elf.h	2698;"	d
R_X86_64_GOTTPOFF	elf.h	2687;"	d
R_X86_64_IRELATIVE	elf.h	2707;"	d
R_X86_64_JUMP_SLOT	elf.h	2669;"	d
R_X86_64_NONE	elf.h	2662;"	d
R_X86_64_NUM	elf.h	2709;"	d
R_X86_64_PC16	elf.h	2676;"	d
R_X86_64_PC32	elf.h	2664;"	d
R_X86_64_PC64	elf.h	2690;"	d
R_X86_64_PC8	elf.h	2678;"	d
R_X86_64_PLT32	elf.h	2666;"	d
R_X86_64_PLTOFF64	elf.h	2699;"	d
R_X86_64_RELATIVE	elf.h	2670;"	d
R_X86_64_SIZE32	elf.h	2701;"	d
R_X86_64_SIZE64	elf.h	2702;"	d
R_X86_64_TLSDESC	elf.h	2706;"	d
R_X86_64_TLSDESC_CALL	elf.h	2704;"	d
R_X86_64_TLSGD	elf.h	2682;"	d
R_X86_64_TLSLD	elf.h	2684;"	d
R_X86_64_TPOFF32	elf.h	2689;"	d
R_X86_64_TPOFF64	elf.h	2681;"	d
SARMAG	ar.h	30;"	d
SCHAR_MAX	limits.h	59;"	d
SCHAR_MIN	limits.h	58;"	d
SCNd16	inttypes.h	178;"	d
SCNd32	inttypes.h	179;"	d
SCNd64	inttypes.h	180;"	d
SCNd8	inttypes.h	177;"	d
SCNdFAST16	inttypes.h	188;"	d
SCNdFAST32	inttypes.h	189;"	d
SCNdFAST64	inttypes.h	190;"	d
SCNdFAST8	inttypes.h	187;"	d
SCNdLEAST16	inttypes.h	183;"	d
SCNdLEAST32	inttypes.h	184;"	d
SCNdLEAST64	inttypes.h	185;"	d
SCNdLEAST8	inttypes.h	182;"	d
SCNdMAX	inttypes.h	258;"	d
SCNdPTR	inttypes.h	265;"	d
SCNi16	inttypes.h	194;"	d
SCNi32	inttypes.h	195;"	d
SCNi64	inttypes.h	196;"	d
SCNi8	inttypes.h	193;"	d
SCNiFAST16	inttypes.h	204;"	d
SCNiFAST32	inttypes.h	205;"	d
SCNiFAST64	inttypes.h	206;"	d
SCNiFAST8	inttypes.h	203;"	d
SCNiLEAST16	inttypes.h	199;"	d
SCNiLEAST32	inttypes.h	200;"	d
SCNiLEAST64	inttypes.h	201;"	d
SCNiLEAST8	inttypes.h	198;"	d
SCNiMAX	inttypes.h	259;"	d
SCNiPTR	inttypes.h	266;"	d
SCNo16	inttypes.h	226;"	d
SCNo32	inttypes.h	227;"	d
SCNo64	inttypes.h	228;"	d
SCNo8	inttypes.h	225;"	d
SCNoFAST16	inttypes.h	236;"	d
SCNoFAST32	inttypes.h	237;"	d
SCNoFAST64	inttypes.h	238;"	d
SCNoFAST8	inttypes.h	235;"	d
SCNoLEAST16	inttypes.h	231;"	d
SCNoLEAST32	inttypes.h	232;"	d
SCNoLEAST64	inttypes.h	233;"	d
SCNoLEAST8	inttypes.h	230;"	d
SCNoMAX	inttypes.h	260;"	d
SCNoPTR	inttypes.h	267;"	d
SCNu16	inttypes.h	210;"	d
SCNu32	inttypes.h	211;"	d
SCNu64	inttypes.h	212;"	d
SCNu8	inttypes.h	209;"	d
SCNuFAST16	inttypes.h	220;"	d
SCNuFAST32	inttypes.h	221;"	d
SCNuFAST64	inttypes.h	222;"	d
SCNuFAST8	inttypes.h	219;"	d
SCNuLEAST16	inttypes.h	215;"	d
SCNuLEAST32	inttypes.h	216;"	d
SCNuLEAST64	inttypes.h	217;"	d
SCNuLEAST8	inttypes.h	214;"	d
SCNuMAX	inttypes.h	261;"	d
SCNuPTR	inttypes.h	268;"	d
SCNx16	inttypes.h	242;"	d
SCNx32	inttypes.h	243;"	d
SCNx64	inttypes.h	244;"	d
SCNx8	inttypes.h	241;"	d
SCNxFAST16	inttypes.h	252;"	d
SCNxFAST32	inttypes.h	253;"	d
SCNxFAST64	inttypes.h	254;"	d
SCNxFAST8	inttypes.h	251;"	d
SCNxLEAST16	inttypes.h	247;"	d
SCNxLEAST32	inttypes.h	248;"	d
SCNxLEAST64	inttypes.h	249;"	d
SCNxLEAST8	inttypes.h	246;"	d
SCNxMAX	inttypes.h	262;"	d
SCNxPTR	inttypes.h	269;"	d
SCOPE_DELIMITER	netdb.h	87;"	d
SEEK_CUR	fcntl.h	101;"	d
SEEK_CUR	stdio.h	142;"	d
SEEK_CUR	unistd.h	313;"	d
SEEK_CUR	zconf.h	362;"	d
SEEK_END	fcntl.h	102;"	d
SEEK_END	stdio.h	143;"	d
SEEK_END	unistd.h	314;"	d
SEEK_END	zconf.h	363;"	d
SEEK_SET	fcntl.h	100;"	d
SEEK_SET	stdio.h	141;"	d
SEEK_SET	unistd.h	312;"	d
SEEK_SET	zconf.h	361;"	d
SEGMENT_SIZE	a.out.h	79;"	d
SELFMAG	elf.h	123;"	d
SHADOW	shadow.h	34;"	d
SHF_ALLOC	elf.h	356;"	d
SHF_ALPHA_GPREL	elf.h	1940;"	d
SHF_ARM_COMDEF	elf.h	2288;"	d
SHF_ARM_ENTRYSECT	elf.h	2287;"	d
SHF_EXCLUDE	elf.h	370;"	d
SHF_EXECINSTR	elf.h	357;"	d
SHF_GROUP	elf.h	364;"	d
SHF_IA_64_NORECOV	elf.h	2389;"	d
SHF_IA_64_SHORT	elf.h	2388;"	d
SHF_INFO_LINK	elf.h	360;"	d
SHF_LINK_ORDER	elf.h	361;"	d
SHF_MASKOS	elf.h	366;"	d
SHF_MASKPROC	elf.h	367;"	d
SHF_MERGE	elf.h	358;"	d
SHF_MIPS_ADDR	elf.h	1440;"	d
SHF_MIPS_GPREL	elf.h	1438;"	d
SHF_MIPS_LOCAL	elf.h	1443;"	d
SHF_MIPS_MERGE	elf.h	1439;"	d
SHF_MIPS_NAMES	elf.h	1444;"	d
SHF_MIPS_NODUPE	elf.h	1445;"	d
SHF_MIPS_NOSTRIP	elf.h	1442;"	d
SHF_MIPS_STRINGS	elf.h	1441;"	d
SHF_ORDERED	elf.h	368;"	d
SHF_OS_NONCONFORMING	elf.h	362;"	d
SHF_PARISC_HUGE	elf.h	1768;"	d
SHF_PARISC_SBP	elf.h	1769;"	d
SHF_PARISC_SHORT	elf.h	1767;"	d
SHF_STRINGS	elf.h	359;"	d
SHF_TLS	elf.h	365;"	d
SHF_WRITE	elf.h	355;"	d
SHN_ABS	elf.h	309;"	d
SHN_AFTER	elf.h	304;"	d
SHN_BEFORE	elf.h	302;"	d
SHN_COMMON	elf.h	310;"	d
SHN_HIOS	elf.h	308;"	d
SHN_HIPROC	elf.h	306;"	d
SHN_HIRESERVE	elf.h	312;"	d
SHN_LOOS	elf.h	307;"	d
SHN_LOPROC	elf.h	301;"	d
SHN_LORESERVE	elf.h	300;"	d
SHN_MIPS_ACOMMON	elf.h	1388;"	d
SHN_MIPS_DATA	elf.h	1390;"	d
SHN_MIPS_SCOMMON	elf.h	1391;"	d
SHN_MIPS_SUNDEFINED	elf.h	1392;"	d
SHN_MIPS_TEXT	elf.h	1389;"	d
SHN_PARISC_ANSI_COMMON	elf.h	1755;"	d
SHN_PARISC_HUGE_COMMON	elf.h	1757;"	d
SHN_UNDEF	elf.h	299;"	d
SHN_XINDEX	elf.h	311;"	d
SHORTBITS	values.h	33;"	d
SHRT_MAX	limits.h	75;"	d
SHRT_MIN	limits.h	74;"	d
SHT_ALPHA_DEBUG	elf.h	1935;"	d
SHT_ALPHA_REGINFO	elf.h	1936;"	d
SHT_ARM_ATTRIBUTES	elf.h	2303;"	d
SHT_ARM_EXIDX	elf.h	2301;"	d
SHT_ARM_PREEMPTMAP	elf.h	2302;"	d
SHT_CHECKSUM	elf.h	338;"	d
SHT_DYNAMIC	elf.h	322;"	d
SHT_DYNSYM	elf.h	327;"	d
SHT_FINI_ARRAY	elf.h	329;"	d
SHT_GNU_ATTRIBUTES	elf.h	335;"	d
SHT_GNU_HASH	elf.h	336;"	d
SHT_GNU_LIBLIST	elf.h	337;"	d
SHT_GNU_verdef	elf.h	343;"	d
SHT_GNU_verneed	elf.h	344;"	d
SHT_GNU_versym	elf.h	345;"	d
SHT_GROUP	elf.h	331;"	d
SHT_HASH	elf.h	321;"	d
SHT_HIOS	elf.h	347;"	d
SHT_HIPROC	elf.h	349;"	d
SHT_HISUNW	elf.h	346;"	d
SHT_HIUSER	elf.h	351;"	d
SHT_IA_64_EXT	elf.h	2384;"	d
SHT_IA_64_UNWIND	elf.h	2385;"	d
SHT_INIT_ARRAY	elf.h	328;"	d
SHT_LOOS	elf.h	334;"	d
SHT_LOPROC	elf.h	348;"	d
SHT_LOSUNW	elf.h	339;"	d
SHT_LOUSER	elf.h	350;"	d
SHT_MIPS_AUXSYM	elf.h	1415;"	d
SHT_MIPS_CONFLICT	elf.h	1398;"	d
SHT_MIPS_CONTENT	elf.h	1407;"	d
SHT_MIPS_DEBUG	elf.h	1401;"	d
SHT_MIPS_DELTACLASS	elf.h	1422;"	d
SHT_MIPS_DELTADECL	elf.h	1424;"	d
SHT_MIPS_DELTAINST	elf.h	1421;"	d
SHT_MIPS_DELTASYM	elf.h	1420;"	d
SHT_MIPS_DENSE	elf.h	1412;"	d
SHT_MIPS_DWARF	elf.h	1423;"	d
SHT_MIPS_EH_REGION	elf.h	1432;"	d
SHT_MIPS_EVENTS	elf.h	1426;"	d
SHT_MIPS_EXTSYM	elf.h	1411;"	d
SHT_MIPS_FDESC	elf.h	1410;"	d
SHT_MIPS_GPTAB	elf.h	1399;"	d
SHT_MIPS_IFACE	elf.h	1406;"	d
SHT_MIPS_LIBLIST	elf.h	1396;"	d
SHT_MIPS_LINE	elf.h	1418;"	d
SHT_MIPS_LOCSTR	elf.h	1417;"	d
SHT_MIPS_LOCSYM	elf.h	1414;"	d
SHT_MIPS_MSYM	elf.h	1397;"	d
SHT_MIPS_OPTIONS	elf.h	1408;"	d
SHT_MIPS_OPTSYM	elf.h	1416;"	d
SHT_MIPS_PACKAGE	elf.h	1403;"	d
SHT_MIPS_PACKSYM	elf.h	1404;"	d
SHT_MIPS_PDESC	elf.h	1413;"	d
SHT_MIPS_PDR_EXCEPTION	elf.h	1434;"	d
SHT_MIPS_PIXIE	elf.h	1428;"	d
SHT_MIPS_REGINFO	elf.h	1402;"	d
SHT_MIPS_RELD	elf.h	1405;"	d
SHT_MIPS_RFDESC	elf.h	1419;"	d
SHT_MIPS_SHDR	elf.h	1409;"	d
SHT_MIPS_SYMBOL_LIB	elf.h	1425;"	d
SHT_MIPS_TRANSLATE	elf.h	1427;"	d
SHT_MIPS_UCODE	elf.h	1400;"	d
SHT_MIPS_WHIRL	elf.h	1431;"	d
SHT_MIPS_XLATE	elf.h	1429;"	d
SHT_MIPS_XLATE_DEBUG	elf.h	1430;"	d
SHT_MIPS_XLATE_OLD	elf.h	1433;"	d
SHT_NOBITS	elf.h	324;"	d
SHT_NOTE	elf.h	323;"	d
SHT_NULL	elf.h	316;"	d
SHT_NUM	elf.h	333;"	d
SHT_PARISC_DOC	elf.h	1763;"	d
SHT_PARISC_EXT	elf.h	1761;"	d
SHT_PARISC_UNWIND	elf.h	1762;"	d
SHT_PREINIT_ARRAY	elf.h	330;"	d
SHT_PROGBITS	elf.h	317;"	d
SHT_REL	elf.h	325;"	d
SHT_RELA	elf.h	320;"	d
SHT_SHLIB	elf.h	326;"	d
SHT_STRTAB	elf.h	319;"	d
SHT_SUNW_COMDAT	elf.h	341;"	d
SHT_SUNW_move	elf.h	340;"	d
SHT_SUNW_syminfo	elf.h	342;"	d
SHT_SYMTAB	elf.h	318;"	d
SHT_SYMTAB_SHNDX	elf.h	332;"	d
SIG_ATOMIC_MAX	stdint.h	262;"	d
SIG_ATOMIC_MIN	stdint.h	261;"	d
SING	math.h	340;"	d
SIZE_MAX	stdint.h	266;"	d
SIZE_MAX	stdint.h	268;"	d
SMALL_MEDIUM	zconf.h	246;"	d
SMALL_MEDIUM	zconf.h	255;"	d
STB_GLOBAL	elf.h	444;"	d
STB_GNU_UNIQUE	elf.h	448;"	d
STB_HIOS	elf.h	449;"	d
STB_HIPROC	elf.h	451;"	d
STB_LOCAL	elf.h	443;"	d
STB_LOOS	elf.h	447;"	d
STB_LOPROC	elf.h	450;"	d
STB_MIPS_SPLIT_COMMON	elf.h	1459;"	d
STB_NUM	elf.h	446;"	d
STB_WEAK	elf.h	445;"	d
STDC	zconf.h	160;"	d
STDC	zconf.h	169;"	d
STDC	zconf.h	172;"	d
STDC	zconf.h	175;"	d
STDC	zconf.h	178;"	d
STDC	zconf.h	182;"	d
STDC99	zconf.h	164;"	d
STDC_HEADERS	expat_config.h	68;"	d
STDERR_FILENO	unistd.h	213;"	d
STDIN_FILENO	unistd.h	211;"	d
STDOUT_FILENO	unistd.h	212;"	d
STN_UNDEF	elf.h	474;"	d
STO_ALPHA_NOPV	elf.h	1943;"	d
STO_ALPHA_STD_GPLOAD	elf.h	1944;"	d
STO_MIPS_DEFAULT	elf.h	1451;"	d
STO_MIPS_HIDDEN	elf.h	1453;"	d
STO_MIPS_INTERNAL	elf.h	1452;"	d
STO_MIPS_PLT	elf.h	1455;"	d
STO_MIPS_PROTECTED	elf.h	1454;"	d
STO_MIPS_SC_ALIGN_UNUSED	elf.h	1456;"	d
STT_ARM_16BIT	elf.h	2284;"	d
STT_ARM_TFUNC	elf.h	2283;"	d
STT_COMMON	elf.h	460;"	d
STT_FILE	elf.h	459;"	d
STT_FUNC	elf.h	457;"	d
STT_GNU_IFUNC	elf.h	464;"	d
STT_HIOS	elf.h	465;"	d
STT_HIPROC	elf.h	467;"	d
STT_HP_OPAQUE	elf.h	1775;"	d
STT_HP_STUB	elf.h	1776;"	d
STT_LOOS	elf.h	463;"	d
STT_LOPROC	elf.h	466;"	d
STT_NOTYPE	elf.h	455;"	d
STT_NUM	elf.h	462;"	d
STT_OBJECT	elf.h	456;"	d
STT_PARISC_MILLICODE	elf.h	1773;"	d
STT_SECTION	elf.h	458;"	d
STT_SPARC_REGISTER	elf.h	1221;"	d
STT_TLS	elf.h	461;"	d
STV_DEFAULT	elf.h	485;"	d
STV_HIDDEN	elf.h	487;"	d
STV_INTERNAL	elf.h	486;"	d
STV_PROTECTED	elf.h	488;"	d
SV_INTERRUPT	signal.h	325;"	d
SV_ONSTACK	signal.h	324;"	d
SV_RESETHAND	signal.h	326;"	d
SYMINFO_BT_LOWRESERVE	elf.h	416;"	d
SYMINFO_BT_PARENT	elf.h	415;"	d
SYMINFO_BT_SELF	elf.h	414;"	d
SYMINFO_CURRENT	elf.h	426;"	d
SYMINFO_FLG_COPY	elf.h	421;"	d
SYMINFO_FLG_DIRECT	elf.h	419;"	d
SYMINFO_FLG_LAZYLOAD	elf.h	422;"	d
SYMINFO_FLG_PASSTHRU	elf.h	420;"	d
SYMINFO_NONE	elf.h	425;"	d
SYMINFO_NUM	elf.h	427;"	d
SYMTYPE	tar.h	92;"	d
SYS16BIT	zconf.h	142;"	d
S_IFBLK	fcntl.h	46;"	d
S_IFCHR	fcntl.h	45;"	d
S_IFDIR	fcntl.h	44;"	d
S_IFIFO	fcntl.h	49;"	d
S_IFLNK	fcntl.h	52;"	d
S_IFMT	fcntl.h	43;"	d
S_IFREG	fcntl.h	47;"	d
S_IFSOCK	fcntl.h	55;"	d
S_IRGRP	fcntl.h	74;"	d
S_IROTH	fcntl.h	80;"	d
S_IRUSR	fcntl.h	68;"	d
S_IRWXG	fcntl.h	78;"	d
S_IRWXO	fcntl.h	84;"	d
S_IRWXU	fcntl.h	72;"	d
S_ISGID	fcntl.h	61;"	d
S_ISUID	fcntl.h	60;"	d
S_ISVTX	fcntl.h	65;"	d
S_IWGRP	fcntl.h	75;"	d
S_IWOTH	fcntl.h	81;"	d
S_IWUSR	fcntl.h	69;"	d
S_IXGRP	fcntl.h	76;"	d
S_IXOTH	fcntl.h	82;"	d
S_IXUSR	fcntl.h	70;"	d
TD_ALL_EVENTS	thread_db.h	/^  TD_ALL_EVENTS,		 \/* Pseudo-event number.  *\/$/;"	e	enum:__anon62
TD_BADKEY	thread_db.h	/^  TD_BADKEY,	  \/* Invalid key.  *\/$/;"	e	enum:__anon59
TD_BADPH	thread_db.h	/^  TD_BADPH,	  \/* Invalid process handle.  *\/$/;"	e	enum:__anon59
TD_BADSH	thread_db.h	/^  TD_BADSH,	  \/* Invalid synchronization handle.  *\/$/;"	e	enum:__anon59
TD_BADTA	thread_db.h	/^  TD_BADTA,	  \/* Invalid thread agent.  *\/$/;"	e	enum:__anon59
TD_BADTH	thread_db.h	/^  TD_BADTH,	  \/* Invalid thread handle.  *\/$/;"	e	enum:__anon59
TD_CATCHSIG	thread_db.h	/^  TD_CATCHSIG,			 \/* Signal posted to the thread.  *\/$/;"	e	enum:__anon62
TD_CONCURRENCY	thread_db.h	/^  TD_CONCURRENCY,		 \/* Number of processes changing.  *\/$/;"	e	enum:__anon62
TD_CREATE	thread_db.h	/^  TD_CREATE,			 \/* New thread created.  *\/$/;"	e	enum:__anon62
TD_DBERR	thread_db.h	/^  TD_DBERR,	  \/* Internal debug library error.  *\/$/;"	e	enum:__anon59
TD_DEATH	thread_db.h	/^  TD_DEATH,			 \/* Thread terminated.  *\/$/;"	e	enum:__anon62
TD_ERR	thread_db.h	/^  TD_ERR,	  \/* No further specified error.  *\/$/;"	e	enum:__anon59
TD_EVENTSIZE	thread_db.h	110;"	d
TD_EVENTS_ENABLE	thread_db.h	/^  TD_EVENTS_ENABLE = 31		\/* Event reporting enabled.  *\/$/;"	e	enum:__anon62
TD_EVENT_NONE	thread_db.h	/^  TD_EVENT_NONE = TD_ALL_EVENTS, \/* Depends on context.  *\/$/;"	e	enum:__anon62
TD_IDLE	thread_db.h	/^  TD_IDLE,			 \/* Process getting idle.  *\/$/;"	e	enum:__anon62
TD_LOCK_TRY	thread_db.h	/^  TD_LOCK_TRY,			 \/* Trying to get an unavailable lock.  *\/$/;"	e	enum:__anon62
TD_MALLOC	thread_db.h	/^  TD_MALLOC,	  \/* Out of memory.  *\/$/;"	e	enum:__anon59
TD_MAX_EVENT_NUM	thread_db.h	/^  TD_MAX_EVENT_NUM = TD_TIMEOUT,$/;"	e	enum:__anon62
TD_MIN_EVENT_NUM	thread_db.h	/^  TD_MIN_EVENT_NUM = TD_READY,$/;"	e	enum:__anon62
TD_NOAPLIC	thread_db.h	/^  TD_NOAPLIC,	  \/* Operation is not applicable.  *\/$/;"	e	enum:__anon59
TD_NOCAPAB	thread_db.h	/^  TD_NOCAPAB,	  \/* Capability not available.  *\/$/;"	e	enum:__anon59
TD_NOEVENT	thread_db.h	/^  TD_NOEVENT,	  \/* Requested event is not supported.  *\/$/;"	e	enum:__anon59
TD_NOFPREGS	thread_db.h	/^  TD_NOFPREGS,	  \/* No floating-point register content available.  *\/$/;"	e	enum:__anon59
TD_NOLIBTHREAD	thread_db.h	/^  TD_NOLIBTHREAD, \/* Application not linked with thread library.  *\/$/;"	e	enum:__anon59
TD_NOLWP	thread_db.h	/^  TD_NOLWP,	  \/* No matching light-weighted process found.  *\/$/;"	e	enum:__anon59
TD_NOMSG	thread_db.h	/^  TD_NOMSG,	  \/* No event available.  *\/$/;"	e	enum:__anon59
TD_NOSV	thread_db.h	/^  TD_NOSV,	  \/* No matching synchronization handle found.  *\/$/;"	e	enum:__anon59
TD_NOTALLOC	thread_db.h	/^  TD_NOTALLOC = TD_TLSDEFER,$/;"	e	enum:__anon59
TD_NOTHR	thread_db.h	/^  TD_NOTHR,	  \/* No matching thread found.  *\/$/;"	e	enum:__anon59
TD_NOTLS	thread_db.h	/^  TD_NOTLS	  \/* There is no TLS segment in the given module.  *\/$/;"	e	enum:__anon59
TD_NOTSD	thread_db.h	/^  TD_NOTSD,	  \/* No thread-specific data available.  *\/$/;"	e	enum:__anon59
TD_NOXREGS	thread_db.h	/^  TD_NOXREGS,	  \/* X register set not available for given thread.  *\/$/;"	e	enum:__anon59
TD_OK	thread_db.h	/^  TD_OK,	  \/* No error.  *\/$/;"	e	enum:__anon59
TD_PARTIALREG	thread_db.h	/^  TD_PARTIALREG,  \/* Not entire register set was read or written.  *\/$/;"	e	enum:__anon59
TD_PREEMPT	thread_db.h	/^  TD_PREEMPT,			 \/* Preempted.  *\/$/;"	e	enum:__anon62
TD_PRI_INHERIT	thread_db.h	/^  TD_PRI_INHERIT,		 \/* Inherited elevated priority.  *\/$/;"	e	enum:__anon62
TD_READY	thread_db.h	/^  TD_READY,			 \/* Is executable now. *\/$/;"	e	enum:__anon62
TD_REAP	thread_db.h	/^  TD_REAP,			 \/* Reaped.  *\/$/;"	e	enum:__anon62
TD_SIGNO_MASK	thread_db.h	107;"	d
TD_SLEEP	thread_db.h	/^  TD_SLEEP,			 \/* Blocked in a synchronization obj.  *\/$/;"	e	enum:__anon62
TD_SWITCHFROM	thread_db.h	/^  TD_SWITCHFROM,		 \/* Not anymore assigned to a process.  *\/$/;"	e	enum:__anon62
TD_SWITCHTO	thread_db.h	/^  TD_SWITCHTO,			 \/* Now assigned to a process.  *\/$/;"	e	enum:__anon62
TD_THR_ACTIVE	thread_db.h	/^  TD_THR_ACTIVE,$/;"	e	enum:__anon60
TD_THR_ANY_STATE	thread_db.h	/^  TD_THR_ANY_STATE,$/;"	e	enum:__anon60
TD_THR_ANY_TYPE	thread_db.h	/^  TD_THR_ANY_TYPE,$/;"	e	enum:__anon61
TD_THR_ANY_USER_FLAGS	thread_db.h	105;"	d
TD_THR_LOWEST_PRIORITY	thread_db.h	106;"	d
TD_THR_RUN	thread_db.h	/^  TD_THR_RUN,$/;"	e	enum:__anon60
TD_THR_SLEEP	thread_db.h	/^  TD_THR_SLEEP,$/;"	e	enum:__anon60
TD_THR_STOPPED	thread_db.h	/^  TD_THR_STOPPED,$/;"	e	enum:__anon60
TD_THR_STOPPED_ASLEEP	thread_db.h	/^  TD_THR_STOPPED_ASLEEP$/;"	e	enum:__anon60
TD_THR_SYSTEM	thread_db.h	/^  TD_THR_SYSTEM$/;"	e	enum:__anon61
TD_THR_UNKNOWN	thread_db.h	/^  TD_THR_UNKNOWN,$/;"	e	enum:__anon60
TD_THR_USER	thread_db.h	/^  TD_THR_USER,$/;"	e	enum:__anon61
TD_THR_ZOMBIE	thread_db.h	/^  TD_THR_ZOMBIE,$/;"	e	enum:__anon60
TD_TIMEOUT	thread_db.h	/^  TD_TIMEOUT,			 \/* Conditional variable wait timed out.  *\/$/;"	e	enum:__anon62
TD_TLSDEFER	thread_db.h	/^  TD_TLSDEFER,	  \/* Thread has not yet allocated TLS for given module.  *\/$/;"	e	enum:__anon59
TD_VERSION	thread_db.h	/^  TD_VERSION,	  \/* Version if libpthread and libthread_db do not match.  *\/$/;"	e	enum:__anon59
TEMP_FAILURE_RETRY	unistd.h	1114;"	d
TGEXEC	tar.h	80;"	d
TGREAD	tar.h	78;"	d
TGWRITE	tar.h	79;"	d
THOUSANDS_SEP	langinfo.h	479;"	d
THOUSEP	langinfo.h	/^  THOUSEP = __THOUSANDS_SEP,$/;"	e	enum:__anon20
THOUSEP	langinfo.h	482;"	d
TLOSS	math.h	343;"	d
TMAGIC	tar.h	101;"	d
TMAGLEN	tar.h	102;"	d
TOEXEC	tar.h	83;"	d
TOREAD	tar.h	81;"	d
TOWRITE	tar.h	82;"	d
TRY_AGAIN	netdb.h	67;"	d
TSGID	tar.h	73;"	d
TSUID	tar.h	72;"	d
TSVTX	tar.h	74;"	d
TTY_ON	ttyent.h	48;"	d
TTY_SECURE	ttyent.h	49;"	d
TUEXEC	tar.h	77;"	d
TUREAD	tar.h	75;"	d
TUWRITE	tar.h	76;"	d
TVERSION	tar.h	105;"	d
TVERSLEN	tar.h	106;"	d
T_FMT	langinfo.h	/^  T_FMT,			\/* Time format for strftime.  *\/$/;"	e	enum:__anon20
T_FMT	langinfo.h	140;"	d
T_FMT_AMPM	langinfo.h	/^  T_FMT_AMPM,			\/* 12-hour time format for strftime.  *\/$/;"	e	enum:__anon20
T_FMT_AMPM	langinfo.h	142;"	d
UCHAR_MAX	limits.h	62;"	d
UINT16_C	stdint.h	301;"	d
UINT16_MAX	stdint.h	172;"	d
UINT32_C	stdint.h	302;"	d
UINT32_MAX	stdint.h	173;"	d
UINT64_C	stdint.h	304;"	d
UINT64_C	stdint.h	306;"	d
UINT64_MAX	stdint.h	174;"	d
UINT8_C	stdint.h	300;"	d
UINT8_MAX	stdint.h	171;"	d
UINTMAX_C	stdint.h	312;"	d
UINTMAX_C	stdint.h	315;"	d
UINTMAX_MAX	stdint.h	246;"	d
UINTPTR_MAX	stdint.h	232;"	d
UINTPTR_MAX	stdint.h	236;"	d
UINT_FAST16_MAX	stdint.h	219;"	d
UINT_FAST16_MAX	stdint.h	222;"	d
UINT_FAST32_MAX	stdint.h	220;"	d
UINT_FAST32_MAX	stdint.h	223;"	d
UINT_FAST64_MAX	stdint.h	225;"	d
UINT_FAST8_MAX	stdint.h	217;"	d
UINT_LEAST16_MAX	stdint.h	190;"	d
UINT_LEAST32_MAX	stdint.h	191;"	d
UINT_LEAST64_MAX	stdint.h	192;"	d
UINT_LEAST8_MAX	stdint.h	189;"	d
UINT_MAX	limits.h	85;"	d
ULLONG_MAX	limits.h	109;"	d
ULLONG_MAX	limits.h	139;"	d
ULONG_MAX	limits.h	97;"	d
ULONG_MAX	limits.h	99;"	d
UL_GETFSIZE	ulimit.h	/^  UL_GETFSIZE = 1,			\/* Return limit on the size of a file,$/;"	e	enum:__anon15
UL_GETFSIZE	ulimit.h	30;"	d
UL_SETFSIZE	ulimit.h	/^  UL_SETFSIZE,				\/* Set limit on the size of a file to$/;"	e	enum:__anon15
UL_SETFSIZE	ulimit.h	33;"	d
UNALIGNED_OK	zconf.h	155;"	d
UNDERFLOW	math.h	342;"	d
USHRT_MAX	limits.h	78;"	d
UTMPX_FILE	utmpx.h	36;"	d
UTMPX_FILENAME	utmpx.h	37;"	d
UTMP_FILE	utmp.h	33;"	d
UTMP_FILENAME	utmp.h	34;"	d
VER_DEF_CURRENT	elf.h	826;"	d
VER_DEF_NONE	elf.h	825;"	d
VER_DEF_NUM	elf.h	827;"	d
VER_FLG_BASE	elf.h	830;"	d
VER_FLG_WEAK	elf.h	831;"	d
VER_FLG_WEAK	elf.h	910;"	d
VER_NDX_ELIMINATE	elf.h	837;"	d
VER_NDX_GLOBAL	elf.h	835;"	d
VER_NDX_LOCAL	elf.h	834;"	d
VER_NDX_LORESERVE	elf.h	836;"	d
VER_NEED_CURRENT	elf.h	883;"	d
VER_NEED_NONE	elf.h	882;"	d
VER_NEED_NUM	elf.h	884;"	d
VISIT	search.h	/^VISIT;$/;"	t	typeref:enum:__anon78
WCHAR_MAX	stdint.h	275;"	d
WCHAR_MAX	wchar.h	115;"	d
WCHAR_MIN	stdint.h	274;"	d
WCHAR_MIN	wchar.h	114;"	d
WEOF	wchar.h	119;"	d
WEOF	wctype.h	39;"	d
WEXITSTATUS	stdlib.h	85;"	d
WIFCONTINUED	stdlib.h	92;"	d
WIFEXITED	stdlib.h	88;"	d
WIFSIGNALED	stdlib.h	89;"	d
WIFSTOPPED	stdlib.h	90;"	d
WIN32	zconf.h	136;"	d
WINDOWS	zconf.h	132;"	d
WINT_MAX	stdint.h	280;"	d
WINT_MIN	stdint.h	279;"	d
WRDE_APPEND	wordexp.h	/^    WRDE_APPEND = (1 << 1),	\/* Append to results of a previous call.  *\/$/;"	e	enum:__anon69
WRDE_BADCHAR	wordexp.h	/^    WRDE_BADCHAR,		\/* A metachar appears in the wrong place.  *\/$/;"	e	enum:__anon71
WRDE_BADVAL	wordexp.h	/^    WRDE_BADVAL,		\/* Undefined var reference with WRDE_UNDEF.  *\/$/;"	e	enum:__anon71
WRDE_CMDSUB	wordexp.h	/^    WRDE_CMDSUB,		\/* Command substitution with WRDE_NOCMD.  *\/$/;"	e	enum:__anon71
WRDE_DOOFFS	wordexp.h	/^    WRDE_DOOFFS = (1 << 0),	\/* Insert PWORDEXP->we_offs NULLs.  *\/$/;"	e	enum:__anon69
WRDE_NOCMD	wordexp.h	/^    WRDE_NOCMD = (1 << 2),	\/* Don't do command substitution.  *\/$/;"	e	enum:__anon69
WRDE_NOSPACE	wordexp.h	/^    WRDE_NOSPACE = 1,		\/* Ran out of memory.  *\/$/;"	e	enum:__anon71
WRDE_NOSYS	wordexp.h	/^    WRDE_NOSYS = -1,		\/* Never used since we support `wordexp'.  *\/$/;"	e	enum:__anon71
WRDE_REUSE	wordexp.h	/^    WRDE_REUSE = (1 << 3),	\/* Reuse storage in PWORDEXP.  *\/$/;"	e	enum:__anon69
WRDE_SHOWERR	wordexp.h	/^    WRDE_SHOWERR = (1 << 4),	\/* Don't redirect stderr to \/dev\/null.  *\/$/;"	e	enum:__anon69
WRDE_SYNTAX	wordexp.h	/^    WRDE_SYNTAX			\/* Shell syntax error.  *\/$/;"	e	enum:__anon71
WRDE_UNDEF	wordexp.h	/^    WRDE_UNDEF = (1 << 5),	\/* Error for expanding undefined variables.  *\/$/;"	e	enum:__anon69
WSTOPSIG	stdlib.h	87;"	d
WTERMSIG	stdlib.h	86;"	d
WTMPX_FILE	utmpx.h	38;"	d
WTMPX_FILENAME	utmpx.h	39;"	d
WTMP_FILE	utmp.h	35;"	d
WTMP_FILENAME	utmp.h	36;"	d
W_OK	fcntl.h	92;"	d
W_OK	unistd.h	283;"	d
XMLCALL	expat_external.h	38;"	d
XMLCALL	expat_external.h	40;"	d
XMLCALL	expat_external.h	52;"	d
XMLIMPORT	expat_external.h	62;"	d
XMLIMPORT	expat_external.h	71;"	d
XMLPARSEAPI	expat_external.h	75;"	d
XML_AttlistDeclHandler	expat.h	/^typedef void (XMLCALL *XML_AttlistDeclHandler) ($/;"	t
XML_Bool	expat.h	/^typedef unsigned char XML_Bool;$/;"	t
XML_CONTEXT_BYTES	expat_config.h	75;"	d
XML_CQUANT_NONE	expat.h	/^  XML_CQUANT_NONE,$/;"	e	enum:XML_Content_Quant
XML_CQUANT_OPT	expat.h	/^  XML_CQUANT_OPT,$/;"	e	enum:XML_Content_Quant
XML_CQUANT_PLUS	expat.h	/^  XML_CQUANT_PLUS$/;"	e	enum:XML_Content_Quant
XML_CQUANT_REP	expat.h	/^  XML_CQUANT_REP,$/;"	e	enum:XML_Content_Quant
XML_CTYPE_ANY	expat.h	/^  XML_CTYPE_ANY,$/;"	e	enum:XML_Content_Type
XML_CTYPE_CHOICE	expat.h	/^  XML_CTYPE_CHOICE,$/;"	e	enum:XML_Content_Type
XML_CTYPE_EMPTY	expat.h	/^  XML_CTYPE_EMPTY = 1,$/;"	e	enum:XML_Content_Type
XML_CTYPE_MIXED	expat.h	/^  XML_CTYPE_MIXED,$/;"	e	enum:XML_Content_Type
XML_CTYPE_NAME	expat.h	/^  XML_CTYPE_NAME,$/;"	e	enum:XML_Content_Type
XML_CTYPE_SEQ	expat.h	/^  XML_CTYPE_SEQ$/;"	e	enum:XML_Content_Type
XML_Char	expat_external.h	/^typedef char XML_Char;$/;"	t
XML_Char	expat_external.h	/^typedef unsigned short XML_Char;$/;"	t
XML_Char	expat_external.h	/^typedef wchar_t XML_Char;$/;"	t
XML_CharacterDataHandler	expat.h	/^typedef void (XMLCALL *XML_CharacterDataHandler) (void *userData,$/;"	t
XML_CommentHandler	expat.h	/^typedef void (XMLCALL *XML_CommentHandler) (void *userData,$/;"	t
XML_Content	expat.h	/^typedef struct XML_cp XML_Content;$/;"	t	typeref:struct:XML_cp
XML_Content_Quant	expat.h	/^enum XML_Content_Quant {$/;"	g
XML_Content_Type	expat.h	/^enum XML_Content_Type {$/;"	g
XML_DTD	expat_config.h	78;"	d
XML_DefaultHandler	expat.h	/^typedef void (XMLCALL *XML_DefaultHandler) (void *userData,$/;"	t
XML_ERROR_ABORTED	expat.h	/^  XML_ERROR_ABORTED,$/;"	e	enum:XML_Error
XML_ERROR_ASYNC_ENTITY	expat.h	/^  XML_ERROR_ASYNC_ENTITY,$/;"	e	enum:XML_Error
XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF	expat.h	/^  XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_BAD_CHAR_REF	expat.h	/^  XML_ERROR_BAD_CHAR_REF,$/;"	e	enum:XML_Error
XML_ERROR_BINARY_ENTITY_REF	expat.h	/^  XML_ERROR_BINARY_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING	expat.h	/^  XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING,$/;"	e	enum:XML_Error
XML_ERROR_DUPLICATE_ATTRIBUTE	expat.h	/^  XML_ERROR_DUPLICATE_ATTRIBUTE,$/;"	e	enum:XML_Error
XML_ERROR_ENTITY_DECLARED_IN_PE	expat.h	/^  XML_ERROR_ENTITY_DECLARED_IN_PE,$/;"	e	enum:XML_Error
XML_ERROR_EXTERNAL_ENTITY_HANDLING	expat.h	/^  XML_ERROR_EXTERNAL_ENTITY_HANDLING,$/;"	e	enum:XML_Error
XML_ERROR_FEATURE_REQUIRES_XML_DTD	expat.h	/^  XML_ERROR_FEATURE_REQUIRES_XML_DTD,$/;"	e	enum:XML_Error
XML_ERROR_FINISHED	expat.h	/^  XML_ERROR_FINISHED,$/;"	e	enum:XML_Error
XML_ERROR_INCOMPLETE_PE	expat.h	/^  XML_ERROR_INCOMPLETE_PE,$/;"	e	enum:XML_Error
XML_ERROR_INCORRECT_ENCODING	expat.h	/^  XML_ERROR_INCORRECT_ENCODING,$/;"	e	enum:XML_Error
XML_ERROR_INVALID_TOKEN	expat.h	/^  XML_ERROR_INVALID_TOKEN,$/;"	e	enum:XML_Error
XML_ERROR_JUNK_AFTER_DOC_ELEMENT	expat.h	/^  XML_ERROR_JUNK_AFTER_DOC_ELEMENT,$/;"	e	enum:XML_Error
XML_ERROR_MISPLACED_XML_PI	expat.h	/^  XML_ERROR_MISPLACED_XML_PI,$/;"	e	enum:XML_Error
XML_ERROR_NONE	expat.h	/^  XML_ERROR_NONE,$/;"	e	enum:XML_Error
XML_ERROR_NOT_STANDALONE	expat.h	/^  XML_ERROR_NOT_STANDALONE,$/;"	e	enum:XML_Error
XML_ERROR_NOT_SUSPENDED	expat.h	/^  XML_ERROR_NOT_SUSPENDED,$/;"	e	enum:XML_Error
XML_ERROR_NO_ELEMENTS	expat.h	/^  XML_ERROR_NO_ELEMENTS,$/;"	e	enum:XML_Error
XML_ERROR_NO_MEMORY	expat.h	/^  XML_ERROR_NO_MEMORY,$/;"	e	enum:XML_Error
XML_ERROR_PARAM_ENTITY_REF	expat.h	/^  XML_ERROR_PARAM_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_PARTIAL_CHAR	expat.h	/^  XML_ERROR_PARTIAL_CHAR,$/;"	e	enum:XML_Error
XML_ERROR_PUBLICID	expat.h	/^  XML_ERROR_PUBLICID,$/;"	e	enum:XML_Error
XML_ERROR_RECURSIVE_ENTITY_REF	expat.h	/^  XML_ERROR_RECURSIVE_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_RESERVED_NAMESPACE_URI	expat.h	/^  XML_ERROR_RESERVED_NAMESPACE_URI$/;"	e	enum:XML_Error
XML_ERROR_RESERVED_PREFIX_XML	expat.h	/^  XML_ERROR_RESERVED_PREFIX_XML,$/;"	e	enum:XML_Error
XML_ERROR_RESERVED_PREFIX_XMLNS	expat.h	/^  XML_ERROR_RESERVED_PREFIX_XMLNS,$/;"	e	enum:XML_Error
XML_ERROR_SUSPENDED	expat.h	/^  XML_ERROR_SUSPENDED,$/;"	e	enum:XML_Error
XML_ERROR_SUSPEND_PE	expat.h	/^  XML_ERROR_SUSPEND_PE,$/;"	e	enum:XML_Error
XML_ERROR_SYNTAX	expat.h	/^  XML_ERROR_SYNTAX,$/;"	e	enum:XML_Error
XML_ERROR_TAG_MISMATCH	expat.h	/^  XML_ERROR_TAG_MISMATCH,$/;"	e	enum:XML_Error
XML_ERROR_TEXT_DECL	expat.h	/^  XML_ERROR_TEXT_DECL,$/;"	e	enum:XML_Error
XML_ERROR_UNBOUND_PREFIX	expat.h	/^  XML_ERROR_UNBOUND_PREFIX,$/;"	e	enum:XML_Error
XML_ERROR_UNCLOSED_CDATA_SECTION	expat.h	/^  XML_ERROR_UNCLOSED_CDATA_SECTION,$/;"	e	enum:XML_Error
XML_ERROR_UNCLOSED_TOKEN	expat.h	/^  XML_ERROR_UNCLOSED_TOKEN,$/;"	e	enum:XML_Error
XML_ERROR_UNDECLARING_PREFIX	expat.h	/^  XML_ERROR_UNDECLARING_PREFIX,$/;"	e	enum:XML_Error
XML_ERROR_UNDEFINED_ENTITY	expat.h	/^  XML_ERROR_UNDEFINED_ENTITY,$/;"	e	enum:XML_Error
XML_ERROR_UNEXPECTED_STATE	expat.h	/^  XML_ERROR_UNEXPECTED_STATE,$/;"	e	enum:XML_Error
XML_ERROR_UNKNOWN_ENCODING	expat.h	/^  XML_ERROR_UNKNOWN_ENCODING,$/;"	e	enum:XML_Error
XML_ERROR_XML_DECL	expat.h	/^  XML_ERROR_XML_DECL,$/;"	e	enum:XML_Error
XML_ElementDeclHandler	expat.h	/^typedef void (XMLCALL *XML_ElementDeclHandler) (void *userData,$/;"	t
XML_Encoding	expat.h	/^} XML_Encoding;$/;"	t	typeref:struct:__anon47
XML_EndCdataSectionHandler	expat.h	/^typedef void (XMLCALL *XML_EndCdataSectionHandler) (void *userData);$/;"	t
XML_EndDoctypeDeclHandler	expat.h	/^typedef void (XMLCALL *XML_EndDoctypeDeclHandler)(void *userData);$/;"	t
XML_EndElementHandler	expat.h	/^typedef void (XMLCALL *XML_EndElementHandler) (void *userData,$/;"	t
XML_EndNamespaceDeclHandler	expat.h	/^typedef void (XMLCALL *XML_EndNamespaceDeclHandler) ($/;"	t
XML_EntityDeclHandler	expat.h	/^typedef void (XMLCALL *XML_EntityDeclHandler) ($/;"	t
XML_Error	expat.h	/^enum XML_Error {$/;"	g
XML_Expat_Version	expat.h	/^} XML_Expat_Version;$/;"	t	typeref:struct:__anon49
XML_ExternalEntityRefHandler	expat.h	/^typedef int (XMLCALL *XML_ExternalEntityRefHandler) ($/;"	t
XML_FALSE	expat.h	30;"	d
XML_FEATURE_CONTEXT_BYTES	expat.h	/^  XML_FEATURE_CONTEXT_BYTES,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_DTD	expat.h	/^  XML_FEATURE_DTD,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_END	expat.h	/^  XML_FEATURE_END = 0,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_LARGE_SIZE	expat.h	/^  XML_FEATURE_LARGE_SIZE$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_MIN_SIZE	expat.h	/^  XML_FEATURE_MIN_SIZE,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_NS	expat.h	/^  XML_FEATURE_NS,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_SIZEOF_XML_CHAR	expat.h	/^  XML_FEATURE_SIZEOF_XML_CHAR,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_SIZEOF_XML_LCHAR	expat.h	/^  XML_FEATURE_SIZEOF_XML_LCHAR,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_UNICODE	expat.h	/^  XML_FEATURE_UNICODE,$/;"	e	enum:XML_FeatureEnum
XML_FEATURE_UNICODE_WCHAR_T	expat.h	/^  XML_FEATURE_UNICODE_WCHAR_T,$/;"	e	enum:XML_FeatureEnum
XML_FINISHED	expat.h	/^  XML_FINISHED,$/;"	e	enum:XML_Parsing
XML_Feature	expat.h	/^} XML_Feature;$/;"	t	typeref:struct:__anon50
XML_FeatureEnum	expat.h	/^enum XML_FeatureEnum {$/;"	g
XML_GetErrorByteIndex	expat.h	936;"	d
XML_GetErrorColumnNumber	expat.h	935;"	d
XML_GetErrorLineNumber	expat.h	934;"	d
XML_GetUserData	expat.h	674;"	d
XML_INITIALIZED	expat.h	/^  XML_INITIALIZED,$/;"	e	enum:XML_Parsing
XML_Index	expat_external.h	/^typedef __int64 XML_Index; $/;"	t
XML_Index	expat_external.h	/^typedef long XML_Index;$/;"	t
XML_Index	expat_external.h	/^typedef long long XML_Index;$/;"	t
XML_LChar	expat_external.h	/^typedef char XML_LChar;$/;"	t
XML_LChar	expat_external.h	/^typedef wchar_t XML_LChar;$/;"	t
XML_MAJOR_VERSION	expat.h	1006;"	d
XML_MICRO_VERSION	expat.h	1008;"	d
XML_MINOR_VERSION	expat.h	1007;"	d
XML_Memory_Handling_Suite	expat.h	/^} XML_Memory_Handling_Suite;$/;"	t	typeref:struct:__anon46
XML_NS	expat_config.h	81;"	d
XML_NotStandaloneHandler	expat.h	/^typedef int (XMLCALL *XML_NotStandaloneHandler) (void *userData);$/;"	t
XML_NotationDeclHandler	expat.h	/^typedef void (XMLCALL *XML_NotationDeclHandler) ($/;"	t
XML_PARAM_ENTITY_PARSING_ALWAYS	expat.h	/^  XML_PARAM_ENTITY_PARSING_ALWAYS$/;"	e	enum:XML_ParamEntityParsing
XML_PARAM_ENTITY_PARSING_NEVER	expat.h	/^  XML_PARAM_ENTITY_PARSING_NEVER,$/;"	e	enum:XML_ParamEntityParsing
XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE	expat.h	/^  XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE,$/;"	e	enum:XML_ParamEntityParsing
XML_PARSING	expat.h	/^  XML_PARSING,$/;"	e	enum:XML_Parsing
XML_ParamEntityParsing	expat.h	/^enum XML_ParamEntityParsing {$/;"	g
XML_Parser	expat.h	/^typedef struct XML_ParserStruct *XML_Parser;$/;"	t	typeref:struct:XML_ParserStruct
XML_Parsing	expat.h	/^enum XML_Parsing {$/;"	g
XML_ParsingStatus	expat.h	/^} XML_ParsingStatus;$/;"	t	typeref:struct:__anon48
XML_ProcessingInstructionHandler	expat.h	/^typedef void (XMLCALL *XML_ProcessingInstructionHandler) ($/;"	t
XML_STATUS_ERROR	expat.h	/^  XML_STATUS_ERROR = 0,$/;"	e	enum:XML_Status
XML_STATUS_ERROR	expat.h	47;"	d
XML_STATUS_OK	expat.h	/^  XML_STATUS_OK = 1,$/;"	e	enum:XML_Status
XML_STATUS_OK	expat.h	49;"	d
XML_STATUS_SUSPENDED	expat.h	/^  XML_STATUS_SUSPENDED = 2$/;"	e	enum:XML_Status
XML_STATUS_SUSPENDED	expat.h	51;"	d
XML_SUSPENDED	expat.h	/^  XML_SUSPENDED$/;"	e	enum:XML_Parsing
XML_SetExternalEntityRefHandlerArg	expat.h	14;"	d
XML_SetProcessingInstructionHandler	expat.h	11;"	d
XML_SetStartNamespaceDeclHandler	expat.h	13;"	d
XML_SetUnparsedEntityDeclHandler	expat.h	12;"	d
XML_Size	expat_external.h	/^typedef unsigned __int64 XML_Size;$/;"	t
XML_Size	expat_external.h	/^typedef unsigned long XML_Size;$/;"	t
XML_Size	expat_external.h	/^typedef unsigned long long XML_Size;$/;"	t
XML_SkippedEntityHandler	expat.h	/^typedef void (XMLCALL *XML_SkippedEntityHandler) ($/;"	t
XML_StartCdataSectionHandler	expat.h	/^typedef void (XMLCALL *XML_StartCdataSectionHandler) (void *userData);$/;"	t
XML_StartDoctypeDeclHandler	expat.h	/^typedef void (XMLCALL *XML_StartDoctypeDeclHandler) ($/;"	t
XML_StartElementHandler	expat.h	/^typedef void (XMLCALL *XML_StartElementHandler) (void *userData,$/;"	t
XML_StartNamespaceDeclHandler	expat.h	/^typedef void (XMLCALL *XML_StartNamespaceDeclHandler) ($/;"	t
XML_Status	expat.h	/^enum XML_Status {$/;"	g
XML_TRUE	expat.h	29;"	d
XML_UNICODE	expat_external.h	82;"	d
XML_USE_MSC_EXTENSIONS	expat_external.h	11;"	d
XML_UnknownEncodingHandler	expat.h	/^typedef int (XMLCALL *XML_UnknownEncodingHandler) ($/;"	t
XML_UnparsedEntityDeclHandler	expat.h	/^typedef void (XMLCALL *XML_UnparsedEntityDeclHandler) ($/;"	t
XML_XmlDeclHandler	expat.h	/^typedef void (XMLCALL *XML_XmlDeclHandler) (void           *userData,$/;"	t
XML_cp	expat.h	/^struct XML_cp {$/;"	s
XML_cp::children	expat.h	/^  XML_Content *                 children;$/;"	m	struct:XML_cp	access:public
XML_cp::name	expat.h	/^  XML_Char *                    name;$/;"	m	struct:XML_cp	access:public
XML_cp::numchildren	expat.h	/^  unsigned int                  numchildren;$/;"	m	struct:XML_cp	access:public
XML_cp::quant	expat.h	/^  enum XML_Content_Quant        quant;$/;"	m	struct:XML_cp	typeref:enum:XML_cp::XML_Content_Quant	access:public
XML_cp::type	expat.h	/^  enum XML_Content_Type         type;$/;"	m	struct:XML_cp	typeref:enum:XML_cp::XML_Content_Type	access:public
X_OK	fcntl.h	93;"	d
X_OK	unistd.h	284;"	d
X_TLOSS	math.h	336;"	d
YESEXPR	langinfo.h	493;"	d
YESSTR	langinfo.h	498;"	d
YYLeng	FlexLexer.h	/^	int YYLeng()	const	{ return yyleng; }$/;"	f	class:FlexLexer	access:public	signature:() const
YYText	FlexLexer.h	/^	const char* YYText() const	{ return yytext; }$/;"	f	class:FlexLexer	access:public	signature:() const
ZCONF_H	zconf.h	9;"	d
ZEXPORT	zconf.h	288;"	d
ZEXPORT	zconf.h	300;"	d
ZEXPORT	zconf.h	303;"	d
ZEXPORT	zconf.h	317;"	d
ZEXPORTVA	zconf.h	290;"	d
ZEXPORTVA	zconf.h	292;"	d
ZEXPORTVA	zconf.h	301;"	d
ZEXPORTVA	zconf.h	304;"	d
ZEXPORTVA	zconf.h	320;"	d
ZEXTERN	zconf.h	271;"	d
ZEXTERN	zconf.h	273;"	d
ZEXTERN	zconf.h	310;"	d
ZEXTERN	zconf.h	314;"	d
ZLIB_H	zlib.h	32;"	d
ZLIB_VERNUM	zlib.h	41;"	d
ZLIB_VERSION	zlib.h	40;"	d
ZLIB_VER_MAJOR	zlib.h	42;"	d
ZLIB_VER_MINOR	zlib.h	43;"	d
ZLIB_VER_REVISION	zlib.h	44;"	d
ZMAGIC	a.out.h	52;"	d
Z_ASCII	zlib.h	202;"	d
Z_BEST_COMPRESSION	zlib.h	189;"	d
Z_BEST_SPEED	zlib.h	188;"	d
Z_BINARY	zlib.h	200;"	d
Z_BLOCK	zlib.h	170;"	d
Z_BUF_ERROR	zlib.h	181;"	d
Z_DATA_ERROR	zlib.h	179;"	d
Z_DEFAULT_COMPRESSION	zlib.h	190;"	d
Z_DEFAULT_STRATEGY	zlib.h	197;"	d
Z_DEFLATED	zlib.h	206;"	d
Z_ERRNO	zlib.h	177;"	d
Z_FILTERED	zlib.h	193;"	d
Z_FINISH	zlib.h	169;"	d
Z_FIXED	zlib.h	196;"	d
Z_FULL_FLUSH	zlib.h	168;"	d
Z_HUFFMAN_ONLY	zlib.h	194;"	d
Z_MEM_ERROR	zlib.h	180;"	d
Z_NEED_DICT	zlib.h	176;"	d
Z_NO_COMPRESSION	zlib.h	187;"	d
Z_NO_FLUSH	zlib.h	165;"	d
Z_NULL	zlib.h	209;"	d
Z_OK	zlib.h	174;"	d
Z_PARTIAL_FLUSH	zlib.h	166;"	d
Z_RLE	zlib.h	195;"	d
Z_STREAM_END	zlib.h	175;"	d
Z_STREAM_ERROR	zlib.h	178;"	d
Z_SYNC_FLUSH	zlib.h	167;"	d
Z_TEXT	zlib.h	201;"	d
Z_TREES	zlib.h	171;"	d
Z_UNKNOWN	zlib.h	203;"	d
Z_VERSION_ERROR	zlib.h	182;"	d
_AIO_H	aio.h	24;"	d
_ALIASES_H	aliases.h	20;"	d
_ALLOCA_H	alloca.h	20;"	d
_ARGP_H	argp.h	23;"	d
_ARGZ_H	argz.h	21;"	d
_AR_H	ar.h	21;"	d
_ASSERT_H	assert.h	26;"	d
_ASSERT_H	assert.h	36;"	d
_ASSERT_H_DECLS	assert.h	67;"	d
_ATFILE_SOURCE	features.h	174;"	d
_ATFILE_SOURCE	features.h	175;"	d
_ATFILE_SOURCE	features.h	245;"	d
_ATFILE_SOURCE	features.h	246;"	d
_AUTOSPRINTF_H	autosprintf.h	20;"	d
_BSD_SOURCE	features.h	170;"	d
_BSD_SOURCE	features.h	171;"	d
_BSD_SOURCE	features.h	183;"	d
_BYTESWAP_H	byteswap.h	20;"	d
_COMPLEX_H	complex.h	24;"	d
_CPIO_H	cpio.h	22;"	d
_CRYPT_H	crypt.h	26;"	d
_CTYPE_H	ctype.h	25;"	d
_Complex	complex.h	37;"	d
_Complex_I	complex.h	45;"	d
_DATE_FMT	langinfo.h	/^  _DATE_FMT,		\/* strftime format for date.  *\/$/;"	e	enum:__anon20
_DATE_FMT	langinfo.h	230;"	d
_DIRENT_H	dirent.h	24;"	d
_DLFCN_H	dlfcn.h	21;"	d
_D_ALLOC_NAMLEN	dirent.h	84;"	d
_D_ALLOC_NAMLEN	dirent.h	88;"	d
_D_ALLOC_NAMLEN	dirent.h	90;"	d
_D_EXACT_NAMLEN	dirent.h	83;"	d
_D_EXACT_NAMLEN	dirent.h	86;"	d
_ELF_H	elf.h	22;"	d
_ENDIAN_H	endian.h	20;"	d
_ENVZ_H	envz.h	21;"	d
_ERRNO_H	errno.h	28;"	d
_ERROR_H	error.h	21;"	d
_ERR_H	err.h	21;"	d
_EXECINFO_H	execinfo.h	20;"	d
_ElfW	link.h	32;"	d
_ElfW_1	link.h	33;"	d
_FCNTL_H	fcntl.h	25;"	d
_FEATURES_H	features.h	21;"	d
_FENV_H	fenv.h	24;"	d
_FNMATCH_H	fnmatch.h	20;"	d
_FSTAB_H	fstab.h	33;"	d
_FTS_H	fts.h	33;"	d
_FTW_H	ftw.h	24;"	d
_GCONV_H	gconv.h	24;"	d
_GETOPT_H	getopt.h	24;"	d
_GETTEXT_PO_H	gettext-po.h	19;"	d
_GLOB_H	glob.h	21;"	d
_GNU_GETOPT_INTERFACE_VERSION	gnu-versions.h	50;"	d
_GNU_GLOB_INTERFACE_VERSION	gnu-versions.h	49;"	d
_GNU_OBSTACK_INTERFACE_VERSION	gnu-versions.h	47;"	d
_GNU_REGEX_INTERFACE_VERSION	gnu-versions.h	48;"	d
_GNU_VERSIONS_H	gnu-versions.h	21;"	d
_GRP_H	grp.h	25;"	d
_GSHADOW_H	gshadow.h	22;"	d
_G_ARGS	_G_config.h	96;"	d
_G_ARGS	_G_config.h	98;"	d
_G_BUFSIZ	_G_config.h	85;"	d
_G_FSTAT64	_G_config.h	80;"	d
_G_HAVE_ATEXIT	_G_config.h	62;"	d
_G_HAVE_BOOL	_G_config.h	58;"	d
_G_HAVE_IO_FILE_OPEN	_G_config.h	72;"	d
_G_HAVE_IO_GETLINE_INFO	_G_config.h	73;"	d
_G_HAVE_LONG_DOUBLE_IO	_G_config.h	71;"	d
_G_HAVE_MMAP	_G_config.h	69;"	d
_G_HAVE_MREMAP	_G_config.h	70;"	d
_G_HAVE_PRINTF_FP	_G_config.h	68;"	d
_G_HAVE_ST_BLKSIZE	_G_config.h	83;"	d
_G_HAVE_SYS_CDEFS	_G_config.h	63;"	d
_G_HAVE_SYS_WAIT	_G_config.h	64;"	d
_G_IO_IO_FILE_VERSION	_G_config.h	75;"	d
_G_LSEEK64	_G_config.h	78;"	d
_G_MMAP64	_G_config.h	79;"	d
_G_NAMES_HAVE_UNDERSCORE	_G_config.h	88;"	d
_G_NEED_STDARG_H	_G_config.h	65;"	d
_G_OPEN64	_G_config.h	77;"	d
_G_USING_THUNKS	_G_config.h	90;"	d
_G_VTABLE_LABEL_HAS_LENGTH	_G_config.h	89;"	d
_G_VTABLE_LABEL_PREFIX	_G_config.h	91;"	d
_G_VTABLE_LABEL_PREFIX_ID	_G_config.h	92;"	d
_G_config_h	_G_config.h	5;"	d
_G_fpos64_t	_G_config.h	/^} _G_fpos64_t;$/;"	t	typeref:struct:__anon17
_G_fpos_t	_G_config.h	/^} _G_fpos_t;$/;"	t	typeref:struct:__anon16
_G_iconv_t	_G_config.h	/^} _G_iconv_t;$/;"	t	typeref:union:__anon18
_G_int16_t	_G_config.h	/^typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));$/;"	t
_G_int32_t	_G_config.h	/^typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));$/;"	t
_G_off64_t	_G_config.h	34;"	d
_G_off_t	_G_config.h	33;"	d
_G_pid_t	_G_config.h	35;"	d
_G_size_t	_G_config.h	21;"	d
_G_ssize_t	_G_config.h	32;"	d
_G_stat64	_G_config.h	39;"	d
_G_uid_t	_G_config.h	36;"	d
_G_uint16_t	_G_config.h	/^typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));$/;"	t
_G_uint32_t	_G_config.h	/^typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));$/;"	t
_G_va_list	_G_config.h	66;"	d
_G_wchar_t	_G_config.h	37;"	d
_G_wint_t	_G_config.h	38;"	d
_ICONV_H	iconv.h	20;"	d
_IEEE754_H	ieee754.h	21;"	d
_IEEE_	math.h	/^  _IEEE_ = -1,	\/* According to IEEE 754\/IEEE 854.  *\/$/;"	e	enum:__anon57
_IFADDRS_H	ifaddrs.h	21;"	d
_INTTYPES_H	inttypes.h	24;"	d
_IOFBF	stdio.h	121;"	d
_IOLBF	stdio.h	122;"	d
_IONBF	stdio.h	123;"	d
_IOS_APPEND	libio.h	108;"	d
_IOS_ATEND	libio.h	107;"	d
_IOS_BIN	libio.h	112;"	d
_IOS_INPUT	libio.h	105;"	d
_IOS_NOCREATE	libio.h	110;"	d
_IOS_NOREPLACE	libio.h	111;"	d
_IOS_OUTPUT	libio.h	106;"	d
_IOS_TRUNC	libio.h	109;"	d
_IO_BAD_SEEN	libio.h	137;"	d
_IO_BE	libio.h	426;"	d
_IO_BE	libio.h	428;"	d
_IO_BOOLALPHA	libio.h	167;"	d
_IO_BUFSIZ	libio.h	46;"	d
_IO_CURRENTLY_PUTTING	libio.h	134;"	d
_IO_DEC	libio.h	155;"	d
_IO_DELETE_DONT_CLOSE	libio.h	129;"	d
_IO_DONT_CLOSE	libio.h	166;"	d
_IO_EOF_SEEN	libio.h	127;"	d
_IO_ERR_SEEN	libio.h	128;"	d
_IO_FILE	libio.h	/^struct _IO_FILE {$/;"	s
_IO_FILE	libio.h	/^typedef struct _IO_FILE _IO_FILE;$/;"	t	typeref:struct:_IO_FILE
_IO_FILE::_IO_backup_base	libio.h	/^  char *_IO_backup_base;  \/* Pointer to first valid character of backup area *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_IO_buf_base	libio.h	/^  char* _IO_buf_base;	\/* Start of reserve area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_IO_buf_end	libio.h	/^  char* _IO_buf_end;	\/* End of reserve area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_IO_read_base	libio.h	/^  char* _IO_read_base;	\/* Start of putback+get area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_IO_read_end	libio.h	/^  char* _IO_read_end;	\/* End of get area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_IO_read_ptr	libio.h	/^  char* _IO_read_ptr;	\/* Current read pointer *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_IO_save_base	libio.h	/^  char *_IO_save_base; \/* Pointer to start of non-current get area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_IO_save_end	libio.h	/^  char *_IO_save_end; \/* Pointer to end of non-current get area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_IO_write_base	libio.h	/^  char* _IO_write_base;	\/* Start of put area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_IO_write_end	libio.h	/^  char* _IO_write_end;	\/* End of put area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_IO_write_ptr	libio.h	/^  char* _IO_write_ptr;	\/* Current put pointer. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_chain	libio.h	/^  struct _IO_FILE *_chain;$/;"	m	struct:_IO_FILE	typeref:struct:_IO_FILE::_IO_FILE	access:public
_IO_FILE::_cur_column	libio.h	/^  unsigned short _cur_column;$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_fileno	libio.h	/^  int _fileno;$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_flags	libio.h	/^  int _flags;		\/* High-order word is _IO_MAGIC; rest is flags. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_flags2	libio.h	/^  int _flags2;$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_lock	libio.h	/^  _IO_lock_t *_lock;$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_markers	libio.h	/^  struct _IO_marker *_markers;$/;"	m	struct:_IO_FILE	typeref:struct:_IO_FILE::_IO_marker	access:public
_IO_FILE::_old_offset	libio.h	/^  _IO_off_t _old_offset; \/* This used to be _offset but it's too small.  *\/$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_shortbuf	libio.h	/^  char _shortbuf[1];$/;"	m	struct:_IO_FILE	access:public
_IO_FILE::_vtable_offset	libio.h	/^  signed char _vtable_offset;$/;"	m	struct:_IO_FILE	access:public
_IO_FILE_complete	libio.h	/^struct _IO_FILE_complete$/;"	s
_IO_FILE_complete::__pad1	libio.h	/^  void *__pad1;$/;"	m	struct:_IO_FILE_complete	access:public
_IO_FILE_complete::__pad2	libio.h	/^  void *__pad2;$/;"	m	struct:_IO_FILE_complete	access:public
_IO_FILE_complete::__pad3	libio.h	/^  void *__pad3;$/;"	m	struct:_IO_FILE_complete	access:public
_IO_FILE_complete::__pad4	libio.h	/^  void *__pad4;$/;"	m	struct:_IO_FILE_complete	access:public
_IO_FILE_complete::__pad5	libio.h	/^  size_t __pad5;$/;"	m	struct:_IO_FILE_complete	access:public
_IO_FILE_complete::_codecvt	libio.h	/^  struct _IO_codecvt *_codecvt;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_codecvt	access:public
_IO_FILE_complete::_file	libio.h	/^  struct _IO_FILE _file;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_FILE	access:public
_IO_FILE_complete::_freeres_buf	libio.h	/^  void *_freeres_buf;$/;"	m	struct:_IO_FILE_complete	access:public
_IO_FILE_complete::_freeres_list	libio.h	/^  struct _IO_FILE *_freeres_list;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_FILE	access:public
_IO_FILE_complete::_freeres_size	libio.h	/^  size_t _freeres_size;$/;"	m	struct:_IO_FILE_complete	access:public
_IO_FILE_complete::_mode	libio.h	/^  int _mode;$/;"	m	struct:_IO_FILE_complete	access:public
_IO_FILE_complete::_offset	libio.h	/^  _IO_off64_t _offset;$/;"	m	struct:_IO_FILE_complete	access:public
_IO_FILE_complete::_unused2	libio.h	/^  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];$/;"	m	struct:_IO_FILE_complete	access:public
_IO_FILE_complete::_wide_data	libio.h	/^  struct _IO_wide_data *_wide_data;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_wide_data	access:public
_IO_FIXED	libio.h	163;"	d
_IO_FLAGS2_FORTIFY	libio.h	143;"	d
_IO_FLAGS2_MMAP	libio.h	140;"	d
_IO_FLAGS2_NOTCANCEL	libio.h	141;"	d
_IO_FLAGS2_SCANF_STD	libio.h	147;"	d
_IO_FLAGS2_USER_WBUF	libio.h	145;"	d
_IO_HAVE_ST_BLKSIZE	libio.h	45;"	d
_IO_HAVE_SYS_WAIT	libio.h	44;"	d
_IO_HEX	libio.h	157;"	d
_IO_INTERNAL	libio.h	154;"	d
_IO_IN_BACKUP	libio.h	131;"	d
_IO_IS_APPENDING	libio.h	135;"	d
_IO_IS_FILEBUF	libio.h	136;"	d
_IO_LEFT	libio.h	152;"	d
_IO_LINE_BUF	libio.h	132;"	d
_IO_LINKED	libio.h	130;"	d
_IO_MAGIC	libio.h	120;"	d
_IO_MAGIC_MASK	libio.h	122;"	d
_IO_NO_READS	libio.h	125;"	d
_IO_NO_WRITES	libio.h	126;"	d
_IO_OCT	libio.h	156;"	d
_IO_PENDING_OUTPUT_COUNT	libio.h	468;"	d
_IO_RIGHT	libio.h	153;"	d
_IO_SCIENTIFIC	libio.h	162;"	d
_IO_SHOWBASE	libio.h	158;"	d
_IO_SHOWPOINT	libio.h	159;"	d
_IO_SHOWPOS	libio.h	161;"	d
_IO_SKIPWS	libio.h	151;"	d
_IO_STDIO	libio.h	165;"	d
_IO_STDIO_H	libio.h	30;"	d
_IO_TIED_PUT_GET	libio.h	133;"	d
_IO_UNBUFFERED	libio.h	124;"	d
_IO_UNIFIED_JUMPTABLES	libio.h	84;"	d
_IO_UNITBUF	libio.h	164;"	d
_IO_UPPERCASE	libio.h	160;"	d
_IO_USER_BUF	libio.h	123;"	d
_IO_USER_LOCK	libio.h	138;"	d
_IO_USE_DTOA	libio.h	86;"	d
_IO_backup_base	libio.h	/^  char *_IO_backup_base;  \/* Pointer to first valid character of backup area *\/$/;"	m	struct:_IO_FILE	access:public
_IO_backup_base	libio.h	/^  wchar_t *_IO_backup_base;	\/* Pointer to first valid character of$/;"	m	struct:_IO_wide_data	access:public
_IO_buf_base	libio.h	/^  char* _IO_buf_base;	\/* Start of reserve area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_buf_base	libio.h	/^  wchar_t *_IO_buf_base;	\/* Start of reserve area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_buf_end	libio.h	/^  char* _IO_buf_end;	\/* End of reserve area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_buf_end	libio.h	/^  wchar_t *_IO_buf_end;		\/* End of reserve area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_cleanup_region_end	libio.h	487;"	d
_IO_cleanup_region_start	libio.h	486;"	d
_IO_codecvt	libio.h	/^struct _IO_codecvt$/;"	s
_IO_codecvt::__cd_in	libio.h	/^  _IO_iconv_t __cd_in;$/;"	m	struct:_IO_codecvt	access:public
_IO_codecvt::__cd_out	libio.h	/^  _IO_iconv_t __cd_out;$/;"	m	struct:_IO_codecvt	access:public
_IO_codecvt::__codecvt_destr	libio.h	/^  void (*__codecvt_destr) (struct _IO_codecvt *);$/;"	m	struct:_IO_codecvt	access:public
_IO_codecvt::__codecvt_do_always_noconv	libio.h	/^  int (*__codecvt_do_always_noconv) (struct _IO_codecvt *);$/;"	m	struct:_IO_codecvt	access:public
_IO_codecvt::__codecvt_do_encoding	libio.h	/^  int (*__codecvt_do_encoding) (struct _IO_codecvt *);$/;"	m	struct:_IO_codecvt	access:public
_IO_codecvt::__codecvt_do_in	libio.h	/^  enum __codecvt_result (*__codecvt_do_in) (struct _IO_codecvt *,$/;"	m	struct:_IO_codecvt	typeref:enum:_IO_codecvt::__codecvt_do_in	access:public
_IO_codecvt::__codecvt_do_length	libio.h	/^  int (*__codecvt_do_length) (struct _IO_codecvt *, __mbstate_t *,$/;"	m	struct:_IO_codecvt	access:public
_IO_codecvt::__codecvt_do_max_length	libio.h	/^  int (*__codecvt_do_max_length) (struct _IO_codecvt *);$/;"	m	struct:_IO_codecvt	access:public
_IO_codecvt::__codecvt_do_out	libio.h	/^  enum __codecvt_result (*__codecvt_do_out) (struct _IO_codecvt *,$/;"	m	struct:_IO_codecvt	typeref:enum:_IO_codecvt::__codecvt_do_out	access:public
_IO_codecvt::__codecvt_do_unshift	libio.h	/^  enum __codecvt_result (*__codecvt_do_unshift) (struct _IO_codecvt *,$/;"	m	struct:_IO_codecvt	typeref:enum:_IO_codecvt::__codecvt_do_unshift	access:public
_IO_cookie_init	libio.h	/^extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,$/;"	p	signature:(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns)
_IO_cookie_io_functions_t	libio.h	/^} _IO_cookie_io_functions_t;$/;"	t	typeref:struct:__anon130
_IO_feof_unlocked	libio.h	457;"	d
_IO_ferror_unlocked	libio.h	458;"	d
_IO_file_flags	libio.h	273;"	d
_IO_flockfile	libio.h	477;"	d
_IO_flockfile	libio.h	483;"	d
_IO_fpos64_t	libio.h	36;"	d
_IO_fpos_t	libio.h	35;"	d
_IO_ftrylockfile	libio.h	485;"	d
_IO_funlockfile	libio.h	479;"	d
_IO_funlockfile	libio.h	484;"	d
_IO_fwide	libio.h	523;"	d
_IO_fwide_maybe_incompatible	libio.h	512;"	d
_IO_fwide_maybe_incompatible	libio.h	519;"	d
_IO_getc	libio.h	/^extern int _IO_getc (_IO_FILE *__fp);$/;"	p	signature:(_IO_FILE *__fp)
_IO_getc_unlocked	libio.h	431;"	d
_IO_getwc	libio.h	/^extern _IO_wint_t _IO_getwc (_IO_FILE *__fp);$/;"	p	signature:(_IO_FILE *__fp)
_IO_getwc_unlocked	libio.h	444;"	d
_IO_iconv_t	libio.h	43;"	d
_IO_last_state	libio.h	/^  __mbstate_t _IO_last_state;$/;"	m	struct:_IO_wide_data	access:public
_IO_lock_t	libio.h	/^typedef void _IO_lock_t;$/;"	t
_IO_marker	libio.h	/^struct _IO_marker {$/;"	s
_IO_marker::_next	libio.h	/^  struct _IO_marker *_next;$/;"	m	struct:_IO_marker	typeref:struct:_IO_marker::_IO_marker	access:public
_IO_marker::_pos	libio.h	/^  int _pos;$/;"	m	struct:_IO_marker	access:public
_IO_marker::_sbuf	libio.h	/^  struct _IO_FILE *_sbuf;$/;"	m	struct:_IO_marker	typeref:struct:_IO_marker::_IO_FILE	access:public
_IO_off64_t	libio.h	40;"	d
_IO_off_t	libio.h	39;"	d
_IO_padn	libio.h	/^extern _IO_ssize_t _IO_padn (_IO_FILE *, int, _IO_ssize_t);$/;"	p	signature:(_IO_FILE *, int, _IO_ssize_t)
_IO_peekc	libio.h	476;"	d
_IO_peekc	libio.h	482;"	d
_IO_peekc_locked	libio.h	/^extern int _IO_peekc_locked (_IO_FILE *__fp);$/;"	p	signature:(_IO_FILE *__fp)
_IO_peekc_unlocked	libio.h	434;"	d
_IO_pid_t	libio.h	41;"	d
_IO_pos_t	libio.h	34;"	d
_IO_putc	libio.h	/^extern int _IO_putc (int __c, _IO_FILE *__fp);$/;"	p	signature:(int __c, _IO_FILE *__fp)
_IO_putc_unlocked	libio.h	438;"	d
_IO_putwc	libio.h	/^extern _IO_wint_t _IO_putwc (wchar_t __wc, _IO_FILE *__fp);$/;"	p	signature:(wchar_t __wc, _IO_FILE *__fp)
_IO_putwc_unlocked	libio.h	449;"	d
_IO_read_base	libio.h	/^  char* _IO_read_base;	\/* Start of putback+get area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_read_base	libio.h	/^  wchar_t *_IO_read_base;	\/* Start of putback+get area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_read_end	libio.h	/^  char* _IO_read_end;	\/* End of get area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_read_end	libio.h	/^  wchar_t *_IO_read_end;	\/* End of get area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_read_ptr	libio.h	/^  char* _IO_read_ptr;	\/* Current read pointer *\/$/;"	m	struct:_IO_FILE	access:public
_IO_read_ptr	libio.h	/^  wchar_t *_IO_read_ptr;	\/* Current read pointer *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_save_base	libio.h	/^  char *_IO_save_base; \/* Pointer to start of non-current get area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_save_base	libio.h	/^  wchar_t *_IO_save_base;	\/* Pointer to start of non-current get area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_save_end	libio.h	/^  char *_IO_save_end; \/* Pointer to end of non-current get area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_save_end	libio.h	/^  wchar_t *_IO_save_end;	\/* Pointer to end of non-current get area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_seekoff	libio.h	/^extern _IO_off64_t _IO_seekoff (_IO_FILE *, _IO_off64_t, int, int);$/;"	p	signature:(_IO_FILE *, _IO_off64_t, int, int)
_IO_seekpos	libio.h	/^extern _IO_off64_t _IO_seekpos (_IO_FILE *, _IO_off64_t, int);$/;"	p	signature:(_IO_FILE *, _IO_off64_t, int)
_IO_sgetn	libio.h	/^extern _IO_size_t _IO_sgetn (_IO_FILE *, void *, _IO_size_t);$/;"	p	signature:(_IO_FILE *, void *, _IO_size_t)
_IO_size_t	libio.h	37;"	d
_IO_ssize_t	libio.h	38;"	d
_IO_state	libio.h	/^  __mbstate_t _IO_state;$/;"	m	struct:_IO_wide_data	access:public
_IO_stderr	libio.h	352;"	d
_IO_stdin	libio.h	350;"	d
_IO_stdin_used	libio.h	/^weak_extern (_IO_stdin_used);$/;"	v
_IO_stdout	libio.h	351;"	d
_IO_uid_t	libio.h	42;"	d
_IO_va_list	libio.h	47;"	d
_IO_va_list	libio.h	55;"	d
_IO_va_list	libio.h	56;"	d
_IO_vfprintf	libio.h	/^extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,$/;"	p	signature:(_IO_FILE *__restrict, const char *__restrict, _IO_va_list)
_IO_vfscanf	libio.h	/^extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,$/;"	p	signature:(_IO_FILE * __restrict, const char * __restrict, _IO_va_list, int *__restrict)
_IO_vfwprintf	libio.h	/^extern int _IO_vfwprintf (_IO_FILE *__restrict, const wchar_t *__restrict,$/;"	p	signature:(_IO_FILE *__restrict, const wchar_t *__restrict, _IO_va_list)
_IO_vfwscanf	libio.h	/^extern int _IO_vfwscanf (_IO_FILE * __restrict, const wchar_t * __restrict,$/;"	p	signature:(_IO_FILE * __restrict, const wchar_t * __restrict, _IO_va_list, int *__restrict)
_IO_wide_data	libio.h	/^struct _IO_wide_data$/;"	s
_IO_wide_data::_IO_backup_base	libio.h	/^  wchar_t *_IO_backup_base;	\/* Pointer to first valid character of$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_buf_base	libio.h	/^  wchar_t *_IO_buf_base;	\/* Start of reserve area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_buf_end	libio.h	/^  wchar_t *_IO_buf_end;		\/* End of reserve area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_last_state	libio.h	/^  __mbstate_t _IO_last_state;$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_read_base	libio.h	/^  wchar_t *_IO_read_base;	\/* Start of putback+get area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_read_end	libio.h	/^  wchar_t *_IO_read_end;	\/* End of get area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_read_ptr	libio.h	/^  wchar_t *_IO_read_ptr;	\/* Current read pointer *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_save_base	libio.h	/^  wchar_t *_IO_save_base;	\/* Pointer to start of non-current get area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_save_end	libio.h	/^  wchar_t *_IO_save_end;	\/* Pointer to end of non-current get area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_state	libio.h	/^  __mbstate_t _IO_state;$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_write_base	libio.h	/^  wchar_t *_IO_write_base;	\/* Start of put area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_write_end	libio.h	/^  wchar_t *_IO_write_end;	\/* End of put area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_IO_write_ptr	libio.h	/^  wchar_t *_IO_write_ptr;	\/* Current put pointer. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_codecvt	libio.h	/^  struct _IO_codecvt _codecvt;$/;"	m	struct:_IO_wide_data	typeref:struct:_IO_wide_data::_IO_codecvt	access:public
_IO_wide_data::_shortbuf	libio.h	/^  wchar_t _shortbuf[1];$/;"	m	struct:_IO_wide_data	access:public
_IO_wide_data::_wide_vtable	libio.h	/^  const struct _IO_jump_t *_wide_vtable;$/;"	m	struct:_IO_wide_data	typeref:struct:_IO_wide_data::_IO_jump_t	access:public
_IO_wint_t	libio.h	48;"	d
_IO_wpadn	libio.h	/^extern _IO_ssize_t _IO_wpadn (_IO_FILE *, wint_t, _IO_ssize_t);$/;"	p	signature:(_IO_FILE *, wint_t, _IO_ssize_t)
_IO_write_base	libio.h	/^  char* _IO_write_base;	\/* Start of put area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_write_base	libio.h	/^  wchar_t *_IO_write_base;	\/* Start of put area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_write_end	libio.h	/^  char* _IO_write_end;	\/* End of put area. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_write_end	libio.h	/^  wchar_t *_IO_write_end;	\/* End of put area. *\/$/;"	m	struct:_IO_wide_data	access:public
_IO_write_ptr	libio.h	/^  char* _IO_write_ptr;	\/* Current put pointer. *\/$/;"	m	struct:_IO_FILE	access:public
_IO_write_ptr	libio.h	/^  wchar_t *_IO_write_ptr;	\/* Current put pointer. *\/$/;"	m	struct:_IO_wide_data	access:public
_ISOC95_SOURCE	features.h	156;"	d
_ISOC95_SOURCE	features.h	157;"	d
_ISOC99_SOURCE	features.h	158;"	d
_ISOC99_SOURCE	features.h	159;"	d
_ISOC_	math.h	/^  _ISOC_	\/* Actually this is ISO C99.  *\/$/;"	e	enum:__anon57
_ISalnum	ctype.h	/^  _ISalnum = _ISbit (11)	\/* Alphanumeric.  *\/$/;"	e	enum:__anon131
_ISalpha	ctype.h	/^  _ISalpha = _ISbit (2),	\/* Alphabetic.  *\/$/;"	e	enum:__anon131
_ISbit	ctype.h	43;"	d
_ISblank	ctype.h	/^  _ISblank = _ISbit (8),	\/* Blank (usually SPC and TAB).  *\/$/;"	e	enum:__anon131
_IScntrl	ctype.h	/^  _IScntrl = _ISbit (9),	\/* Control character.  *\/$/;"	e	enum:__anon131
_ISdigit	ctype.h	/^  _ISdigit = _ISbit (3),	\/* Numeric.  *\/$/;"	e	enum:__anon131
_ISgraph	ctype.h	/^  _ISgraph = _ISbit (7),	\/* Graphical.  *\/$/;"	e	enum:__anon131
_ISlower	ctype.h	/^  _ISlower = _ISbit (1),	\/* lowercase.  *\/$/;"	e	enum:__anon131
_ISprint	ctype.h	/^  _ISprint = _ISbit (6),	\/* Printing.  *\/$/;"	e	enum:__anon131
_ISpunct	ctype.h	/^  _ISpunct = _ISbit (10),	\/* Punctuation.  *\/$/;"	e	enum:__anon131
_ISspace	ctype.h	/^  _ISspace = _ISbit (5),	\/* Whitespace.  *\/$/;"	e	enum:__anon131
_ISupper	ctype.h	/^  _ISupper = _ISbit (0),	\/* UPPERCASE.  *\/$/;"	e	enum:__anon131
_ISwalnum	wctype.h	/^  _ISwalnum = _ISwbit (__ISwalnum)	\/* Alphanumeric.  *\/$/;"	e	enum:__anon75
_ISwalpha	wctype.h	/^  _ISwalpha = _ISwbit (__ISwalpha),	\/* Alphabetic.  *\/$/;"	e	enum:__anon75
_ISwbit	wctype.h	63;"	d
_ISwblank	wctype.h	/^  _ISwblank = _ISwbit (__ISwblank),	\/* Blank (usually SPC and TAB).  *\/$/;"	e	enum:__anon75
_ISwcntrl	wctype.h	/^  _ISwcntrl = _ISwbit (__ISwcntrl),	\/* Control character.  *\/$/;"	e	enum:__anon75
_ISwdigit	wctype.h	/^  _ISwdigit = _ISwbit (__ISwdigit),	\/* Numeric.  *\/$/;"	e	enum:__anon75
_ISwgraph	wctype.h	/^  _ISwgraph = _ISwbit (__ISwgraph),	\/* Graphical.  *\/$/;"	e	enum:__anon75
_ISwlower	wctype.h	/^  _ISwlower = _ISwbit (__ISwlower),	\/* lowercase.  *\/$/;"	e	enum:__anon75
_ISwprint	wctype.h	/^  _ISwprint = _ISwbit (__ISwprint),	\/* Printing.  *\/$/;"	e	enum:__anon75
_ISwpunct	wctype.h	/^  _ISwpunct = _ISwbit (__ISwpunct),	\/* Punctuation.  *\/$/;"	e	enum:__anon75
_ISwspace	wctype.h	/^  _ISwspace = _ISwbit (__ISwspace),	\/* Whitespace.  *\/$/;"	e	enum:__anon75
_ISwupper	wctype.h	/^  _ISwupper = _ISwbit (__ISwupper),	\/* UPPERCASE.  *\/$/;"	e	enum:__anon75
_ISwxdigit	wctype.h	/^  _ISwxdigit = _ISwbit (__ISwxdigit),	\/* Hexadecimal numeric.  *\/$/;"	e	enum:__anon75
_ISxdigit	ctype.h	/^  _ISxdigit = _ISbit (4),	\/* Hexadecimal numeric.  *\/$/;"	e	enum:__anon131
_LANGINFO_H	langinfo.h	21;"	d
_LARGEFILE64_SOURCE	features.h	168;"	d
_LARGEFILE64_SOURCE	features.h	169;"	d
_LARGEFILE_SOURCE	features.h	254;"	d
_LARGEFILE_SOURCE	features.h	255;"	d
_LIBC_LIMITS_H_	limits.h	25;"	d
_LIBGEN_H	libgen.h	20;"	d
_LIBINTL_H	libintl.h	22;"	d
_LIB_VERSION_TYPE	math.h	/^} _LIB_VERSION_TYPE;$/;"	t	typeref:enum:__anon57
_LIMITS_H	limits.h	44;"	d
_LINK_H	link.h	22;"	d
_LOCALE_H	locale.h	24;"	d
_MALLOC_H	malloc.h	22;"	d
_MATH_H	math.h	26;"	d
_MCHECK_H	mcheck.h	20;"	d
_MEMORY_H	memory.h	24;"	d
_MNTENT_H	mntent.h	21;"	d
_MONETARY_H	monetary.h	22;"	d
_MQUEUE_H	mqueue.h	20;"	d
_Mdouble_	complex.h	100;"	d
_Mdouble_	complex.h	108;"	d
_Mdouble_	complex.h	65;"	d
_Mdouble_	complex.h	68;"	d
_Mdouble_	complex.h	75;"	d
_Mdouble_	complex.h	82;"	d
_Mdouble_	math.h	137;"	d
_Mdouble_	math.h	146;"	d
_Mdouble_	math.h	67;"	d
_Mdouble_	math.h	72;"	d
_Mdouble_	math.h	86;"	d
_Mdouble_	math.h	95;"	d
_Mdouble_BEGIN_NAMESPACE	math.h	143;"	d
_Mdouble_BEGIN_NAMESPACE	math.h	147;"	d
_Mdouble_BEGIN_NAMESPACE	math.h	69;"	d
_Mdouble_BEGIN_NAMESPACE	math.h	73;"	d
_Mdouble_BEGIN_NAMESPACE	math.h	92;"	d
_Mdouble_BEGIN_NAMESPACE	math.h	96;"	d
_Mdouble_END_NAMESPACE	math.h	144;"	d
_Mdouble_END_NAMESPACE	math.h	148;"	d
_Mdouble_END_NAMESPACE	math.h	70;"	d
_Mdouble_END_NAMESPACE	math.h	74;"	d
_Mdouble_END_NAMESPACE	math.h	93;"	d
_Mdouble_END_NAMESPACE	math.h	97;"	d
_Mfloat_	complex.h	73;"	d
_Mfloat_	math.h	84;"	d
_Mlong_double_	complex.h	98;"	d
_Mlong_double_	math.h	135;"	d
_NETDB_H	netdb.h	24;"	d
_NL_ADDRESS_CODESET	langinfo.h	/^  _NL_ADDRESS_CODESET,$/;"	e	enum:__anon20
_NL_ADDRESS_COUNTRY_AB2	langinfo.h	/^  _NL_ADDRESS_COUNTRY_AB2,$/;"	e	enum:__anon20
_NL_ADDRESS_COUNTRY_AB3	langinfo.h	/^  _NL_ADDRESS_COUNTRY_AB3,$/;"	e	enum:__anon20
_NL_ADDRESS_COUNTRY_CAR	langinfo.h	/^  _NL_ADDRESS_COUNTRY_CAR,$/;"	e	enum:__anon20
_NL_ADDRESS_COUNTRY_ISBN	langinfo.h	/^  _NL_ADDRESS_COUNTRY_ISBN,$/;"	e	enum:__anon20
_NL_ADDRESS_COUNTRY_NAME	langinfo.h	/^  _NL_ADDRESS_COUNTRY_NAME,$/;"	e	enum:__anon20
_NL_ADDRESS_COUNTRY_NUM	langinfo.h	/^  _NL_ADDRESS_COUNTRY_NUM,$/;"	e	enum:__anon20
_NL_ADDRESS_COUNTRY_POST	langinfo.h	/^  _NL_ADDRESS_COUNTRY_POST,$/;"	e	enum:__anon20
_NL_ADDRESS_LANG_AB	langinfo.h	/^  _NL_ADDRESS_LANG_AB,$/;"	e	enum:__anon20
_NL_ADDRESS_LANG_LIB	langinfo.h	/^  _NL_ADDRESS_LANG_LIB,$/;"	e	enum:__anon20
_NL_ADDRESS_LANG_NAME	langinfo.h	/^  _NL_ADDRESS_LANG_NAME,$/;"	e	enum:__anon20
_NL_ADDRESS_LANG_TERM	langinfo.h	/^  _NL_ADDRESS_LANG_TERM,$/;"	e	enum:__anon20
_NL_ADDRESS_POSTAL_FMT	langinfo.h	/^  _NL_ADDRESS_POSTAL_FMT = _NL_ITEM (__LC_ADDRESS, 0),$/;"	e	enum:__anon20
_NL_COLLATE_CODESET	langinfo.h	/^  _NL_COLLATE_CODESET,$/;"	e	enum:__anon20
_NL_COLLATE_COLLSEQMB	langinfo.h	/^  _NL_COLLATE_COLLSEQMB,$/;"	e	enum:__anon20
_NL_COLLATE_COLLSEQWC	langinfo.h	/^  _NL_COLLATE_COLLSEQWC,$/;"	e	enum:__anon20
_NL_COLLATE_EXTRAMB	langinfo.h	/^  _NL_COLLATE_EXTRAMB,$/;"	e	enum:__anon20
_NL_COLLATE_EXTRAWC	langinfo.h	/^  _NL_COLLATE_EXTRAWC,$/;"	e	enum:__anon20
_NL_COLLATE_GAP1	langinfo.h	/^  _NL_COLLATE_GAP1,$/;"	e	enum:__anon20
_NL_COLLATE_GAP2	langinfo.h	/^  _NL_COLLATE_GAP2,$/;"	e	enum:__anon20
_NL_COLLATE_GAP3	langinfo.h	/^  _NL_COLLATE_GAP3,$/;"	e	enum:__anon20
_NL_COLLATE_INDIRECTMB	langinfo.h	/^  _NL_COLLATE_INDIRECTMB,$/;"	e	enum:__anon20
_NL_COLLATE_INDIRECTWC	langinfo.h	/^  _NL_COLLATE_INDIRECTWC,$/;"	e	enum:__anon20
_NL_COLLATE_NRULES	langinfo.h	/^  _NL_COLLATE_NRULES = _NL_ITEM (__LC_COLLATE, 0),$/;"	e	enum:__anon20
_NL_COLLATE_RULESETS	langinfo.h	/^  _NL_COLLATE_RULESETS,$/;"	e	enum:__anon20
_NL_COLLATE_SYMB_EXTRAMB	langinfo.h	/^  _NL_COLLATE_SYMB_EXTRAMB,$/;"	e	enum:__anon20
_NL_COLLATE_SYMB_HASH_SIZEMB	langinfo.h	/^  _NL_COLLATE_SYMB_HASH_SIZEMB,$/;"	e	enum:__anon20
_NL_COLLATE_SYMB_TABLEMB	langinfo.h	/^  _NL_COLLATE_SYMB_TABLEMB,$/;"	e	enum:__anon20
_NL_COLLATE_TABLEMB	langinfo.h	/^  _NL_COLLATE_TABLEMB,$/;"	e	enum:__anon20
_NL_COLLATE_TABLEWC	langinfo.h	/^  _NL_COLLATE_TABLEWC,$/;"	e	enum:__anon20
_NL_COLLATE_WEIGHTMB	langinfo.h	/^  _NL_COLLATE_WEIGHTMB,$/;"	e	enum:__anon20
_NL_COLLATE_WEIGHTWC	langinfo.h	/^  _NL_COLLATE_WEIGHTWC,$/;"	e	enum:__anon20
_NL_CTYPE_CLASS	langinfo.h	/^  _NL_CTYPE_CLASS = _NL_ITEM (__LC_CTYPE, 0),$/;"	e	enum:__anon20
_NL_CTYPE_CLASS32	langinfo.h	/^  _NL_CTYPE_CLASS32,$/;"	e	enum:__anon20
_NL_CTYPE_CLASS_NAMES	langinfo.h	/^  _NL_CTYPE_CLASS_NAMES,$/;"	e	enum:__anon20
_NL_CTYPE_CLASS_OFFSET	langinfo.h	/^  _NL_CTYPE_CLASS_OFFSET,$/;"	e	enum:__anon20
_NL_CTYPE_CODESET_NAME	langinfo.h	/^  _NL_CTYPE_CODESET_NAME,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_1	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_1,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_10	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_10,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_11	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_11,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_12	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_12,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_13	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_13,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_14	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_14,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_2	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_2,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_3	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_3,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_4	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_4,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_5	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_5,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_6	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_6,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_7	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_7,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_8	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_8,$/;"	e	enum:__anon20
_NL_CTYPE_EXTRA_MAP_9	langinfo.h	/^  _NL_CTYPE_EXTRA_MAP_9,$/;"	e	enum:__anon20
_NL_CTYPE_GAP1	langinfo.h	/^  _NL_CTYPE_GAP1,$/;"	e	enum:__anon20
_NL_CTYPE_GAP2	langinfo.h	/^  _NL_CTYPE_GAP2,$/;"	e	enum:__anon20
_NL_CTYPE_GAP3	langinfo.h	/^  _NL_CTYPE_GAP3,$/;"	e	enum:__anon20
_NL_CTYPE_GAP4	langinfo.h	/^  _NL_CTYPE_GAP4,$/;"	e	enum:__anon20
_NL_CTYPE_GAP5	langinfo.h	/^  _NL_CTYPE_GAP5,$/;"	e	enum:__anon20
_NL_CTYPE_GAP6	langinfo.h	/^  _NL_CTYPE_GAP6,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS0_MB	langinfo.h	/^  _NL_CTYPE_INDIGITS0_MB,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS0_WC	langinfo.h	/^  _NL_CTYPE_INDIGITS0_WC,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS1_MB	langinfo.h	/^  _NL_CTYPE_INDIGITS1_MB,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS1_WC	langinfo.h	/^  _NL_CTYPE_INDIGITS1_WC,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS2_MB	langinfo.h	/^  _NL_CTYPE_INDIGITS2_MB,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS2_WC	langinfo.h	/^  _NL_CTYPE_INDIGITS2_WC,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS3_MB	langinfo.h	/^  _NL_CTYPE_INDIGITS3_MB,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS3_WC	langinfo.h	/^  _NL_CTYPE_INDIGITS3_WC,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS4_MB	langinfo.h	/^  _NL_CTYPE_INDIGITS4_MB,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS4_WC	langinfo.h	/^  _NL_CTYPE_INDIGITS4_WC,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS5_MB	langinfo.h	/^  _NL_CTYPE_INDIGITS5_MB,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS5_WC	langinfo.h	/^  _NL_CTYPE_INDIGITS5_WC,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS6_MB	langinfo.h	/^  _NL_CTYPE_INDIGITS6_MB,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS6_WC	langinfo.h	/^  _NL_CTYPE_INDIGITS6_WC,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS7_MB	langinfo.h	/^  _NL_CTYPE_INDIGITS7_MB,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS7_WC	langinfo.h	/^  _NL_CTYPE_INDIGITS7_WC,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS8_MB	langinfo.h	/^  _NL_CTYPE_INDIGITS8_MB,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS8_WC	langinfo.h	/^  _NL_CTYPE_INDIGITS8_WC,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS9_MB	langinfo.h	/^  _NL_CTYPE_INDIGITS9_MB,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS9_WC	langinfo.h	/^  _NL_CTYPE_INDIGITS9_WC,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS_MB_LEN	langinfo.h	/^  _NL_CTYPE_INDIGITS_MB_LEN,$/;"	e	enum:__anon20
_NL_CTYPE_INDIGITS_WC_LEN	langinfo.h	/^  _NL_CTYPE_INDIGITS_WC_LEN,$/;"	e	enum:__anon20
_NL_CTYPE_MAP_NAMES	langinfo.h	/^  _NL_CTYPE_MAP_NAMES,$/;"	e	enum:__anon20
_NL_CTYPE_MAP_OFFSET	langinfo.h	/^  _NL_CTYPE_MAP_OFFSET,$/;"	e	enum:__anon20
_NL_CTYPE_MAP_TO_NONASCII	langinfo.h	/^  _NL_CTYPE_MAP_TO_NONASCII,$/;"	e	enum:__anon20
_NL_CTYPE_MB_CUR_MAX	langinfo.h	/^  _NL_CTYPE_MB_CUR_MAX,$/;"	e	enum:__anon20
_NL_CTYPE_NONASCII_CASE	langinfo.h	/^  _NL_CTYPE_NONASCII_CASE,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT0_MB	langinfo.h	/^  _NL_CTYPE_OUTDIGIT0_MB,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT0_WC	langinfo.h	/^  _NL_CTYPE_OUTDIGIT0_WC,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT1_MB	langinfo.h	/^  _NL_CTYPE_OUTDIGIT1_MB,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT1_WC	langinfo.h	/^  _NL_CTYPE_OUTDIGIT1_WC,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT2_MB	langinfo.h	/^  _NL_CTYPE_OUTDIGIT2_MB,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT2_WC	langinfo.h	/^  _NL_CTYPE_OUTDIGIT2_WC,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT3_MB	langinfo.h	/^  _NL_CTYPE_OUTDIGIT3_MB,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT3_WC	langinfo.h	/^  _NL_CTYPE_OUTDIGIT3_WC,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT4_MB	langinfo.h	/^  _NL_CTYPE_OUTDIGIT4_MB,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT4_WC	langinfo.h	/^  _NL_CTYPE_OUTDIGIT4_WC,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT5_MB	langinfo.h	/^  _NL_CTYPE_OUTDIGIT5_MB,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT5_WC	langinfo.h	/^  _NL_CTYPE_OUTDIGIT5_WC,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT6_MB	langinfo.h	/^  _NL_CTYPE_OUTDIGIT6_MB,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT6_WC	langinfo.h	/^  _NL_CTYPE_OUTDIGIT6_WC,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT7_MB	langinfo.h	/^  _NL_CTYPE_OUTDIGIT7_MB,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT7_WC	langinfo.h	/^  _NL_CTYPE_OUTDIGIT7_WC,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT8_MB	langinfo.h	/^  _NL_CTYPE_OUTDIGIT8_MB,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT8_WC	langinfo.h	/^  _NL_CTYPE_OUTDIGIT8_WC,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT9_MB	langinfo.h	/^  _NL_CTYPE_OUTDIGIT9_MB,$/;"	e	enum:__anon20
_NL_CTYPE_OUTDIGIT9_WC	langinfo.h	/^  _NL_CTYPE_OUTDIGIT9_WC,$/;"	e	enum:__anon20
_NL_CTYPE_TOLOWER	langinfo.h	/^  _NL_CTYPE_TOLOWER,$/;"	e	enum:__anon20
_NL_CTYPE_TOLOWER32	langinfo.h	/^  _NL_CTYPE_TOLOWER32,$/;"	e	enum:__anon20
_NL_CTYPE_TOUPPER	langinfo.h	/^  _NL_CTYPE_TOUPPER,$/;"	e	enum:__anon20
_NL_CTYPE_TOUPPER32	langinfo.h	/^  _NL_CTYPE_TOUPPER32,$/;"	e	enum:__anon20
_NL_CTYPE_TRANSLIT_DEFAULT_MISSING	langinfo.h	/^  _NL_CTYPE_TRANSLIT_DEFAULT_MISSING,$/;"	e	enum:__anon20
_NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN	langinfo.h	/^  _NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN,$/;"	e	enum:__anon20
_NL_CTYPE_TRANSLIT_FROM_IDX	langinfo.h	/^  _NL_CTYPE_TRANSLIT_FROM_IDX,$/;"	e	enum:__anon20
_NL_CTYPE_TRANSLIT_FROM_TBL	langinfo.h	/^  _NL_CTYPE_TRANSLIT_FROM_TBL,$/;"	e	enum:__anon20
_NL_CTYPE_TRANSLIT_IGNORE	langinfo.h	/^  _NL_CTYPE_TRANSLIT_IGNORE,$/;"	e	enum:__anon20
_NL_CTYPE_TRANSLIT_IGNORE_LEN	langinfo.h	/^  _NL_CTYPE_TRANSLIT_IGNORE_LEN,$/;"	e	enum:__anon20
_NL_CTYPE_TRANSLIT_TAB_SIZE	langinfo.h	/^  _NL_CTYPE_TRANSLIT_TAB_SIZE,$/;"	e	enum:__anon20
_NL_CTYPE_TRANSLIT_TO_IDX	langinfo.h	/^  _NL_CTYPE_TRANSLIT_TO_IDX,$/;"	e	enum:__anon20
_NL_CTYPE_TRANSLIT_TO_TBL	langinfo.h	/^  _NL_CTYPE_TRANSLIT_TO_TBL,$/;"	e	enum:__anon20
_NL_CTYPE_WIDTH	langinfo.h	/^  _NL_CTYPE_WIDTH,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_ABBREVIATION	langinfo.h	/^  _NL_IDENTIFICATION_ABBREVIATION,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_ADDRESS	langinfo.h	/^  _NL_IDENTIFICATION_ADDRESS,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_APPLICATION	langinfo.h	/^  _NL_IDENTIFICATION_APPLICATION,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_AUDIENCE	langinfo.h	/^  _NL_IDENTIFICATION_AUDIENCE,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_CATEGORY	langinfo.h	/^  _NL_IDENTIFICATION_CATEGORY,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_CODESET	langinfo.h	/^  _NL_IDENTIFICATION_CODESET,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_CONTACT	langinfo.h	/^  _NL_IDENTIFICATION_CONTACT,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_DATE	langinfo.h	/^  _NL_IDENTIFICATION_DATE,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_EMAIL	langinfo.h	/^  _NL_IDENTIFICATION_EMAIL,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_FAX	langinfo.h	/^  _NL_IDENTIFICATION_FAX,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_LANGUAGE	langinfo.h	/^  _NL_IDENTIFICATION_LANGUAGE,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_REVISION	langinfo.h	/^  _NL_IDENTIFICATION_REVISION,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_SOURCE	langinfo.h	/^  _NL_IDENTIFICATION_SOURCE,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_TEL	langinfo.h	/^  _NL_IDENTIFICATION_TEL,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_TERRITORY	langinfo.h	/^  _NL_IDENTIFICATION_TERRITORY,$/;"	e	enum:__anon20
_NL_IDENTIFICATION_TITLE	langinfo.h	/^  _NL_IDENTIFICATION_TITLE = _NL_ITEM (__LC_IDENTIFICATION, 0),$/;"	e	enum:__anon20
_NL_ITEM	langinfo.h	35;"	d
_NL_ITEM_CATEGORY	langinfo.h	38;"	d
_NL_ITEM_INDEX	langinfo.h	39;"	d
_NL_LOCALE_NAME	langinfo.h	571;"	d
_NL_MEASUREMENT_CODESET	langinfo.h	/^  _NL_MEASUREMENT_CODESET,$/;"	e	enum:__anon20
_NL_MEASUREMENT_MEASUREMENT	langinfo.h	/^  _NL_MEASUREMENT_MEASUREMENT = _NL_ITEM (__LC_MEASUREMENT, 0),$/;"	e	enum:__anon20
_NL_MESSAGES_CODESET	langinfo.h	/^  _NL_MESSAGES_CODESET,$/;"	e	enum:__anon20
_NL_MONETARY_CODESET	langinfo.h	/^  _NL_MONETARY_CODESET,$/;"	e	enum:__anon20
_NL_MONETARY_CONVERSION_RATE	langinfo.h	/^  _NL_MONETARY_CONVERSION_RATE,$/;"	e	enum:__anon20
_NL_MONETARY_CRNCYSTR	langinfo.h	/^  _NL_MONETARY_CRNCYSTR,$/;"	e	enum:__anon20
_NL_MONETARY_DECIMAL_POINT_WC	langinfo.h	/^  _NL_MONETARY_DECIMAL_POINT_WC,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_CURRENCY_SYMBOL	langinfo.h	/^  _NL_MONETARY_DUO_CURRENCY_SYMBOL,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_FRAC_DIGITS	langinfo.h	/^  _NL_MONETARY_DUO_FRAC_DIGITS,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_INT_CURR_SYMBOL	langinfo.h	/^  _NL_MONETARY_DUO_INT_CURR_SYMBOL,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_INT_FRAC_DIGITS	langinfo.h	/^  _NL_MONETARY_DUO_INT_FRAC_DIGITS,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_INT_N_CS_PRECEDES	langinfo.h	/^  _NL_MONETARY_DUO_INT_N_CS_PRECEDES,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_INT_N_SEP_BY_SPACE	langinfo.h	/^  _NL_MONETARY_DUO_INT_N_SEP_BY_SPACE,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_INT_N_SIGN_POSN	langinfo.h	/^  _NL_MONETARY_DUO_INT_N_SIGN_POSN,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_INT_P_CS_PRECEDES	langinfo.h	/^  _NL_MONETARY_DUO_INT_P_CS_PRECEDES,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_INT_P_SEP_BY_SPACE	langinfo.h	/^  _NL_MONETARY_DUO_INT_P_SEP_BY_SPACE,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_INT_P_SIGN_POSN	langinfo.h	/^  _NL_MONETARY_DUO_INT_P_SIGN_POSN,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_N_CS_PRECEDES	langinfo.h	/^  _NL_MONETARY_DUO_N_CS_PRECEDES,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_N_SEP_BY_SPACE	langinfo.h	/^  _NL_MONETARY_DUO_N_SEP_BY_SPACE,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_N_SIGN_POSN	langinfo.h	/^  _NL_MONETARY_DUO_N_SIGN_POSN,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_P_CS_PRECEDES	langinfo.h	/^  _NL_MONETARY_DUO_P_CS_PRECEDES,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_P_SEP_BY_SPACE	langinfo.h	/^  _NL_MONETARY_DUO_P_SEP_BY_SPACE,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_P_SIGN_POSN	langinfo.h	/^  _NL_MONETARY_DUO_P_SIGN_POSN,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_VALID_FROM	langinfo.h	/^  _NL_MONETARY_DUO_VALID_FROM,$/;"	e	enum:__anon20
_NL_MONETARY_DUO_VALID_TO	langinfo.h	/^  _NL_MONETARY_DUO_VALID_TO,$/;"	e	enum:__anon20
_NL_MONETARY_THOUSANDS_SEP_WC	langinfo.h	/^  _NL_MONETARY_THOUSANDS_SEP_WC,$/;"	e	enum:__anon20
_NL_MONETARY_UNO_VALID_FROM	langinfo.h	/^  _NL_MONETARY_UNO_VALID_FROM,$/;"	e	enum:__anon20
_NL_MONETARY_UNO_VALID_TO	langinfo.h	/^  _NL_MONETARY_UNO_VALID_TO,$/;"	e	enum:__anon20
_NL_NAME_CODESET	langinfo.h	/^  _NL_NAME_CODESET,$/;"	e	enum:__anon20
_NL_NAME_NAME_FMT	langinfo.h	/^  _NL_NAME_NAME_FMT = _NL_ITEM (__LC_NAME, 0),$/;"	e	enum:__anon20
_NL_NAME_NAME_GEN	langinfo.h	/^  _NL_NAME_NAME_GEN,$/;"	e	enum:__anon20
_NL_NAME_NAME_MISS	langinfo.h	/^  _NL_NAME_NAME_MISS,$/;"	e	enum:__anon20
_NL_NAME_NAME_MR	langinfo.h	/^  _NL_NAME_NAME_MR,$/;"	e	enum:__anon20
_NL_NAME_NAME_MRS	langinfo.h	/^  _NL_NAME_NAME_MRS,$/;"	e	enum:__anon20
_NL_NAME_NAME_MS	langinfo.h	/^  _NL_NAME_NAME_MS,$/;"	e	enum:__anon20
_NL_NUM	langinfo.h	/^  _NL_NUM$/;"	e	enum:__anon20
_NL_NUMERIC_CODESET	langinfo.h	/^  _NL_NUMERIC_CODESET,$/;"	e	enum:__anon20
_NL_NUMERIC_DECIMAL_POINT_WC	langinfo.h	/^  _NL_NUMERIC_DECIMAL_POINT_WC,$/;"	e	enum:__anon20
_NL_NUMERIC_THOUSANDS_SEP_WC	langinfo.h	/^  _NL_NUMERIC_THOUSANDS_SEP_WC,$/;"	e	enum:__anon20
_NL_NUM_LC_ADDRESS	langinfo.h	/^  _NL_NUM_LC_ADDRESS,$/;"	e	enum:__anon20
_NL_NUM_LC_COLLATE	langinfo.h	/^  _NL_NUM_LC_COLLATE,$/;"	e	enum:__anon20
_NL_NUM_LC_CTYPE	langinfo.h	/^  _NL_NUM_LC_CTYPE,$/;"	e	enum:__anon20
_NL_NUM_LC_IDENTIFICATION	langinfo.h	/^  _NL_NUM_LC_IDENTIFICATION,$/;"	e	enum:__anon20
_NL_NUM_LC_MEASUREMENT	langinfo.h	/^  _NL_NUM_LC_MEASUREMENT,$/;"	e	enum:__anon20
_NL_NUM_LC_MESSAGES	langinfo.h	/^  _NL_NUM_LC_MESSAGES,$/;"	e	enum:__anon20
_NL_NUM_LC_MONETARY	langinfo.h	/^  _NL_NUM_LC_MONETARY,$/;"	e	enum:__anon20
_NL_NUM_LC_NAME	langinfo.h	/^  _NL_NUM_LC_NAME,$/;"	e	enum:__anon20
_NL_NUM_LC_NUMERIC	langinfo.h	/^  _NL_NUM_LC_NUMERIC,$/;"	e	enum:__anon20
_NL_NUM_LC_PAPER	langinfo.h	/^  _NL_NUM_LC_PAPER,$/;"	e	enum:__anon20
_NL_NUM_LC_TELEPHONE	langinfo.h	/^  _NL_NUM_LC_TELEPHONE,$/;"	e	enum:__anon20
_NL_NUM_LC_TIME	langinfo.h	/^  _NL_NUM_LC_TIME,	\/* Number of indices in LC_TIME category.  *\/$/;"	e	enum:__anon20
_NL_PAPER_CODESET	langinfo.h	/^  _NL_PAPER_CODESET,$/;"	e	enum:__anon20
_NL_PAPER_HEIGHT	langinfo.h	/^  _NL_PAPER_HEIGHT = _NL_ITEM (__LC_PAPER, 0),$/;"	e	enum:__anon20
_NL_PAPER_WIDTH	langinfo.h	/^  _NL_PAPER_WIDTH,$/;"	e	enum:__anon20
_NL_TELEPHONE_CODESET	langinfo.h	/^  _NL_TELEPHONE_CODESET,$/;"	e	enum:__anon20
_NL_TELEPHONE_INT_PREFIX	langinfo.h	/^  _NL_TELEPHONE_INT_PREFIX,$/;"	e	enum:__anon20
_NL_TELEPHONE_INT_SELECT	langinfo.h	/^  _NL_TELEPHONE_INT_SELECT,$/;"	e	enum:__anon20
_NL_TELEPHONE_TEL_DOM_FMT	langinfo.h	/^  _NL_TELEPHONE_TEL_DOM_FMT,$/;"	e	enum:__anon20
_NL_TELEPHONE_TEL_INT_FMT	langinfo.h	/^  _NL_TELEPHONE_TEL_INT_FMT = _NL_ITEM (__LC_TELEPHONE, 0),$/;"	e	enum:__anon20
_NL_TIME_CAL_DIRECTION	langinfo.h	/^  _NL_TIME_CAL_DIRECTION,$/;"	e	enum:__anon20
_NL_TIME_CODESET	langinfo.h	/^  _NL_TIME_CODESET,$/;"	e	enum:__anon20
_NL_TIME_ERA_ENTRIES	langinfo.h	/^  _NL_TIME_ERA_ENTRIES,		\/* Structure with era entries in usable form.*\/$/;"	e	enum:__anon20
_NL_TIME_ERA_NUM_ENTRIES	langinfo.h	/^  _NL_TIME_ERA_NUM_ENTRIES,	\/* Number entries in the era arrays.  *\/$/;"	e	enum:__anon20
_NL_TIME_FIRST_WEEKDAY	langinfo.h	/^  _NL_TIME_FIRST_WEEKDAY,$/;"	e	enum:__anon20
_NL_TIME_FIRST_WORKDAY	langinfo.h	/^  _NL_TIME_FIRST_WORKDAY,$/;"	e	enum:__anon20
_NL_TIME_TIMEZONE	langinfo.h	/^  _NL_TIME_TIMEZONE,$/;"	e	enum:__anon20
_NL_TIME_WEEK_1STDAY	langinfo.h	/^  _NL_TIME_WEEK_1STDAY,$/;"	e	enum:__anon20
_NL_TIME_WEEK_1STWEEK	langinfo.h	/^  _NL_TIME_WEEK_1STWEEK,$/;"	e	enum:__anon20
_NL_TIME_WEEK_NDAYS	langinfo.h	/^  _NL_TIME_WEEK_NDAYS,$/;"	e	enum:__anon20
_NL_TYPES_H	nl_types.h	20;"	d
_NL_WABDAY_1	langinfo.h	/^  _NL_WABDAY_1,		\/* Sun *\/$/;"	e	enum:__anon20
_NL_WABDAY_2	langinfo.h	/^  _NL_WABDAY_2,$/;"	e	enum:__anon20
_NL_WABDAY_3	langinfo.h	/^  _NL_WABDAY_3,$/;"	e	enum:__anon20
_NL_WABDAY_4	langinfo.h	/^  _NL_WABDAY_4,$/;"	e	enum:__anon20
_NL_WABDAY_5	langinfo.h	/^  _NL_WABDAY_5,$/;"	e	enum:__anon20
_NL_WABDAY_6	langinfo.h	/^  _NL_WABDAY_6,$/;"	e	enum:__anon20
_NL_WABDAY_7	langinfo.h	/^  _NL_WABDAY_7,$/;"	e	enum:__anon20
_NL_WABMON_1	langinfo.h	/^  _NL_WABMON_1,		\/* Jan *\/$/;"	e	enum:__anon20
_NL_WABMON_10	langinfo.h	/^  _NL_WABMON_10,$/;"	e	enum:__anon20
_NL_WABMON_11	langinfo.h	/^  _NL_WABMON_11,$/;"	e	enum:__anon20
_NL_WABMON_12	langinfo.h	/^  _NL_WABMON_12,$/;"	e	enum:__anon20
_NL_WABMON_2	langinfo.h	/^  _NL_WABMON_2,$/;"	e	enum:__anon20
_NL_WABMON_3	langinfo.h	/^  _NL_WABMON_3,$/;"	e	enum:__anon20
_NL_WABMON_4	langinfo.h	/^  _NL_WABMON_4,$/;"	e	enum:__anon20
_NL_WABMON_5	langinfo.h	/^  _NL_WABMON_5,$/;"	e	enum:__anon20
_NL_WABMON_6	langinfo.h	/^  _NL_WABMON_6,$/;"	e	enum:__anon20
_NL_WABMON_7	langinfo.h	/^  _NL_WABMON_7,$/;"	e	enum:__anon20
_NL_WABMON_8	langinfo.h	/^  _NL_WABMON_8,$/;"	e	enum:__anon20
_NL_WABMON_9	langinfo.h	/^  _NL_WABMON_9,$/;"	e	enum:__anon20
_NL_WALT_DIGITS	langinfo.h	/^  _NL_WALT_DIGITS,	\/* Alternate symbols for digits.  *\/$/;"	e	enum:__anon20
_NL_WAM_STR	langinfo.h	/^  _NL_WAM_STR,		\/* Ante meridiem string.  *\/$/;"	e	enum:__anon20
_NL_WDAY_1	langinfo.h	/^  _NL_WDAY_1,		\/* Sunday *\/$/;"	e	enum:__anon20
_NL_WDAY_2	langinfo.h	/^  _NL_WDAY_2,		\/* Monday *\/$/;"	e	enum:__anon20
_NL_WDAY_3	langinfo.h	/^  _NL_WDAY_3,		\/* Tuesday *\/$/;"	e	enum:__anon20
_NL_WDAY_4	langinfo.h	/^  _NL_WDAY_4,		\/* Wednesday *\/$/;"	e	enum:__anon20
_NL_WDAY_5	langinfo.h	/^  _NL_WDAY_5,		\/* Thursday *\/$/;"	e	enum:__anon20
_NL_WDAY_6	langinfo.h	/^  _NL_WDAY_6,		\/* Friday *\/$/;"	e	enum:__anon20
_NL_WDAY_7	langinfo.h	/^  _NL_WDAY_7,		\/* Saturday *\/$/;"	e	enum:__anon20
_NL_WD_FMT	langinfo.h	/^  _NL_WD_FMT,		\/* Date format for strftime.  *\/$/;"	e	enum:__anon20
_NL_WD_T_FMT	langinfo.h	/^  _NL_WD_T_FMT,		\/* Date and time format for strftime.  *\/$/;"	e	enum:__anon20
_NL_WERA_D_FMT	langinfo.h	/^  _NL_WERA_D_FMT,	\/* Date in alternate era format.  *\/$/;"	e	enum:__anon20
_NL_WERA_D_T_FMT	langinfo.h	/^  _NL_WERA_D_T_FMT,	\/* Date and time in alternate era format.  *\/$/;"	e	enum:__anon20
_NL_WERA_T_FMT	langinfo.h	/^  _NL_WERA_T_FMT,	\/* Time in alternate era format.  *\/$/;"	e	enum:__anon20
_NL_WERA_YEAR	langinfo.h	/^  _NL_WERA_YEAR,	\/* Year in alternate era format.  *\/$/;"	e	enum:__anon20
_NL_WMON_1	langinfo.h	/^  _NL_WMON_1,		\/* January *\/$/;"	e	enum:__anon20
_NL_WMON_10	langinfo.h	/^  _NL_WMON_10,$/;"	e	enum:__anon20
_NL_WMON_11	langinfo.h	/^  _NL_WMON_11,$/;"	e	enum:__anon20
_NL_WMON_12	langinfo.h	/^  _NL_WMON_12,$/;"	e	enum:__anon20
_NL_WMON_2	langinfo.h	/^  _NL_WMON_2,$/;"	e	enum:__anon20
_NL_WMON_3	langinfo.h	/^  _NL_WMON_3,$/;"	e	enum:__anon20
_NL_WMON_4	langinfo.h	/^  _NL_WMON_4,$/;"	e	enum:__anon20
_NL_WMON_5	langinfo.h	/^  _NL_WMON_5,$/;"	e	enum:__anon20
_NL_WMON_6	langinfo.h	/^  _NL_WMON_6,$/;"	e	enum:__anon20
_NL_WMON_7	langinfo.h	/^  _NL_WMON_7,$/;"	e	enum:__anon20
_NL_WMON_8	langinfo.h	/^  _NL_WMON_8,$/;"	e	enum:__anon20
_NL_WMON_9	langinfo.h	/^  _NL_WMON_9,$/;"	e	enum:__anon20
_NL_WPM_STR	langinfo.h	/^  _NL_WPM_STR,		\/* Post meridiem string.  *\/$/;"	e	enum:__anon20
_NL_WT_FMT	langinfo.h	/^  _NL_WT_FMT,		\/* Time format for strftime.  *\/$/;"	e	enum:__anon20
_NL_WT_FMT_AMPM	langinfo.h	/^  _NL_WT_FMT_AMPM,	\/* 12-hour time format for strftime.  *\/$/;"	e	enum:__anon20
_NL_W_DATE_FMT	langinfo.h	/^  _NL_W_DATE_FMT,$/;"	e	enum:__anon20
_NSS_H	nss.h	23;"	d
_N_HDROFF	a.out.h	65;"	d
_N_SEGMENT_ROUND	a.out.h	81;"	d
_N_TXTENDADDR	a.out.h	82;"	d
_OBSTACK_H	obstack.h	107;"	d
_OLD_STDIO_MAGIC	libio.h	121;"	d
_PARAMS	libio.h	76;"	d
_PATHS_H_	paths.h	33;"	d
_PATH_BSHELL	paths.h	41;"	d
_PATH_CONSOLE	paths.h	42;"	d
_PATH_CSHELL	paths.h	43;"	d
_PATH_DEFPATH	paths.h	36;"	d
_PATH_DEV	paths.h	69;"	d
_PATH_DEVDB	paths.h	44;"	d
_PATH_DEVNULL	paths.h	45;"	d
_PATH_DRUM	paths.h	46;"	d
_PATH_FSTAB	fstab.h	48;"	d
_PATH_GSHADOW	paths.h	47;"	d
_PATH_HEQUIV	netdb.h	46;"	d
_PATH_HOSTS	netdb.h	47;"	d
_PATH_KLOG	paths.h	48;"	d
_PATH_KMEM	paths.h	49;"	d
_PATH_LASTLOG	paths.h	50;"	d
_PATH_MAILDIR	paths.h	51;"	d
_PATH_MAN	paths.h	52;"	d
_PATH_MEM	paths.h	53;"	d
_PATH_MNTTAB	paths.h	54;"	d
_PATH_MOUNTED	paths.h	55;"	d
_PATH_NETWORKS	netdb.h	48;"	d
_PATH_NOLOGIN	paths.h	56;"	d
_PATH_NSSWITCH_CONF	netdb.h	49;"	d
_PATH_PRESERVE	paths.h	57;"	d
_PATH_PROTOCOLS	netdb.h	50;"	d
_PATH_RESCONF	resolv.h	173;"	d
_PATH_RWHODIR	paths.h	58;"	d
_PATH_SENDMAIL	paths.h	59;"	d
_PATH_SERVICES	netdb.h	51;"	d
_PATH_SHADOW	paths.h	60;"	d
_PATH_SHELLS	paths.h	61;"	d
_PATH_STDPATH	paths.h	38;"	d
_PATH_TMP	paths.h	70;"	d
_PATH_TTY	paths.h	62;"	d
_PATH_TTYS	ttyent.h	37;"	d
_PATH_UNIX	paths.h	63;"	d
_PATH_UTMP	paths.h	64;"	d
_PATH_VARDB	paths.h	71;"	d
_PATH_VARRUN	paths.h	72;"	d
_PATH_VARTMP	paths.h	73;"	d
_PATH_VI	paths.h	65;"	d
_PATH_WTMP	paths.h	66;"	d
_POSIX2_C_BIND	unistd.h	72;"	d
_POSIX2_C_DEV	unistd.h	76;"	d
_POSIX2_LOCALEDEF	unistd.h	84;"	d
_POSIX2_SW_DEV	unistd.h	80;"	d
_POSIX2_VERSION	unistd.h	68;"	d
_POSIX_	math.h	/^  _POSIX_,$/;"	e	enum:__anon57
_POSIX_C_SOURCE	features.h	162;"	d
_POSIX_C_SOURCE	features.h	163;"	d
_POSIX_C_SOURCE	features.h	208;"	d
_POSIX_C_SOURCE	features.h	210;"	d
_POSIX_C_SOURCE	features.h	212;"	d
_POSIX_C_SOURCE	features.h	214;"	d
_POSIX_SOURCE	features.h	160;"	d
_POSIX_SOURCE	features.h	161;"	d
_POSIX_SOURCE	features.h	206;"	d
_POSIX_VERSION	unistd.h	35;"	d
_PRINTF_H	printf.h	22;"	d
_PTHREAD_H	pthread.h	21;"	d
_PTY_H	pty.h	21;"	d
_PWD_H	pwd.h	24;"	d
_REGEXP_H	regexp.h	22;"	d
_REGEX_H	regex.h	23;"	d
_RESOLV_H_	resolv.h	60;"	d
_RE_COMP_H	re_comp.h	20;"	d
_RE_SYNTAX_POSIX_COMMON	regex.h	233;"	d
_SCHED_H	sched.h	22;"	d
_SEARCH_H	search.h	21;"	d
_SEMAPHORE_H	semaphore.h	20;"	d
_SETJMP_H	setjmp.h	24;"	d
_SGTTY_H	sgtty.h	20;"	d
_SHADOW_H	shadow.h	22;"	d
_SIGNAL_H	signal.h	26;"	d
_SPAWN_H	spawn.h	21;"	d
_STDINT_H	stdint.h	24;"	d
_STDIO_EXT_H	stdio_ext.h	24;"	d
_STDIO_H	stdio.h	27;"	d
_STDIO_USES_IOSTREAM	stdio.h	73;"	d
_STDLIB_H	stdlib.h	38;"	d
_STRINGS_H	strings.h	21;"	d
_STRING_H	string.h	25;"	d
_STROPTS_H	stropts.h	20;"	d
_SVID_	math.h	/^  _SVID_,	\/* According to System V, release 4.  *\/$/;"	e	enum:__anon57
_SVID_SOURCE	features.h	172;"	d
_SVID_SOURCE	features.h	173;"	d
_SVID_SOURCE	features.h	184;"	d
_SYSEXITS_H	sysexits.h	33;"	d
_TAR_H	tar.h	22;"	d
_TERMIOS_H	termios.h	24;"	d
_TGMATH_H	tgmath.h	25;"	d
_THREAD_DB_H	thread_db.h	21;"	d
_TIME_H	time.h	27;"	d
_TTYENT_H	ttyent.h	33;"	d
_TTYS_OFF	ttyent.h	39;"	d
_TTYS_ON	ttyent.h	40;"	d
_TTYS_SECURE	ttyent.h	41;"	d
_TTYS_WINDOW	ttyent.h	42;"	d
_TYPEBITS	values.h	30;"	d
_UCONTEXT_H	ucontext.h	22;"	d
_ULIMIT_H	ulimit.h	20;"	d
_UNISTD_H	unistd.h	24;"	d
_UTIME_H	utime.h	24;"	d
_UTMPX_H	utmpx.h	20;"	d
_UTMP_H	utmp.h	20;"	d
_VALUES_H	values.h	24;"	d
_VA_LIST_DEFINED	stdio.h	81;"	d
_WCHAR_H	wchar.h	27;"	d
_WCTYPE_H	wctype.h	30;"	d
_WINT_T	wchar.h	61;"	d
_WORDEXP_H	wordexp.h	20;"	d
_XLOCALE_H	xlocale.h	22;"	d
_XOPEN_	math.h	/^  _XOPEN_,	\/* Nowadays also Unix98.  *\/$/;"	e	enum:__anon57
_XOPEN_CRYPT	unistd.h	109;"	d
_XOPEN_ENH_I18N	unistd.h	113;"	d
_XOPEN_LEGACY	unistd.h	116;"	d
_XOPEN_SOURCE	features.h	164;"	d
_XOPEN_SOURCE	features.h	165;"	d
_XOPEN_SOURCE_EXTENDED	features.h	166;"	d
_XOPEN_SOURCE_EXTENDED	features.h	167;"	d
_XOPEN_UNIX	unistd.h	106;"	d
_XOPEN_VERSION	unistd.h	88;"	d
_XOPEN_XCU_VERSION	unistd.h	98;"	d
_XOPEN_XPG2	unistd.h	101;"	d
_XOPEN_XPG3	unistd.h	102;"	d
_XOPEN_XPG4	unistd.h	103;"	d
__ACTION_FN_T	search.h	144;"	d
__ASSERT_FUNCTION	assert.h	109;"	d
__ASSERT_VOID_CAST	assert.h	28;"	d
__ASSERT_VOID_CAST	assert.h	40;"	d
__ASSERT_VOID_CAST	assert.h	42;"	d
__A_OUT_GNU_H__	a.out.h	2;"	d
__BIG_ENDIAN	endian.h	33;"	d
__BPTR_ALIGN	obstack.h	129;"	d
__COMPAR_FN_T	search.h	54;"	d
__COMPAR_FN_T	stdlib.h	741;"	d
__CORRECT_ISO_CPP_STRINGS_H_PROTO	strings.h	34;"	d
__CORRECT_ISO_CPP_STRING_H_PROTO	string.h	38;"	d
__CORRECT_ISO_CPP_WCHAR_H_PROTO	wchar.h	76;"	d
__CURRENCY_SYMBOL	langinfo.h	/^  __CURRENCY_SYMBOL,$/;"	e	enum:__anon20
__DECIMAL_POINT	langinfo.h	/^  __DECIMAL_POINT = _NL_ITEM (__LC_NUMERIC, 0),$/;"	e	enum:__anon20
__ERA_YEAR	langinfo.h	/^  __ERA_YEAR,			\/* Year in alternate era format.  *\/$/;"	e	enum:__anon20
__FAVOR_BSD	features.h	120;"	d
__FAVOR_BSD	features.h	151;"	d
__FILE	stdio.h	/^typedef struct _IO_FILE __FILE;$/;"	t	typeref:struct:_IO_FILE
__FILE_defined	stdio.h	57;"	d
__FLEX_LEXER_H	FlexLexer.h	49;"	d
__FLOAT_WORD_ORDER	endian.h	42;"	d
__FMTMSG_H	fmtmsg.h	21;"	d
__FRAC_DIGITS	langinfo.h	/^  __FRAC_DIGITS,$/;"	e	enum:__anon20
__FT2_BUILD_UNIX_H__	ft2build.h	53;"	d
__GCONV_EMPTY_INPUT	gconv.h	/^  __GCONV_EMPTY_INPUT,$/;"	e	enum:__anon67
__GCONV_FULL_OUTPUT	gconv.h	/^  __GCONV_FULL_OUTPUT,$/;"	e	enum:__anon67
__GCONV_IGNORE_ERRORS	gconv.h	/^  __GCONV_IGNORE_ERRORS = 0x0002$/;"	e	enum:__anon68
__GCONV_ILLEGAL_DESCRIPTOR	gconv.h	/^  __GCONV_ILLEGAL_DESCRIPTOR,$/;"	e	enum:__anon67
__GCONV_ILLEGAL_INPUT	gconv.h	/^  __GCONV_ILLEGAL_INPUT,$/;"	e	enum:__anon67
__GCONV_INCOMPLETE_INPUT	gconv.h	/^  __GCONV_INCOMPLETE_INPUT,$/;"	e	enum:__anon67
__GCONV_INTERNAL_ERROR	gconv.h	/^  __GCONV_INTERNAL_ERROR$/;"	e	enum:__anon67
__GCONV_IS_LAST	gconv.h	/^  __GCONV_IS_LAST = 0x0001,$/;"	e	enum:__anon68
__GCONV_NOCONV	gconv.h	/^  __GCONV_NOCONV,$/;"	e	enum:__anon67
__GCONV_NODB	gconv.h	/^  __GCONV_NODB,$/;"	e	enum:__anon67
__GCONV_NOMEM	gconv.h	/^  __GCONV_NOMEM,$/;"	e	enum:__anon67
__GCONV_OK	gconv.h	/^  __GCONV_OK = 0,$/;"	e	enum:__anon67
__GLIBC_HAVE_LONG_LONG	features.h	350;"	d
__GLIBC_MINOR__	features.h	340;"	d
__GLIBC_PREREQ	features.h	342;"	d
__GLIBC__	features.h	339;"	d
__GLOB_FLAGS	glob.h	66;"	d
__GLOB_FLAGS	glob.h	71;"	d
__GNUC_PREREQ	features.h	140;"	d
__GNUC_PREREQ	features.h	143;"	d
__GNUC_PREREQ	getopt.h	40;"	d
__GNU_EXEC_MACROS__	a.out.h	6;"	d
__GNU_GETTEXT_SUPPORTED_REVISION	libintl.h	32;"	d
__GNU_LIBRARY__	features.h	334;"	d
__GNU_LIBRARY__	features.h	335;"	d
__GNU_STAB__	stab.h	5;"	d
__GROUPING	langinfo.h	/^  __GROUPING,$/;"	e	enum:__anon20
__HAVE_COLUMN	libio.h	302;"	d
__INT64_C	stdint.h	150;"	d
__INT64_C	stdint.h	153;"	d
__INT_CURR_SYMBOL	langinfo.h	/^  __INT_CURR_SYMBOL = _NL_ITEM (__LC_MONETARY, 0),$/;"	e	enum:__anon20
__INT_FRAC_DIGITS	langinfo.h	/^  __INT_FRAC_DIGITS,$/;"	e	enum:__anon20
__INT_N_CS_PRECEDES	langinfo.h	/^  __INT_N_CS_PRECEDES,$/;"	e	enum:__anon20
__INT_N_SEP_BY_SPACE	langinfo.h	/^  __INT_N_SEP_BY_SPACE,$/;"	e	enum:__anon20
__INT_N_SIGN_POSN	langinfo.h	/^  __INT_N_SIGN_POSN,$/;"	e	enum:__anon20
__INT_P_CS_PRECEDES	langinfo.h	/^  __INT_P_CS_PRECEDES,$/;"	e	enum:__anon20
__INT_P_SEP_BY_SPACE	langinfo.h	/^  __INT_P_SEP_BY_SPACE,$/;"	e	enum:__anon20
__INT_P_SIGN_POSN	langinfo.h	/^  __INT_P_SIGN_POSN,$/;"	e	enum:__anon20
__ISwalnum	wctype.h	/^  __ISwalnum = 11,			\/* Alphanumeric.  *\/$/;"	e	enum:__anon75
__ISwalpha	wctype.h	/^  __ISwalpha = 2,			\/* Alphabetic.  *\/$/;"	e	enum:__anon75
__ISwblank	wctype.h	/^  __ISwblank = 8,			\/* Blank (usually SPC and TAB).  *\/$/;"	e	enum:__anon75
__ISwcntrl	wctype.h	/^  __ISwcntrl = 9,			\/* Control character.  *\/$/;"	e	enum:__anon75
__ISwdigit	wctype.h	/^  __ISwdigit = 3,			\/* Numeric.  *\/$/;"	e	enum:__anon75
__ISwgraph	wctype.h	/^  __ISwgraph = 7,			\/* Graphical.  *\/$/;"	e	enum:__anon75
__ISwlower	wctype.h	/^  __ISwlower = 1,			\/* lowercase.  *\/$/;"	e	enum:__anon75
__ISwprint	wctype.h	/^  __ISwprint = 6,			\/* Printing.  *\/$/;"	e	enum:__anon75
__ISwpunct	wctype.h	/^  __ISwpunct = 10,			\/* Punctuation.  *\/$/;"	e	enum:__anon75
__ISwspace	wctype.h	/^  __ISwspace = 5,			\/* Whitespace.  *\/$/;"	e	enum:__anon75
__ISwupper	wctype.h	/^  __ISwupper = 0,			\/* UPPERCASE.  *\/$/;"	e	enum:__anon75
__ISwxdigit	wctype.h	/^  __ISwxdigit = 4,			\/* Hexadecimal numeric.  *\/$/;"	e	enum:__anon75
__KERNEL_STRICT_NAMES	features.h	121;"	d
__KERNEL_STRICT_NAMES	features.h	126;"	d
__LITTLE_ENDIAN	endian.h	32;"	d
__LONG_LONG_PAIR	endian.h	53;"	d
__LONG_LONG_PAIR	endian.h	55;"	d
__MALLOC_P	malloc.h	35;"	d
__MALLOC_P	malloc.h	42;"	d
__MALLOC_PMT	malloc.h	38;"	d
__MALLOC_PMT	malloc.h	43;"	d
__MATHCALL	complex.h	112;"	d
__MATHCALL	complex.h	57;"	d
__MATHCALL	math.h	156;"	d
__MATHCALL	math.h	54;"	d
__MATHCALLX	math.h	59;"	d
__MATHDECL	complex.h	111;"	d
__MATHDECL	complex.h	59;"	d
__MATHDECL	math.h	155;"	d
__MATHDECL	math.h	56;"	d
__MATHDECLX	math.h	61;"	d
__MATHDECL_1	complex.h	110;"	d
__MATHDECL_1	complex.h	62;"	d
__MATHDECL_1	complex.h	92;"	d
__MATHDECL_1	complex.h	93;"	d
__MATHDECL_1	math.h	124;"	d
__MATHDECL_1	math.h	128;"	d
__MATHDECL_1	math.h	154;"	d
__MATHDECL_1	math.h	64;"	d
__MATHDECL_2	math.h	125;"	d
__MATH_PRECNAME	complex.h	102;"	d
__MATH_PRECNAME	complex.h	109;"	d
__MATH_PRECNAME	complex.h	66;"	d
__MATH_PRECNAME	complex.h	69;"	d
__MATH_PRECNAME	complex.h	77;"	d
__MATH_PRECNAME	complex.h	83;"	d
__MATH_PRECNAME	math.h	139;"	d
__MATH_PRECNAME	math.h	141;"	d
__MATH_PRECNAME	math.h	149;"	d
__MATH_PRECNAME	math.h	68;"	d
__MATH_PRECNAME	math.h	75;"	d
__MATH_PRECNAME	math.h	88;"	d
__MATH_PRECNAME	math.h	98;"	d
__MON_DECIMAL_POINT	langinfo.h	/^  __MON_DECIMAL_POINT,$/;"	e	enum:__anon20
__MON_GROUPING	langinfo.h	/^  __MON_GROUPING,$/;"	e	enum:__anon20
__MON_THOUSANDS_SEP	langinfo.h	/^  __MON_THOUSANDS_SEP,$/;"	e	enum:__anon20
__NEGATIVE_SIGN	langinfo.h	/^  __NEGATIVE_SIGN,$/;"	e	enum:__anon20
__NOEXPR	langinfo.h	/^  __NOEXPR,			\/* Regex matching ``no'' input.  *\/$/;"	e	enum:__anon20
__NOSTR	langinfo.h	/^  __NOSTR,			\/* Output string for ``no''.  *\/$/;"	e	enum:__anon20
__NO_MATH_INLINES	math.h	400;"	d
__NTH	argp.h	41;"	d
__N_CS_PRECEDES	langinfo.h	/^  __N_CS_PRECEDES,$/;"	e	enum:__anon20
__N_SEP_BY_SPACE	langinfo.h	/^  __N_SEP_BY_SPACE,$/;"	e	enum:__anon20
__N_SIGN_POSN	langinfo.h	/^  __N_SIGN_POSN,$/;"	e	enum:__anon20
__P	libio.h	65;"	d
__P	libio.h	68;"	d
__PDP_ENDIAN	endian.h	34;"	d
__PMT	libio.h	66;"	d
__PMT	libio.h	69;"	d
__POSITIVE_SIGN	langinfo.h	/^  __POSITIVE_SIGN,$/;"	e	enum:__anon20
__POSIX2_THIS_VERSION	unistd.h	54;"	d
__PRI64_PREFIX	inttypes.h	50;"	d
__PRI64_PREFIX	inttypes.h	53;"	d
__PRIPTR_PREFIX	inttypes.h	51;"	d
__PRIPTR_PREFIX	inttypes.h	54;"	d
__PTR_ALIGN	obstack.h	138;"	d
__P_CS_PRECEDES	langinfo.h	/^  __P_CS_PRECEDES,$/;"	e	enum:__anon20
__P_SEP_BY_SPACE	langinfo.h	/^  __P_SEP_BY_SPACE,$/;"	e	enum:__anon20
__P_SIGN_POSN	langinfo.h	/^  __P_SIGN_POSN,$/;"	e	enum:__anon20
__REDIRECT	fcntl.h	/^extern int __REDIRECT (lockf, (int __fd, int __cmd, __off64_t __len), lockf64);$/;"	p	signature:(lockf, (int __fd, int __cmd, __off64_t __len), lockf64)
__REDIRECT	fcntl.h	/^extern int __REDIRECT (posix_fallocate, (int __fd, __off64_t __offset,$/;"	p	signature:(posix_fallocate, (int __fd, __off64_t __offset, __off64_t __len), posix_fallocate64)
__REDIRECT	wchar.h	/^extern int __REDIRECT (fwscanf, (__FILE *__restrict __stream,$/;"	p	signature:(fwscanf, (__FILE *__restrict __stream, __const wchar_t *__restrict __format, ...), __isoc99_fwscanf)
__REDIRECT	wchar.h	/^extern int __REDIRECT (vfwscanf, (__FILE *__restrict __s,$/;"	p	signature:(vfwscanf, (__FILE *__restrict __s, __const wchar_t *__restrict __format, __gnuc_va_list __arg), __isoc99_vfwscanf)
__REDIRECT	wchar.h	/^extern int __REDIRECT (vwscanf, (__const wchar_t *__restrict __format,$/;"	p	signature:(vwscanf, (__const wchar_t *__restrict __format, __gnuc_va_list __arg), __isoc99_vwscanf)
__REDIRECT	wchar.h	/^extern int __REDIRECT (wscanf, (__const wchar_t *__restrict __format, ...),$/;"	p	signature:(wscanf, (__const wchar_t *__restrict __format, ...), __isoc99_wscanf)
__REDIRECT_NTH	aio.h	/^extern int __REDIRECT_NTH (aio_cancel,$/;"	p	signature:(aio_cancel, (int __fildes, struct aiocb *__aiocbp), aio_cancel64)
__REDIRECT_NTH	fcntl.h	/^extern int __REDIRECT_NTH (posix_fadvise, (int __fd, __off64_t __offset,$/;"	p	signature:(posix_fadvise, (int __fd, __off64_t __offset, __off64_t __len, int __advise), posix_fadvise64)
__REDIRECT_NTH	getopt.h	/^  extern int __REDIRECT_NTH (getopt, (int ___argc, char *const *___argv,$/;"	p	signature:(getopt, (int ___argc, char *const *___argv, const char *__shortopts), __posix_getopt)
__REDIRECT_NTH	glob.h	/^extern int __REDIRECT_NTH (glob, (__const char *__restrict __pattern,$/;"	p	signature:(glob, (__const char *__restrict __pattern, int __flags, int (*__errfunc) (__const char *, int), glob_t *__restrict __pglob), glob64)
__REDIRECT_NTH	glob.h	/^extern void __REDIRECT_NTH (globfree, (glob_t *__pglob), globfree64);$/;"	p	signature:(globfree, (glob_t *__pglob), globfree64)
__REDIRECT_NTH	math.h	/^extern double __REDIRECT_NTH (nexttoward, (double __x, long double __y),$/;"	p	signature:(nexttoward, (double __x, long double __y), nextafter)
__REDIRECT_NTH	math.h	/^extern float __REDIRECT_NTH (nexttowardf, (float __x, long double __y),$/;"	p	signature:(nexttowardf, (float __x, long double __y), __nldbl_nexttowardf)
__REDIRECT_NTH	math.h	/^extern long double __REDIRECT_NTH (nexttowardl,$/;"	p	signature:(nexttowardl, (long double __x, long double __y), nextafter)
__REDIRECT_NTH	stdio.h	/^extern int __REDIRECT_NTH (sscanf, (__const char *__restrict __s,$/;"	p	signature:(sscanf, (__const char *__restrict __s, __const char *__restrict __format, ...), __isoc99_sscanf)
__REDIRECT_NTH	stdio.h	/^extern int __REDIRECT_NTH (vsscanf,$/;"	p	signature:(vsscanf, (__const char *__restrict __s, __const char *__restrict __format, _G_va_list __arg), __isoc99_vsscanf)
__REDIRECT_NTH	unistd.h	/^extern __off64_t __REDIRECT_NTH (lseek,$/;"	p	signature:(lseek, (int __fd, __off64_t __offset, int __whence), lseek64)
__REDIRECT_NTH	unistd.h	/^extern __pid_t __REDIRECT_NTH (getpgrp, (__pid_t __pid), __getpgid);$/;"	p	signature:(getpgrp, (__pid_t __pid), __getpgid)
__REDIRECT_NTH	unistd.h	/^extern int __REDIRECT_NTH (setpgrp, (__pid_t __pid, __pid_t __pgrp), setpgid);$/;"	p	signature:(setpgrp, (__pid_t __pid, __pid_t __pgrp), setpgid)
__REDIRECT_NTH	wchar.h	/^extern int __REDIRECT_NTH (swscanf, (__const wchar_t *__restrict __s,$/;"	p	signature:(swscanf, (__const wchar_t *__restrict __s, __const wchar_t *__restrict __format, ...), __isoc99_swscanf)
__REDIRECT_NTH	wchar.h	/^extern int __REDIRECT_NTH (vswscanf, (__const wchar_t *__restrict __s,$/;"	p	signature:(vswscanf, (__const wchar_t *__restrict __s, __const wchar_t *__restrict __format, __gnuc_va_list __arg), __isoc99_vswscanf)
__REPB_PREFIX	regex.h	/^  __RE_TRANSLATE_TYPE __REPB_PREFIX(translate);$/;"	p	struct:re_pattern_buffer	access:public	signature:(translate)
__REPB_PREFIX	regex.h	/^  char *__REPB_PREFIX(fastmap);$/;"	p	struct:re_pattern_buffer	access:public	signature:(fastmap)
__REPB_PREFIX	regex.h	/^  reg_syntax_t __REPB_PREFIX(syntax);$/;"	p	struct:re_pattern_buffer	access:public	signature:(syntax)
__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(can_be_null) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(can_be_null)
__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(fastmap_accurate) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(fastmap_accurate)
__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(newline_anchor) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(newline_anchor)
__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(no_sub) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(no_sub)
__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(not_bol) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(not_bol)
__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(not_eol) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(not_eol)
__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(regs_allocated) : 2;$/;"	p	struct:re_pattern_buffer	access:public	signature:(regs_allocated)
__REPB_PREFIX	regex.h	/^  unsigned char *__REPB_PREFIX(buffer);$/;"	p	struct:re_pattern_buffer	access:public	signature:(buffer)
__REPB_PREFIX	regex.h	/^  unsigned long int __REPB_PREFIX(allocated);$/;"	p	struct:re_pattern_buffer	access:public	signature:(allocated)
__REPB_PREFIX	regex.h	/^  unsigned long int __REPB_PREFIX(used);$/;"	p	struct:re_pattern_buffer	access:public	signature:(used)
__REPB_PREFIX	regex.h	362;"	d
__REPB_PREFIX	regex.h	364;"	d
__RES	resolv.h	164;"	d
__RE_TRANSLATE_TYPE	regex.h	355;"	d
__STDC_ISO_10646__	features.h	326;"	d
__TGMATH_BINARY_FIRST_REAL_ONLY	tgmath.h	91;"	d
__TGMATH_BINARY_REAL_IMAG	tgmath.h	211;"	d
__TGMATH_BINARY_REAL_ONLY	tgmath.h	99;"	d
__TGMATH_TERNARY_FIRST_SECOND_REAL_ONLY	tgmath.h	117;"	d
__TGMATH_TERNARY_REAL_ONLY	tgmath.h	135;"	d
__TGMATH_UNARY_IMAG	tgmath.h	176;"	d
__TGMATH_UNARY_REAL_IMAG	tgmath.h	162;"	d
__TGMATH_UNARY_REAL_IMAG_RET_REAL	tgmath.h	189;"	d
__TGMATH_UNARY_REAL_ONLY	tgmath.h	75;"	d
__TGMATH_UNARY_REAL_RET_ONLY	tgmath.h	83;"	d
__THOUSANDS_SEP	langinfo.h	/^  __THOUSANDS_SEP,$/;"	e	enum:__anon20
__THROW	aio.h	/^  __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	aio.h	/^  __THROW __nonnull ((2));$/;"	p	signature:(2)
__THROW	aio.h	/^extern __ssize_t aio_return (struct aiocb *__aiocbp) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	aio.h	/^extern int aio_error (__const struct aiocb *__aiocbp) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	aio.h	/^extern int aio_read (struct aiocb *__aiocbp) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	aio.h	/^extern int aio_read64 (struct aiocb64 *__aiocbp) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	aio.h	/^extern int aio_write (struct aiocb *__aiocbp) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	aio.h	/^extern int aio_write64 (struct aiocb64 *__aiocbp) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	aio.h	/^extern void aio_init (__const struct aioinit *__init) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	argp.h	38;"	d
__THROW	crypt.h	/^     __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	crypt.h	/^     __THROW __nonnull ((1, 2, 3));$/;"	p	signature:(1, 2, 3)
__THROW	crypt.h	/^     __THROW __nonnull ((1, 3));$/;"	p	signature:(1, 3)
__THROW	crypt.h	/^extern void encrypt (char *__libc_block, int __edflag) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	crypt.h	/^extern void setkey (__const char *__key) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	dirent.h	/^     __THROW __nonnull ((2, 4));$/;"	p	signature:(2, 4)
__THROW	dirent.h	/^extern int dirfd (DIR *__dirp) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	dirent.h	/^extern long int telldir (DIR *__dirp) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	dirent.h	/^extern void rewinddir (DIR *__dirp) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	dirent.h	/^extern void seekdir (DIR *__dirp, long int __pos) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	dlfcn.h	/^		    __const char *__restrict __name) __THROW __nonnull ((2));$/;"	p	signature:(2)
__THROW	dlfcn.h	/^		    void **__extra_info, int __flags) __THROW __nonnull ((2));$/;"	p	signature:(2)
__THROW	dlfcn.h	/^     __THROW __nonnull ((1, 3));$/;"	p	signature:(1, 3)
__THROW	dlfcn.h	/^     __THROW __nonnull ((2));$/;"	p	signature:(2)
__THROW	dlfcn.h	/^     __THROW __nonnull ((2, 3));$/;"	p	signature:(2, 3)
__THROW	dlfcn.h	/^extern int dlclose (void *__handle) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	execinfo.h	/^     __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	getopt.h	43;"	d
__THROW	getopt.h	45;"	d
__THROW	mqueue.h	/^  __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	mqueue.h	/^  __THROW __nonnull ((2));$/;"	p	signature:(2)
__THROW	mqueue.h	/^extern int mq_unlink (__const char *__name) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	nl_types.h	/^		      __const char *__string) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	nl_types.h	/^extern int catclose (nl_catd __catalog) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	printf.h	/^extern int register_printf_modifier (__const wchar_t *__str) __wur __THROW;$/;"	v
__THROW	printf.h	/^extern int register_printf_type (printf_va_arg_function __fct) __wur __THROW;$/;"	v
__THROW	pthread.h	/^					  int __pref) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	pthread.h	/^					int __pshared) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	pthread.h	/^				       __abstime) __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	pthread.h	/^				       __param) __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	pthread.h	/^				    __abstime) __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	pthread.h	/^				  size_t __stacksize) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	pthread.h	/^				__attr) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	pthread.h	/^			      __cond_attr) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	pthread.h	/^			   void *__restrict __arg) __THROW __nonnull ((1, 3));$/;"	p	signature:(1, 3)
__THROW	pthread.h	/^     __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	pthread.h	/^     __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	pthread.h	/^     __THROW __nonnull ((1, 2, 3));$/;"	p	signature:(1, 2, 3)
__THROW	pthread.h	/^     __THROW __nonnull ((1, 3));$/;"	p	signature:(1, 3)
__THROW	pthread.h	/^     __THROW __nonnull ((2));$/;"	p	signature:(2)
__THROW	pthread.h	/^     __THROW __nonnull ((2, 3));$/;"	p	signature:(2, 3)
__THROW	pthread.h	/^     __THROW __nonnull ((3));$/;"	p	signature:(3)
__THROW	pthread.h	/^  __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	pthread.h	/^extern int pthread_attr_init (pthread_attr_t *__attr) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	signal.h	/^		      __const sigset_t *__right) __THROW __nonnull ((1, 2, 3));$/;"	p	signature:(1, 2, 3)
__THROW	signal.h	/^		     __const sigset_t *__right) __THROW __nonnull ((1, 2, 3));$/;"	p	signature:(1, 2, 3)
__THROW	signal.h	/^     __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	signal.h	/^extern int sigaddset (sigset_t *__set, int __signo) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	signal.h	/^extern int sigdelset (sigset_t *__set, int __signo) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	signal.h	/^extern int sigemptyset (sigset_t *__set) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	signal.h	/^extern int sigfillset (sigset_t *__set) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	signal.h	/^extern int sigisemptyset (__const sigset_t *__set) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	signal.h	/^extern int sigpending (sigset_t *__set) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	stdlib.h	/^			size_t __statelen) __THROW __nonnull ((2));$/;"	p	signature:(2)
__THROW	stdlib.h	/^		      double *__restrict __result) __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	stdlib.h	/^		     int32_t *__restrict __result) __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	stdlib.h	/^		     struct drand48_data *__buffer) __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	stdlib.h	/^		   size_t __len) __THROW __nonnull ((3, 4, 5));$/;"	p	signature:(3, 4, 5)
__THROW	stdlib.h	/^     __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	stdlib.h	/^     __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	stdlib.h	/^     __THROW __nonnull ((2));$/;"	p	signature:(2)
__THROW	stdlib.h	/^     __THROW __nonnull ((2, 4));$/;"	p	signature:(2, 4)
__THROW	stdlib.h	/^     __THROW __nonnull ((3, 4, 5));$/;"	p	signature:(3, 4, 5)
__THROW	stdlib.h	/^extern char *setstate (char *__statebuf) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	stdlib.h	/^extern double erand48 (unsigned short int __xsubi[3]) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	stdlib.h	/^extern int at_quick_exit (void (*__func) (void)) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	stdlib.h	/^extern int atexit (void (*__func) (void)) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	stdlib.h	/^extern int putenv (char *__string) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	stdlib.h	/^extern int unsetenv (__const char *__name) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	stdlib.h	/^extern void lcong48 (unsigned short int __param[7]) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	stdlib.h	/^extern void setkey (__const char *__key) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	string.h	/^			 __locale_t __l) __THROW __nonnull ((2, 4));$/;"	p	signature:(2, 4)
__THROW	string.h	/^		      size_t __n) __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	string.h	/^     __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	string.h	/^     __THROW __nonnull ((2));$/;"	p	signature:(2)
__THROW	string.h	/^     __THROW __nonnull ((2, 3));$/;"	p	signature:(2, 3)
__THROW	string.h	/^extern char *basename (__const char *__filename) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	string.h	/^extern char *strfry (char *__string) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	string.h	/^extern void *memfrob (void *__s, size_t __n) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	string.h	/^extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	string.h	/^extern void __bzero (void *__s, size_t __n) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	string.h	/^extern void bzero (void *__s, size_t __n) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	unistd.h	/^		   char *__const __envp[]) __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	unistd.h	/^		  ssize_t __n) __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	unistd.h	/^     __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	unistd.h	/^     __THROW __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__THROW	unistd.h	/^     __THROW __nonnull ((2));$/;"	p	signature:(2)
__THROW	unistd.h	/^extern int access (__const char *__name, int __type) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	unistd.h	/^extern int gethostname (char *__name, size_t __len) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	unistd.h	/^extern int rmdir (__const char *__path) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	unistd.h	/^extern int setlogin (__const char *__name) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	unistd.h	/^extern int unlink (__const char *__name) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	unistd.h	/^extern void encrypt (char *__libc_block, int __edflag) __THROW __nonnull ((1));$/;"	p	signature:(1)
__THROW	utime.h	/^     __THROW __nonnull ((1));$/;"	p	signature:(1)
__UINT64_C	stdint.h	151;"	d
__UINT64_C	stdint.h	154;"	d
__UL_GETMAXBRK	ulimit.h	/^  __UL_GETMAXBRK,			\/* Return the maximum possible address$/;"	e	enum:__anon15
__UL_GETOPENMAX	ulimit.h	/^  __UL_GETOPENMAX			\/* Return the maximum number of files$/;"	e	enum:__anon15
__UNKNOWN_10646_CHAR	gconv.h	35;"	d
__USE_ANSI	features.h	130;"	d
__USE_ATFILE	features.h	116;"	d
__USE_ATFILE	features.h	300;"	d
__USE_BSD	features.h	113;"	d
__USE_BSD	features.h	292;"	d
__USE_EXTERN_INLINES	features.h	372;"	d
__USE_EXTERN_INLINES_IN_LIBC	features.h	380;"	d
__USE_FILE_OFFSET64	features.h	112;"	d
__USE_FILE_OFFSET64	features.h	284;"	d
__USE_FORTIFY_LEVEL	features.h	119;"	d
__USE_FORTIFY_LEVEL	features.h	314;"	d
__USE_FORTIFY_LEVEL	features.h	316;"	d
__USE_FORTIFY_LEVEL	features.h	319;"	d
__USE_GNU	features.h	117;"	d
__USE_GNU	features.h	304;"	d
__USE_GNU_GETTEXT	libintl.h	28;"	d
__USE_ISOC95	features.h	199;"	d
__USE_ISOC95	features.h	237;"	d
__USE_ISOC95	features.h	238;"	d
__USE_ISOC95	features.h	263;"	d
__USE_ISOC95	features.h	264;"	d
__USE_ISOC95	features.h	98;"	d
__USE_ISOC99	features.h	193;"	d
__USE_ISOC99	features.h	239;"	d
__USE_ISOC99	features.h	240;"	d
__USE_ISOC99	features.h	265;"	d
__USE_ISOC99	features.h	266;"	d
__USE_ISOC99	features.h	97;"	d
__USE_LARGEFILE	features.h	110;"	d
__USE_LARGEFILE	features.h	276;"	d
__USE_LARGEFILE	features.h	362;"	d
__USE_LARGEFILE64	features.h	111;"	d
__USE_LARGEFILE64	features.h	280;"	d
__USE_LARGEFILE64	features.h	363;"	d
__USE_MISC	features.h	115;"	d
__USE_MISC	features.h	288;"	d
__USE_POSIX	features.h	220;"	d
__USE_POSIX	features.h	99;"	d
__USE_POSIX199309	features.h	101;"	d
__USE_POSIX199309	features.h	228;"	d
__USE_POSIX199506	features.h	102;"	d
__USE_POSIX199506	features.h	232;"	d
__USE_POSIX2	features.h	100;"	d
__USE_POSIX2	features.h	224;"	d
__USE_POSIX_IMPLICITLY	features.h	216;"	d
__USE_REENTRANT	features.h	118;"	d
__USE_REENTRANT	features.h	308;"	d
__USE_SVID	features.h	114;"	d
__USE_SVID	features.h	296;"	d
__USE_UNIX98	features.h	105;"	d
__USE_UNIX98	features.h	253;"	d
__USE_XOPEN	features.h	103;"	d
__USE_XOPEN	features.h	250;"	d
__USE_XOPEN2K	features.h	106;"	d
__USE_XOPEN2K	features.h	236;"	d
__USE_XOPEN2K	features.h	261;"	d
__USE_XOPEN2K8	features.h	108;"	d
__USE_XOPEN2K8	features.h	244;"	d
__USE_XOPEN2K8	features.h	258;"	d
__USE_XOPEN2K8XSI	features.h	109;"	d
__USE_XOPEN2K8XSI	features.h	259;"	d
__USE_XOPEN2KXSI	features.h	107;"	d
__USE_XOPEN2KXSI	features.h	262;"	d
__USE_XOPEN_EXTENDED	features.h	104;"	d
__USE_XOPEN_EXTENDED	features.h	252;"	d
__USE_XOPEN_EXTENDED	features.h	270;"	d
__WAIT_INT	stdlib.h	51;"	d
__WAIT_STATUS	stdlib.h	64;"	d
__WAIT_STATUS_DEFN	stdlib.h	65;"	d
__WRDE_FLAGS	wordexp.h	/^    __WRDE_FLAGS = (WRDE_DOOFFS | WRDE_APPEND | WRDE_NOCMD |$/;"	e	enum:__anon69
__YESEXPR	langinfo.h	/^  __YESEXPR = _NL_ITEM (__LC_MESSAGES, 0), \/* Regex matching ``yes'' input.  *\/$/;"	e	enum:__anon20
__YESSTR	langinfo.h	/^  __YESSTR,			\/* Output string for ``yes''.  *\/$/;"	e	enum:__anon20
____FILE_defined	stdio.h	67;"	d
____gwchar_t_defined	inttypes.h	41;"	d
__a	stdlib.h	/^    unsigned long long int __a;	\/* Factor in congruential formula.  *\/$/;"	m	struct:drand48_data	access:public
__abs_prio	aio.h	/^  int __abs_prio;$/;"	m	struct:aiocb	access:public
__abs_prio	aio.h	/^  int __abs_prio;$/;"	m	struct:aiocb64	access:public
__action_fn_t	search.h	/^typedef void (*__action_fn_t) (__const void *__nodep, VISIT __value,$/;"	t
__actions	spawn.h	/^  struct __spawn_action *__actions;$/;"	m	struct:__anon133	typeref:struct:__anon133::__spawn_action	access:public
__allocated	spawn.h	/^  int __allocated;$/;"	m	struct:__anon133	access:public
__anon101::__anon102::d_ptr	elf.h	/^      Elf64_Addr d_ptr;			\/* Address value *\/$/;"	m	union:__anon101::__anon102	access:public
__anon101::__anon102::d_val	elf.h	/^      Elf64_Xword d_val;		\/* Integer value *\/$/;"	m	union:__anon101::__anon102	access:public
__anon101::d_tag	elf.h	/^  Elf64_Sxword	d_tag;			\/* Dynamic entry type *\/$/;"	m	struct:__anon101	access:public
__anon101::d_un	elf.h	/^    } d_un;$/;"	m	struct:__anon101	typeref:union:__anon101::__anon102	access:public
__anon103::vd_aux	elf.h	/^  Elf32_Word	vd_aux;			\/* Offset in bytes to verdaux array *\/$/;"	m	struct:__anon103	access:public
__anon103::vd_cnt	elf.h	/^  Elf32_Half	vd_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon103	access:public
__anon103::vd_flags	elf.h	/^  Elf32_Half	vd_flags;		\/* Version information *\/$/;"	m	struct:__anon103	access:public
__anon103::vd_hash	elf.h	/^  Elf32_Word	vd_hash;		\/* Version name hash value *\/$/;"	m	struct:__anon103	access:public
__anon103::vd_ndx	elf.h	/^  Elf32_Half	vd_ndx;			\/* Version Index *\/$/;"	m	struct:__anon103	access:public
__anon103::vd_next	elf.h	/^  Elf32_Word	vd_next;		\/* Offset in bytes to next verdef$/;"	m	struct:__anon103	access:public
__anon103::vd_version	elf.h	/^  Elf32_Half	vd_version;		\/* Version revision *\/$/;"	m	struct:__anon103	access:public
__anon104::vd_aux	elf.h	/^  Elf64_Word	vd_aux;			\/* Offset in bytes to verdaux array *\/$/;"	m	struct:__anon104	access:public
__anon104::vd_cnt	elf.h	/^  Elf64_Half	vd_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon104	access:public
__anon104::vd_flags	elf.h	/^  Elf64_Half	vd_flags;		\/* Version information *\/$/;"	m	struct:__anon104	access:public
__anon104::vd_hash	elf.h	/^  Elf64_Word	vd_hash;		\/* Version name hash value *\/$/;"	m	struct:__anon104	access:public
__anon104::vd_ndx	elf.h	/^  Elf64_Half	vd_ndx;			\/* Version Index *\/$/;"	m	struct:__anon104	access:public
__anon104::vd_next	elf.h	/^  Elf64_Word	vd_next;		\/* Offset in bytes to next verdef$/;"	m	struct:__anon104	access:public
__anon104::vd_version	elf.h	/^  Elf64_Half	vd_version;		\/* Version revision *\/$/;"	m	struct:__anon104	access:public
__anon105::vda_name	elf.h	/^  Elf32_Word	vda_name;		\/* Version or dependency names *\/$/;"	m	struct:__anon105	access:public
__anon105::vda_next	elf.h	/^  Elf32_Word	vda_next;		\/* Offset in bytes to next verdaux$/;"	m	struct:__anon105	access:public
__anon106::vda_name	elf.h	/^  Elf64_Word	vda_name;		\/* Version or dependency names *\/$/;"	m	struct:__anon106	access:public
__anon106::vda_next	elf.h	/^  Elf64_Word	vda_next;		\/* Offset in bytes to next verdaux$/;"	m	struct:__anon106	access:public
__anon107::vn_aux	elf.h	/^  Elf32_Word	vn_aux;			\/* Offset in bytes to vernaux array *\/$/;"	m	struct:__anon107	access:public
__anon107::vn_cnt	elf.h	/^  Elf32_Half	vn_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon107	access:public
__anon107::vn_file	elf.h	/^  Elf32_Word	vn_file;		\/* Offset of filename for this$/;"	m	struct:__anon107	access:public
__anon107::vn_next	elf.h	/^  Elf32_Word	vn_next;		\/* Offset in bytes to next verneed$/;"	m	struct:__anon107	access:public
__anon107::vn_version	elf.h	/^  Elf32_Half	vn_version;		\/* Version of structure *\/$/;"	m	struct:__anon107	access:public
__anon108::vn_aux	elf.h	/^  Elf64_Word	vn_aux;			\/* Offset in bytes to vernaux array *\/$/;"	m	struct:__anon108	access:public
__anon108::vn_cnt	elf.h	/^  Elf64_Half	vn_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon108	access:public
__anon108::vn_file	elf.h	/^  Elf64_Word	vn_file;		\/* Offset of filename for this$/;"	m	struct:__anon108	access:public
__anon108::vn_next	elf.h	/^  Elf64_Word	vn_next;		\/* Offset in bytes to next verneed$/;"	m	struct:__anon108	access:public
__anon108::vn_version	elf.h	/^  Elf64_Half	vn_version;		\/* Version of structure *\/$/;"	m	struct:__anon108	access:public
__anon109::vna_flags	elf.h	/^  Elf32_Half	vna_flags;		\/* Dependency specific information *\/$/;"	m	struct:__anon109	access:public
__anon109::vna_hash	elf.h	/^  Elf32_Word	vna_hash;		\/* Hash value of dependency name *\/$/;"	m	struct:__anon109	access:public
__anon109::vna_name	elf.h	/^  Elf32_Word	vna_name;		\/* Dependency name string offset *\/$/;"	m	struct:__anon109	access:public
__anon109::vna_next	elf.h	/^  Elf32_Word	vna_next;		\/* Offset in bytes to next vernaux$/;"	m	struct:__anon109	access:public
__anon109::vna_other	elf.h	/^  Elf32_Half	vna_other;		\/* Unused *\/$/;"	m	struct:__anon109	access:public
__anon110::vna_flags	elf.h	/^  Elf64_Half	vna_flags;		\/* Dependency specific information *\/$/;"	m	struct:__anon110	access:public
__anon110::vna_hash	elf.h	/^  Elf64_Word	vna_hash;		\/* Hash value of dependency name *\/$/;"	m	struct:__anon110	access:public
__anon110::vna_name	elf.h	/^  Elf64_Word	vna_name;		\/* Dependency name string offset *\/$/;"	m	struct:__anon110	access:public
__anon110::vna_next	elf.h	/^  Elf64_Word	vna_next;		\/* Offset in bytes to next vernaux$/;"	m	struct:__anon110	access:public
__anon110::vna_other	elf.h	/^  Elf64_Half	vna_other;		\/* Unused *\/$/;"	m	struct:__anon110	access:public
__anon111::__anon112::a_val	elf.h	/^      uint32_t a_val;		\/* Integer value *\/$/;"	m	union:__anon111::__anon112	access:public
__anon111::a_type	elf.h	/^  uint32_t a_type;		\/* Entry type *\/$/;"	m	struct:__anon111	access:public
__anon111::a_un	elf.h	/^    } a_un;$/;"	m	struct:__anon111	typeref:union:__anon111::__anon112	access:public
__anon113::__anon114::a_val	elf.h	/^      uint64_t a_val;		\/* Integer value *\/$/;"	m	union:__anon113::__anon114	access:public
__anon113::a_type	elf.h	/^  uint64_t a_type;		\/* Entry type *\/$/;"	m	struct:__anon113	access:public
__anon113::a_un	elf.h	/^    } a_un;$/;"	m	struct:__anon113	typeref:union:__anon113::__anon114	access:public
__anon115::n_descsz	elf.h	/^  Elf32_Word n_descsz;			\/* Length of the note's descriptor.  *\/$/;"	m	struct:__anon115	access:public
__anon115::n_namesz	elf.h	/^  Elf32_Word n_namesz;			\/* Length of the note's name.  *\/$/;"	m	struct:__anon115	access:public
__anon115::n_type	elf.h	/^  Elf32_Word n_type;			\/* Type of the note.  *\/$/;"	m	struct:__anon115	access:public
__anon116::n_descsz	elf.h	/^  Elf64_Word n_descsz;			\/* Length of the note's descriptor.  *\/$/;"	m	struct:__anon116	access:public
__anon116::n_namesz	elf.h	/^  Elf64_Word n_namesz;			\/* Length of the note's name.  *\/$/;"	m	struct:__anon116	access:public
__anon116::n_type	elf.h	/^  Elf64_Word n_type;			\/* Type of the note.  *\/$/;"	m	struct:__anon116	access:public
__anon117::m_info	elf.h	/^  Elf32_Word m_info;		\/* Size and index.  *\/$/;"	m	struct:__anon117	access:public
__anon117::m_poffset	elf.h	/^  Elf32_Word m_poffset;		\/* Symbol offset.  *\/$/;"	m	struct:__anon117	access:public
__anon117::m_repeat	elf.h	/^  Elf32_Half m_repeat;		\/* Repeat count.  *\/$/;"	m	struct:__anon117	access:public
__anon117::m_stride	elf.h	/^  Elf32_Half m_stride;		\/* Stride info.  *\/$/;"	m	struct:__anon117	access:public
__anon117::m_value	elf.h	/^  Elf32_Xword m_value;		\/* Symbol value.  *\/$/;"	m	struct:__anon117	access:public
__anon118::m_info	elf.h	/^  Elf64_Xword m_info;		\/* Size and index.  *\/$/;"	m	struct:__anon118	access:public
__anon118::m_poffset	elf.h	/^  Elf64_Xword m_poffset;	\/* Symbol offset.  *\/$/;"	m	struct:__anon118	access:public
__anon118::m_repeat	elf.h	/^  Elf64_Half m_repeat;		\/* Repeat count.  *\/$/;"	m	struct:__anon118	access:public
__anon118::m_stride	elf.h	/^  Elf64_Half m_stride;		\/* Stride info.  *\/$/;"	m	struct:__anon118	access:public
__anon118::m_value	elf.h	/^  Elf64_Xword m_value;		\/* Symbol value.  *\/$/;"	m	struct:__anon118	access:public
__anon119::__anon120::gt_current_g_value	elf.h	/^      Elf32_Word gt_current_g_value;	\/* -G value used for compilation *\/$/;"	m	struct:__anon119::__anon120	access:public
__anon119::__anon120::gt_unused	elf.h	/^      Elf32_Word gt_unused;		\/* Not used *\/$/;"	m	struct:__anon119::__anon120	access:public
__anon119::__anon121::gt_bytes	elf.h	/^      Elf32_Word gt_bytes;		\/* This many bytes would be used *\/$/;"	m	struct:__anon119::__anon121	access:public
__anon119::__anon121::gt_g_value	elf.h	/^      Elf32_Word gt_g_value;		\/* If this value were used for -G *\/$/;"	m	struct:__anon119::__anon121	access:public
__anon119::gt_entry	elf.h	/^    } gt_entry;				\/* Subsequent entries in section *\/$/;"	m	union:__anon119	typeref:struct:__anon119::__anon121	access:public
__anon119::gt_header	elf.h	/^    } gt_header;			\/* First entry in section *\/$/;"	m	union:__anon119	typeref:struct:__anon119::__anon120	access:public
__anon122::ri_cprmask	elf.h	/^  Elf32_Word	ri_cprmask[4];		\/* Coprocessor registers used *\/$/;"	m	struct:__anon122	access:public
__anon122::ri_gp_value	elf.h	/^  Elf32_Sword	ri_gp_value;		\/* $gp register value *\/$/;"	m	struct:__anon122	access:public
__anon122::ri_gprmask	elf.h	/^  Elf32_Word	ri_gprmask;		\/* General registers used *\/$/;"	m	struct:__anon122	access:public
__anon123::info	elf.h	/^  Elf32_Word info;		\/* Kind-specific information.  *\/$/;"	m	struct:__anon123	access:public
__anon123::kind	elf.h	/^  unsigned char kind;		\/* Determines interpretation of the$/;"	m	struct:__anon123	access:public
__anon123::section	elf.h	/^  Elf32_Section section;	\/* Section header index of section affected,$/;"	m	struct:__anon123	access:public
__anon123::size	elf.h	/^  unsigned char size;		\/* Size of descriptor, including header.  *\/$/;"	m	struct:__anon123	access:public
__anon124::hwp_flags1	elf.h	/^  Elf32_Word hwp_flags1;	\/* Extra flags.  *\/$/;"	m	struct:__anon124	access:public
__anon124::hwp_flags2	elf.h	/^  Elf32_Word hwp_flags2;	\/* Extra flags.  *\/$/;"	m	struct:__anon124	access:public
__anon125::l_checksum	elf.h	/^  Elf32_Word l_checksum;	\/* Checksum *\/$/;"	m	struct:__anon125	access:public
__anon125::l_flags	elf.h	/^  Elf32_Word l_flags;		\/* Flags *\/$/;"	m	struct:__anon125	access:public
__anon125::l_name	elf.h	/^  Elf32_Word l_name;		\/* Name (string table index) *\/$/;"	m	struct:__anon125	access:public
__anon125::l_time_stamp	elf.h	/^  Elf32_Word l_time_stamp;	\/* Timestamp *\/$/;"	m	struct:__anon125	access:public
__anon125::l_version	elf.h	/^  Elf32_Word l_version;		\/* Interface version *\/$/;"	m	struct:__anon125	access:public
__anon126::l_checksum	elf.h	/^  Elf64_Word l_checksum;	\/* Checksum *\/$/;"	m	struct:__anon126	access:public
__anon126::l_flags	elf.h	/^  Elf64_Word l_flags;		\/* Flags *\/$/;"	m	struct:__anon126	access:public
__anon126::l_name	elf.h	/^  Elf64_Word l_name;		\/* Name (string table index) *\/$/;"	m	struct:__anon126	access:public
__anon126::l_time_stamp	elf.h	/^  Elf64_Word l_time_stamp;	\/* Timestamp *\/$/;"	m	struct:__anon126	access:public
__anon126::l_version	elf.h	/^  Elf64_Word l_version;		\/* Interface version *\/$/;"	m	struct:__anon126	access:public
__anon127::__anon128::__wch	wchar.h	/^    __WINT_TYPE__ __wch;$/;"	m	union:__anon127::__anon128	access:public
__anon127::__anon128::__wchb	wchar.h	/^    char __wchb[4];$/;"	m	union:__anon127::__anon128	access:public
__anon127::__count	wchar.h	/^  int __count;$/;"	m	struct:__anon127	access:public
__anon127::__value	wchar.h	/^  } __value;		\/* Value so far.  *\/$/;"	m	struct:__anon127	typeref:union:__anon127::__anon128	access:public
__anon129::quot	inttypes.h	/^    long int quot;		\/* Quotient.  *\/$/;"	m	struct:__anon129	access:public
__anon129::rem	inttypes.h	/^    long int rem;		\/* Remainder.  *\/$/;"	m	struct:__anon129	access:public
__anon12::dls_flags	dlfcn.h	/^  unsigned int dls_flags;	\/* Indicates where this directory came from. *\/$/;"	m	struct:__anon12	access:public
__anon12::dls_name	dlfcn.h	/^  char *dls_name;		\/* Name of library search path directory.  *\/$/;"	m	struct:__anon12	access:public
__anon130::close	libio.h	/^  __io_close_fn *close;		\/* Close file.  *\/$/;"	m	struct:__anon130	access:public
__anon130::read	libio.h	/^  __io_read_fn *read;		\/* Read bytes.  *\/$/;"	m	struct:__anon130	access:public
__anon130::seek	libio.h	/^  __io_seek_fn *seek;		\/* Seek\/tell file position.  *\/$/;"	m	struct:__anon130	access:public
__anon130::write	libio.h	/^  __io_write_fn *write;		\/* Write bytes.  *\/$/;"	m	struct:__anon130	access:public
__anon132::__flags	spawn.h	/^  short int __flags;$/;"	m	struct:__anon132	access:public
__anon132::__pad	spawn.h	/^  int __pad[16];$/;"	m	struct:__anon132	access:public
__anon132::__pgrp	spawn.h	/^  pid_t __pgrp;$/;"	m	struct:__anon132	access:public
__anon132::__policy	spawn.h	/^  int __policy;$/;"	m	struct:__anon132	access:public
__anon132::__sd	spawn.h	/^  sigset_t __sd;$/;"	m	struct:__anon132	access:public
__anon132::__sp	spawn.h	/^  struct sched_param __sp;$/;"	m	struct:__anon132	typeref:struct:__anon132::sched_param	access:public
__anon132::__ss	spawn.h	/^  sigset_t __ss;$/;"	m	struct:__anon132	access:public
__anon133::__actions	spawn.h	/^  struct __spawn_action *__actions;$/;"	m	struct:__anon133	typeref:struct:__anon133::__spawn_action	access:public
__anon133::__allocated	spawn.h	/^  int __allocated;$/;"	m	struct:__anon133	access:public
__anon133::__pad	spawn.h	/^  int __pad[16];$/;"	m	struct:__anon133	access:public
__anon133::__used	spawn.h	/^  int __used;$/;"	m	struct:__anon133	access:public
__anon13::dls_cnt	dlfcn.h	/^  unsigned int dls_cnt;		\/* Number of elements in `dls_serpath'.  *\/$/;"	m	struct:__anon13	access:public
__anon13::dls_serpath	dlfcn.h	/^  Dl_serpath dls_serpath[1];	\/* Actually longer, dls_cnt elements.  *\/$/;"	m	struct:__anon13	access:public
__anon13::dls_size	dlfcn.h	/^  size_t dls_size;		\/* Size in bytes of the whole buffer.  *\/$/;"	m	struct:__anon13	access:public
__anon16::__pos	_G_config.h	/^  __off_t __pos;$/;"	m	struct:__anon16	access:public
__anon16::__state	_G_config.h	/^  __mbstate_t __state;$/;"	m	struct:__anon16	access:public
__anon17::__pos	_G_config.h	/^  __off64_t __pos;$/;"	m	struct:__anon17	access:public
__anon17::__state	_G_config.h	/^  __mbstate_t __state;$/;"	m	struct:__anon17	access:public
__anon18::__anon19::__cd	_G_config.h	/^    struct __gconv_info __cd;$/;"	m	struct:__anon18::__anon19	typeref:struct:__anon18::__anon19::__gconv_info	access:public
__anon18::__anon19::__data	_G_config.h	/^    struct __gconv_step_data __data;$/;"	m	struct:__anon18::__anon19	typeref:struct:__anon18::__anon19::__gconv_step_data	access:public
__anon18::__cd	_G_config.h	/^  struct __gconv_info __cd;$/;"	m	union:__anon18	typeref:struct:__anon18::__gconv_info	access:public
__anon18::__combined	_G_config.h	/^  } __combined;$/;"	m	union:__anon18	typeref:struct:__anon18::__anon19	access:public
__anon24::quot	stdlib.h	/^    int quot;			\/* Quotient.  *\/$/;"	m	struct:__anon24	access:public
__anon24::rem	stdlib.h	/^    int rem;			\/* Remainder.  *\/$/;"	m	struct:__anon24	access:public
__anon25::quot	stdlib.h	/^    long int quot;		\/* Quotient.  *\/$/;"	m	struct:__anon25	access:public
__anon25::rem	stdlib.h	/^    long int rem;		\/* Remainder.  *\/$/;"	m	struct:__anon25	access:public
__anon26::quot	stdlib.h	/^    long long int quot;		\/* Quotient.  *\/$/;"	m	struct:__anon26	access:public
__anon26::rem	stdlib.h	/^    long long int rem;		\/* Remainder.  *\/$/;"	m	struct:__anon26	access:public
__anon2::rm_eo	regex.h	/^  regoff_t rm_eo;  \/* Byte offset from string's start to substring's end.  *\/$/;"	m	struct:__anon2	access:public
__anon2::rm_so	regex.h	/^  regoff_t rm_so;  \/* Byte offset from string's start to substring's start.  *\/$/;"	m	struct:__anon2	access:public
__anon38::__anon39::__cancel_jmp_buf	pthread.h	/^    __jmp_buf __cancel_jmp_buf;$/;"	m	struct:__anon38::__anon39	access:public
__anon38::__anon39::__mask_was_saved	pthread.h	/^    int __mask_was_saved;$/;"	m	struct:__anon38::__anon39	access:public
__anon38::__cancel_jmp_buf	pthread.h	/^  } __cancel_jmp_buf[1];$/;"	m	struct:__anon38	typeref:struct:__anon38::__anon39	access:public
__anon38::__pad	pthread.h	/^  void *__pad[4];$/;"	m	struct:__anon38	access:public
__anon46::free_fcn	expat.h	/^  void (*free_fcn)(void *ptr);$/;"	m	struct:__anon46	access:public
__anon46::malloc_fcn	expat.h	/^  void *(*malloc_fcn)(size_t size);$/;"	m	struct:__anon46	access:public
__anon46::realloc_fcn	expat.h	/^  void *(*realloc_fcn)(void *ptr, size_t size);$/;"	m	struct:__anon46	access:public
__anon47::convert	expat.h	/^  int (XMLCALL *convert)(void *data, const char *s);$/;"	m	struct:__anon47	access:public
__anon47::data	expat.h	/^  void *data;$/;"	m	struct:__anon47	access:public
__anon47::map	expat.h	/^  int map[256];$/;"	m	struct:__anon47	access:public
__anon47::release	expat.h	/^  void (XMLCALL *release)(void *data);$/;"	m	struct:__anon47	access:public
__anon48::finalBuffer	expat.h	/^  XML_Bool finalBuffer;$/;"	m	struct:__anon48	access:public
__anon48::parsing	expat.h	/^  enum XML_Parsing parsing;$/;"	m	struct:__anon48	typeref:enum:__anon48::XML_Parsing	access:public
__anon49::major	expat.h	/^  int major;$/;"	m	struct:__anon49	access:public
__anon49::micro	expat.h	/^  int micro;$/;"	m	struct:__anon49	access:public
__anon49::minor	expat.h	/^  int minor;$/;"	m	struct:__anon49	access:public
__anon50::feature	expat.h	/^  enum XML_FeatureEnum  feature;$/;"	m	struct:__anon50	typeref:enum:__anon50::XML_FeatureEnum	access:public
__anon50::name	expat.h	/^  const XML_LChar       *name;$/;"	m	struct:__anon50	access:public
__anon50::value	expat.h	/^  long int              value;$/;"	m	struct:__anon50	access:public
__anon58::fts_array	fts.h	/^	struct _ftsent **fts_array;	\/* sort array *\/$/;"	m	struct:__anon58	typeref:struct:__anon58::_ftsent	access:public
__anon58::fts_child	fts.h	/^	struct _ftsent *fts_child;	\/* linked list of children *\/$/;"	m	struct:__anon58	typeref:struct:__anon58::_ftsent	access:public
__anon58::fts_compar	fts.h	/^	int (*fts_compar) (const void *, const void *); \/* compare fn *\/$/;"	m	struct:__anon58	access:public
__anon58::fts_cur	fts.h	/^	struct _ftsent *fts_cur;	\/* current node *\/$/;"	m	struct:__anon58	typeref:struct:__anon58::_ftsent	access:public
__anon58::fts_dev	fts.h	/^	dev_t fts_dev;			\/* starting device # *\/$/;"	m	struct:__anon58	access:public
__anon58::fts_nitems	fts.h	/^	int fts_nitems;			\/* elements in the sort array *\/$/;"	m	struct:__anon58	access:public
__anon58::fts_options	fts.h	/^	int fts_options;		\/* fts_open options, global flags *\/$/;"	m	struct:__anon58	access:public
__anon58::fts_path	fts.h	/^	char *fts_path;			\/* path for this descent *\/$/;"	m	struct:__anon58	access:public
__anon58::fts_pathlen	fts.h	/^	int fts_pathlen;		\/* sizeof(path) *\/$/;"	m	struct:__anon58	access:public
__anon58::fts_rfd	fts.h	/^	int fts_rfd;			\/* fd for root *\/$/;"	m	struct:__anon58	access:public
__anon66::eventdata	thread_db.h	/^  void *eventdata;		\/* Data associated with event.  *\/$/;"	m	struct:__anon66	access:public
__anon66::eventmask	thread_db.h	/^  td_thr_events_t eventmask;	\/* Mask of enabled events.  *\/$/;"	m	struct:__anon66	access:public
__anon66::eventnum	thread_db.h	/^  td_event_e eventnum;		\/* Number of last event.  *\/$/;"	m	struct:__anon66	access:public
__anon70::we_offs	wordexp.h	/^    size_t we_offs;		\/* Slots to reserve in `we_wordv'.  *\/$/;"	m	struct:__anon70	access:public
__anon70::we_wordc	wordexp.h	/^    size_t we_wordc;		\/* Count of words matched.  *\/$/;"	m	struct:__anon70	access:public
__anon70::we_wordv	wordexp.h	/^    char **we_wordv;		\/* List of expanded words.  *\/$/;"	m	struct:__anon70	access:public
__anon79::gl_closedir	glob.h	/^    void (*gl_closedir) (void *);$/;"	m	struct:__anon79	access:public
__anon79::gl_flags	glob.h	/^    int gl_flags;		\/* Set to FLAGS, maybe | GLOB_MAGCHAR.  *\/$/;"	m	struct:__anon79	access:public
__anon79::gl_lstat	glob.h	/^    int (*gl_lstat) (__const char *__restrict, struct stat *__restrict);$/;"	m	struct:__anon79	access:public
__anon79::gl_lstat	glob.h	/^    int (*gl_lstat) (__const char *__restrict, void *__restrict);$/;"	m	struct:__anon79	access:public
__anon79::gl_offs	glob.h	/^    __size_t gl_offs;		\/* Slots to reserve in `gl_pathv'.  *\/$/;"	m	struct:__anon79	access:public
__anon79::gl_opendir	glob.h	/^    void *(*gl_opendir) (__const char *);$/;"	m	struct:__anon79	access:public
__anon79::gl_pathc	glob.h	/^    __size_t gl_pathc;		\/* Count of paths matched by the pattern.  *\/$/;"	m	struct:__anon79	access:public
__anon79::gl_pathv	glob.h	/^    char **gl_pathv;		\/* List of matched pathnames.  *\/$/;"	m	struct:__anon79	access:public
__anon79::gl_readdir	glob.h	/^    struct dirent *(*gl_readdir) (void *);$/;"	m	struct:__anon79	typeref:struct:__anon79::gl_readdir	access:public
__anon79::gl_readdir	glob.h	/^    void *(*gl_readdir) (void *);$/;"	m	struct:__anon79	access:public
__anon79::gl_stat	glob.h	/^    int (*gl_stat) (__const char *__restrict, struct stat *__restrict);$/;"	m	struct:__anon79	access:public
__anon79::gl_stat	glob.h	/^    int (*gl_stat) (__const char *__restrict, void *__restrict);$/;"	m	struct:__anon79	access:public
__anon80::gl_closedir	glob.h	/^    void (*gl_closedir) (void *);$/;"	m	struct:__anon80	access:public
__anon80::gl_flags	glob.h	/^    int gl_flags;$/;"	m	struct:__anon80	access:public
__anon80::gl_lstat	glob.h	/^    int (*gl_lstat) (__const char *__restrict, struct stat64 *__restrict);$/;"	m	struct:__anon80	access:public
__anon80::gl_lstat	glob.h	/^    int (*gl_lstat) (__const char *__restrict, void *__restrict);$/;"	m	struct:__anon80	access:public
__anon80::gl_offs	glob.h	/^    __size_t gl_offs;$/;"	m	struct:__anon80	access:public
__anon80::gl_opendir	glob.h	/^    void *(*gl_opendir) (__const char *);$/;"	m	struct:__anon80	access:public
__anon80::gl_pathc	glob.h	/^    __size_t gl_pathc;$/;"	m	struct:__anon80	access:public
__anon80::gl_pathv	glob.h	/^    char **gl_pathv;$/;"	m	struct:__anon80	access:public
__anon80::gl_readdir	glob.h	/^    struct dirent64 *(*gl_readdir) (void *);$/;"	m	struct:__anon80	typeref:struct:__anon80::gl_readdir	access:public
__anon80::gl_readdir	glob.h	/^    void *(*gl_readdir) (void *);$/;"	m	struct:__anon80	access:public
__anon80::gl_stat	glob.h	/^    int (*gl_stat) (__const char *__restrict, struct stat64 *__restrict);$/;"	m	struct:__anon80	access:public
__anon80::gl_stat	glob.h	/^    int (*gl_stat) (__const char *__restrict, void *__restrict);$/;"	m	struct:__anon80	access:public
__anon85::e_ehsize	elf.h	/^  Elf32_Half	e_ehsize;		\/* ELF header size in bytes *\/$/;"	m	struct:__anon85	access:public
__anon85::e_entry	elf.h	/^  Elf32_Addr	e_entry;		\/* Entry point virtual address *\/$/;"	m	struct:__anon85	access:public
__anon85::e_flags	elf.h	/^  Elf32_Word	e_flags;		\/* Processor-specific flags *\/$/;"	m	struct:__anon85	access:public
__anon85::e_ident	elf.h	/^  unsigned char	e_ident[EI_NIDENT];	\/* Magic number and other info *\/$/;"	m	struct:__anon85	access:public
__anon85::e_machine	elf.h	/^  Elf32_Half	e_machine;		\/* Architecture *\/$/;"	m	struct:__anon85	access:public
__anon85::e_phentsize	elf.h	/^  Elf32_Half	e_phentsize;		\/* Program header table entry size *\/$/;"	m	struct:__anon85	access:public
__anon85::e_phnum	elf.h	/^  Elf32_Half	e_phnum;		\/* Program header table entry count *\/$/;"	m	struct:__anon85	access:public
__anon85::e_phoff	elf.h	/^  Elf32_Off	e_phoff;		\/* Program header table file offset *\/$/;"	m	struct:__anon85	access:public
__anon85::e_shentsize	elf.h	/^  Elf32_Half	e_shentsize;		\/* Section header table entry size *\/$/;"	m	struct:__anon85	access:public
__anon85::e_shnum	elf.h	/^  Elf32_Half	e_shnum;		\/* Section header table entry count *\/$/;"	m	struct:__anon85	access:public
__anon85::e_shoff	elf.h	/^  Elf32_Off	e_shoff;		\/* Section header table file offset *\/$/;"	m	struct:__anon85	access:public
__anon85::e_shstrndx	elf.h	/^  Elf32_Half	e_shstrndx;		\/* Section header string table index *\/$/;"	m	struct:__anon85	access:public
__anon85::e_type	elf.h	/^  Elf32_Half	e_type;			\/* Object file type *\/$/;"	m	struct:__anon85	access:public
__anon85::e_version	elf.h	/^  Elf32_Word	e_version;		\/* Object file version *\/$/;"	m	struct:__anon85	access:public
__anon86::e_ehsize	elf.h	/^  Elf64_Half	e_ehsize;		\/* ELF header size in bytes *\/$/;"	m	struct:__anon86	access:public
__anon86::e_entry	elf.h	/^  Elf64_Addr	e_entry;		\/* Entry point virtual address *\/$/;"	m	struct:__anon86	access:public
__anon86::e_flags	elf.h	/^  Elf64_Word	e_flags;		\/* Processor-specific flags *\/$/;"	m	struct:__anon86	access:public
__anon86::e_ident	elf.h	/^  unsigned char	e_ident[EI_NIDENT];	\/* Magic number and other info *\/$/;"	m	struct:__anon86	access:public
__anon86::e_machine	elf.h	/^  Elf64_Half	e_machine;		\/* Architecture *\/$/;"	m	struct:__anon86	access:public
__anon86::e_phentsize	elf.h	/^  Elf64_Half	e_phentsize;		\/* Program header table entry size *\/$/;"	m	struct:__anon86	access:public
__anon86::e_phnum	elf.h	/^  Elf64_Half	e_phnum;		\/* Program header table entry count *\/$/;"	m	struct:__anon86	access:public
__anon86::e_phoff	elf.h	/^  Elf64_Off	e_phoff;		\/* Program header table file offset *\/$/;"	m	struct:__anon86	access:public
__anon86::e_shentsize	elf.h	/^  Elf64_Half	e_shentsize;		\/* Section header table entry size *\/$/;"	m	struct:__anon86	access:public
__anon86::e_shnum	elf.h	/^  Elf64_Half	e_shnum;		\/* Section header table entry count *\/$/;"	m	struct:__anon86	access:public
__anon86::e_shoff	elf.h	/^  Elf64_Off	e_shoff;		\/* Section header table file offset *\/$/;"	m	struct:__anon86	access:public
__anon86::e_shstrndx	elf.h	/^  Elf64_Half	e_shstrndx;		\/* Section header string table index *\/$/;"	m	struct:__anon86	access:public
__anon86::e_type	elf.h	/^  Elf64_Half	e_type;			\/* Object file type *\/$/;"	m	struct:__anon86	access:public
__anon86::e_version	elf.h	/^  Elf64_Word	e_version;		\/* Object file version *\/$/;"	m	struct:__anon86	access:public
__anon87::sh_addr	elf.h	/^  Elf32_Addr	sh_addr;		\/* Section virtual addr at execution *\/$/;"	m	struct:__anon87	access:public
__anon87::sh_addralign	elf.h	/^  Elf32_Word	sh_addralign;		\/* Section alignment *\/$/;"	m	struct:__anon87	access:public
__anon87::sh_entsize	elf.h	/^  Elf32_Word	sh_entsize;		\/* Entry size if section holds table *\/$/;"	m	struct:__anon87	access:public
__anon87::sh_flags	elf.h	/^  Elf32_Word	sh_flags;		\/* Section flags *\/$/;"	m	struct:__anon87	access:public
__anon87::sh_info	elf.h	/^  Elf32_Word	sh_info;		\/* Additional section information *\/$/;"	m	struct:__anon87	access:public
__anon87::sh_link	elf.h	/^  Elf32_Word	sh_link;		\/* Link to another section *\/$/;"	m	struct:__anon87	access:public
__anon87::sh_name	elf.h	/^  Elf32_Word	sh_name;		\/* Section name (string tbl index) *\/$/;"	m	struct:__anon87	access:public
__anon87::sh_offset	elf.h	/^  Elf32_Off	sh_offset;		\/* Section file offset *\/$/;"	m	struct:__anon87	access:public
__anon87::sh_size	elf.h	/^  Elf32_Word	sh_size;		\/* Section size in bytes *\/$/;"	m	struct:__anon87	access:public
__anon87::sh_type	elf.h	/^  Elf32_Word	sh_type;		\/* Section type *\/$/;"	m	struct:__anon87	access:public
__anon88::sh_addr	elf.h	/^  Elf64_Addr	sh_addr;		\/* Section virtual addr at execution *\/$/;"	m	struct:__anon88	access:public
__anon88::sh_addralign	elf.h	/^  Elf64_Xword	sh_addralign;		\/* Section alignment *\/$/;"	m	struct:__anon88	access:public
__anon88::sh_entsize	elf.h	/^  Elf64_Xword	sh_entsize;		\/* Entry size if section holds table *\/$/;"	m	struct:__anon88	access:public
__anon88::sh_flags	elf.h	/^  Elf64_Xword	sh_flags;		\/* Section flags *\/$/;"	m	struct:__anon88	access:public
__anon88::sh_info	elf.h	/^  Elf64_Word	sh_info;		\/* Additional section information *\/$/;"	m	struct:__anon88	access:public
__anon88::sh_link	elf.h	/^  Elf64_Word	sh_link;		\/* Link to another section *\/$/;"	m	struct:__anon88	access:public
__anon88::sh_name	elf.h	/^  Elf64_Word	sh_name;		\/* Section name (string tbl index) *\/$/;"	m	struct:__anon88	access:public
__anon88::sh_offset	elf.h	/^  Elf64_Off	sh_offset;		\/* Section file offset *\/$/;"	m	struct:__anon88	access:public
__anon88::sh_size	elf.h	/^  Elf64_Xword	sh_size;		\/* Section size in bytes *\/$/;"	m	struct:__anon88	access:public
__anon88::sh_type	elf.h	/^  Elf64_Word	sh_type;		\/* Section type *\/$/;"	m	struct:__anon88	access:public
__anon89::st_info	elf.h	/^  unsigned char	st_info;		\/* Symbol type and binding *\/$/;"	m	struct:__anon89	access:public
__anon89::st_name	elf.h	/^  Elf32_Word	st_name;		\/* Symbol name (string tbl index) *\/$/;"	m	struct:__anon89	access:public
__anon89::st_other	elf.h	/^  unsigned char	st_other;		\/* Symbol visibility *\/$/;"	m	struct:__anon89	access:public
__anon89::st_shndx	elf.h	/^  Elf32_Section	st_shndx;		\/* Section index *\/$/;"	m	struct:__anon89	access:public
__anon89::st_size	elf.h	/^  Elf32_Word	st_size;		\/* Symbol size *\/$/;"	m	struct:__anon89	access:public
__anon89::st_value	elf.h	/^  Elf32_Addr	st_value;		\/* Symbol value *\/$/;"	m	struct:__anon89	access:public
__anon90::st_info	elf.h	/^  unsigned char	st_info;		\/* Symbol type and binding *\/$/;"	m	struct:__anon90	access:public
__anon90::st_name	elf.h	/^  Elf64_Word	st_name;		\/* Symbol name (string tbl index) *\/$/;"	m	struct:__anon90	access:public
__anon90::st_other	elf.h	/^  unsigned char st_other;		\/* Symbol visibility *\/$/;"	m	struct:__anon90	access:public
__anon90::st_shndx	elf.h	/^  Elf64_Section	st_shndx;		\/* Section index *\/$/;"	m	struct:__anon90	access:public
__anon90::st_size	elf.h	/^  Elf64_Xword	st_size;		\/* Symbol size *\/$/;"	m	struct:__anon90	access:public
__anon90::st_value	elf.h	/^  Elf64_Addr	st_value;		\/* Symbol value *\/$/;"	m	struct:__anon90	access:public
__anon91::si_boundto	elf.h	/^  Elf32_Half si_boundto;		\/* Direct bindings, symbol bound to *\/$/;"	m	struct:__anon91	access:public
__anon91::si_flags	elf.h	/^  Elf32_Half si_flags;			\/* Per symbol flags *\/$/;"	m	struct:__anon91	access:public
__anon92::si_boundto	elf.h	/^  Elf64_Half si_boundto;		\/* Direct bindings, symbol bound to *\/$/;"	m	struct:__anon92	access:public
__anon92::si_flags	elf.h	/^  Elf64_Half si_flags;			\/* Per symbol flags *\/$/;"	m	struct:__anon92	access:public
__anon93::r_info	elf.h	/^  Elf32_Word	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon93	access:public
__anon93::r_offset	elf.h	/^  Elf32_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon93	access:public
__anon94::r_info	elf.h	/^  Elf64_Xword	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon94	access:public
__anon94::r_offset	elf.h	/^  Elf64_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon94	access:public
__anon95::r_addend	elf.h	/^  Elf32_Sword	r_addend;		\/* Addend *\/$/;"	m	struct:__anon95	access:public
__anon95::r_info	elf.h	/^  Elf32_Word	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon95	access:public
__anon95::r_offset	elf.h	/^  Elf32_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon95	access:public
__anon96::r_addend	elf.h	/^  Elf64_Sxword	r_addend;		\/* Addend *\/$/;"	m	struct:__anon96	access:public
__anon96::r_info	elf.h	/^  Elf64_Xword	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon96	access:public
__anon96::r_offset	elf.h	/^  Elf64_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon96	access:public
__anon97::p_align	elf.h	/^  Elf32_Word	p_align;		\/* Segment alignment *\/$/;"	m	struct:__anon97	access:public
__anon97::p_filesz	elf.h	/^  Elf32_Word	p_filesz;		\/* Segment size in file *\/$/;"	m	struct:__anon97	access:public
__anon97::p_flags	elf.h	/^  Elf32_Word	p_flags;		\/* Segment flags *\/$/;"	m	struct:__anon97	access:public
__anon97::p_memsz	elf.h	/^  Elf32_Word	p_memsz;		\/* Segment size in memory *\/$/;"	m	struct:__anon97	access:public
__anon97::p_offset	elf.h	/^  Elf32_Off	p_offset;		\/* Segment file offset *\/$/;"	m	struct:__anon97	access:public
__anon97::p_paddr	elf.h	/^  Elf32_Addr	p_paddr;		\/* Segment physical address *\/$/;"	m	struct:__anon97	access:public
__anon97::p_type	elf.h	/^  Elf32_Word	p_type;			\/* Segment type *\/$/;"	m	struct:__anon97	access:public
__anon97::p_vaddr	elf.h	/^  Elf32_Addr	p_vaddr;		\/* Segment virtual address *\/$/;"	m	struct:__anon97	access:public
__anon98::p_align	elf.h	/^  Elf64_Xword	p_align;		\/* Segment alignment *\/$/;"	m	struct:__anon98	access:public
__anon98::p_filesz	elf.h	/^  Elf64_Xword	p_filesz;		\/* Segment size in file *\/$/;"	m	struct:__anon98	access:public
__anon98::p_flags	elf.h	/^  Elf64_Word	p_flags;		\/* Segment flags *\/$/;"	m	struct:__anon98	access:public
__anon98::p_memsz	elf.h	/^  Elf64_Xword	p_memsz;		\/* Segment size in memory *\/$/;"	m	struct:__anon98	access:public
__anon98::p_offset	elf.h	/^  Elf64_Off	p_offset;		\/* Segment file offset *\/$/;"	m	struct:__anon98	access:public
__anon98::p_paddr	elf.h	/^  Elf64_Addr	p_paddr;		\/* Segment physical address *\/$/;"	m	struct:__anon98	access:public
__anon98::p_type	elf.h	/^  Elf64_Word	p_type;			\/* Segment type *\/$/;"	m	struct:__anon98	access:public
__anon98::p_vaddr	elf.h	/^  Elf64_Addr	p_vaddr;		\/* Segment virtual address *\/$/;"	m	struct:__anon98	access:public
__anon99::__anon100::d_ptr	elf.h	/^      Elf32_Addr d_ptr;			\/* Address value *\/$/;"	m	union:__anon99::__anon100	access:public
__anon99::__anon100::d_val	elf.h	/^      Elf32_Word d_val;			\/* Integer value *\/$/;"	m	union:__anon99::__anon100	access:public
__anon99::d_tag	elf.h	/^  Elf32_Sword	d_tag;			\/* Dynamic entry type *\/$/;"	m	struct:__anon99	access:public
__anon99::d_un	elf.h	/^    } d_un;$/;"	m	struct:__anon99	typeref:union:__anon99::__anon100	access:public
__anon9::dli_fbase	dlfcn.h	/^  void *dli_fbase;		\/* Load address of that object.  *\/$/;"	m	struct:__anon9	access:public
__anon9::dli_fname	dlfcn.h	/^  __const char *dli_fname;	\/* File name of defining object.  *\/$/;"	m	struct:__anon9	access:public
__anon9::dli_saddr	dlfcn.h	/^  void *dli_saddr;		\/* Exact value of nearest symbol.  *\/$/;"	m	struct:__anon9	access:public
__anon9::dli_sname	dlfcn.h	/^  __const char *dli_sname;	\/* Name of nearest symbol.  *\/$/;"	m	struct:__anon9	access:public
__arg	pthread.h	/^  void *__arg;                            \/* Its argument.  *\/$/;"	m	struct:_pthread_cleanup_buffer	access:public
__argp_error	argp.h	/^extern void __argp_error (__const struct argp_state *__restrict __state,$/;"	p	signature:(__const struct argp_state *__restrict __state, __const char *__restrict __fmt, ...)
__argp_failure	argp.h	/^extern void __argp_failure (__const struct argp_state *__restrict __state,$/;"	p	signature:(__const struct argp_state *__restrict __state, int __status, int __errnum, __const char *__restrict __fmt, ...)
__argp_help	argp.h	/^extern void __argp_help (__const struct argp *__restrict __argp,$/;"	p	signature:(__const struct argp *__restrict __argp, FILE *__restrict __stream, unsigned __flags, char *__name)
__argp_parse	argp.h	/^extern error_t __argp_parse (__const struct argp *__restrict __argp,$/;"	p	signature:(__const struct argp *__restrict __argp, int __argc, char **__restrict __argv, unsigned __flags, int *__restrict __arg_index, void *__restrict __input)
__argp_state_help	argp.h	/^extern void __argp_state_help (__const struct argp_state *__restrict __state,$/;"	p	signature:(__const struct argp_state *__restrict __state, FILE *__restrict __stream, unsigned int __flags)
__argp_state_help	argp.h	556;"	d
__argp_state_help	argp.h	591;"	d
__argp_usage	argp.h	/^__argp_usage (__const struct argp_state *__state)$/;"	f	signature:(__const struct argp_state *__state)
__argp_usage	argp.h	/^extern void __argp_usage (__const struct argp_state *__state);$/;"	p	signature:(__const struct argp_state *__state)
__argp_usage	argp.h	555;"	d
__argp_usage	argp.h	590;"	d
__argz_next	argz.h	/^__NTH (__argz_next (__const char *__argz, size_t __argz_len,$/;"	f	signature:(__const char *__argz, size_t __argz_len, __const char *__entry)
__argz_replace	argz.h	/^extern error_t __argz_replace (char **__restrict __argz,$/;"	p	signature:(char **__restrict __argz, size_t *__restrict __argz_len, __const char *__restrict __str, __const char *__restrict __with, unsigned int *__restrict __replace_count)
__attribute__	argp.h	47;"	d
__attribute__	autosprintf.h	25;"	d
__attribute__	libtasn1.h	300;"	d
__attribute_deprecated__	printf.h	/^  __THROW __attribute_deprecated__;$/;"	v
__attribute_deprecated__	signal.h	/^     __THROW __attribute_deprecated__;$/;"	v
__attribute_deprecated__	signal.h	/^extern int sigblock (int __mask) __THROW __attribute_deprecated__;$/;"	v
__attribute_deprecated__	signal.h	/^extern int siggetmask (void) __THROW __attribute_deprecated__;$/;"	v
__attribute_deprecated__	signal.h	/^extern int sigpause (int __mask) __THROW __attribute_deprecated__;$/;"	v
__attribute_deprecated__	signal.h	/^extern int sigsetmask (int __mask) __THROW __attribute_deprecated__;$/;"	v
__attribute_malloc__	string.h	/^     __THROW __attribute_malloc__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_malloc__	wchar.h	/^extern wchar_t *wcsdup (__const wchar_t *__s) __THROW __attribute_malloc__;$/;"	v
__attribute_pure__	argz.h	/^     __THROW __attribute_pure__;$/;"	v
__attribute_pure__	dirent.h	/^			   alphasort64) __attribute_pure__ __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__attribute_pure__	dirent.h	/^     __THROW __attribute_pure__ __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__attribute_pure__	dirent.h	/^     __attribute_pure__ __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__attribute_pure__	envz.h	/^     __THROW __attribute_pure__;$/;"	v
__attribute_pure__	string.h	/^      __THROW __asm ("memchr") __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	string.h	/^      __THROW __asm ("memrchr") __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	string.h	/^      __THROW __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	string.h	/^     __THROW __asm ("index") __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	string.h	/^     __THROW __asm ("rawmemchr") __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	string.h	/^     __THROW __asm ("rindex") __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	string.h	/^     __THROW __asm ("strcasestr") __attribute_pure__ __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__attribute_pure__	string.h	/^     __THROW __asm ("strchr") __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	string.h	/^     __THROW __asm ("strchrnul") __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	string.h	/^     __THROW __asm ("strpbrk") __attribute_pure__ __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__attribute_pure__	string.h	/^     __THROW __asm ("strrchr") __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	string.h	/^     __THROW __asm ("strstr") __attribute_pure__ __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__attribute_pure__	string.h	/^     __THROW __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	string.h	/^     __THROW __attribute_pure__ __nonnull ((1, 2));$/;"	p	signature:(1, 2)
__attribute_pure__	string.h	/^     __THROW __attribute_pure__ __nonnull ((1, 2, 3));$/;"	p	signature:(1, 2, 3)
__attribute_pure__	string.h	/^     __THROW __attribute_pure__ __nonnull ((1, 2, 4));$/;"	p	signature:(1, 2, 4)
__attribute_pure__	string.h	/^     __THROW __attribute_pure__ __nonnull ((1, 3));$/;"	p	signature:(1, 3)
__attribute_pure__	strings.h	/^     __THROW __asm ("index") __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	strings.h	/^     __THROW __asm ("rindex") __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	strings.h	/^     __THROW __attribute_pure__ __nonnull ((1));$/;"	p	signature:(1)
__attribute_pure__	strings.h	/^     __THROW __attribute_pure__ __nonnull ((1, 2, 3));$/;"	p	signature:(1, 2, 3)
__attribute_pure__	strings.h	/^     __THROW __attribute_pure__ __nonnull ((1, 2, 4));$/;"	p	signature:(1, 2, 4)
__attribute_pure__	strings.h	/^     __THROW __attribute_pure__;$/;"	v
__attribute_pure__	wchar.h	/^     __THROW __attribute_pure__;$/;"	v
__attribute_pure__	wchar.h	/^extern int mbsinit (__const mbstate_t *__ps) __THROW __attribute_pure__;$/;"	v
__attribute_pure__	wchar.h	/^extern size_t wcslen (__const wchar_t *__s) __THROW __attribute_pure__;$/;"	v
__attribute_warn_unused_result__	stdlib.h	/^     __THROW __attribute_warn_unused_result__;$/;"	v
__btowc_fct	gconv.h	/^  __gconv_btowc_fct __btowc_fct;$/;"	m	struct:__gconv_step	access:public
__c	stdlib.h	/^    unsigned short int __c;	\/* Additive const. in congruential formula.  *\/$/;"	m	struct:drand48_data	access:public
__cancel_arg	pthread.h	/^  void *__cancel_arg;$/;"	m	class:__pthread_cleanup_class	access:private
__cancel_arg	pthread.h	/^  void *__cancel_arg;$/;"	m	struct:__pthread_cleanup_frame	access:public
__cancel_jmp_buf	pthread.h	/^    __jmp_buf __cancel_jmp_buf;$/;"	m	struct:__anon38::__anon39	access:public
__cancel_jmp_buf	pthread.h	/^  } __cancel_jmp_buf[1];$/;"	m	struct:__anon38	typeref:struct:__anon38::__anon39	access:public
__cancel_routine	pthread.h	/^  void (*__cancel_routine) (void *);$/;"	m	class:__pthread_cleanup_class	access:private
__cancel_routine	pthread.h	/^  void (*__cancel_routine) (void *);$/;"	m	struct:__pthread_cleanup_frame	access:public
__cancel_type	pthread.h	/^  int __cancel_type;$/;"	m	class:__pthread_cleanup_class	access:private
__cancel_type	pthread.h	/^  int __cancel_type;$/;"	m	struct:__pthread_cleanup_frame	access:public
__canceltype	pthread.h	/^  int __canceltype;                       \/* Saved cancellation type. *\/$/;"	m	struct:_pthread_cleanup_buffer	access:public
__cd	_G_config.h	/^    struct __gconv_info __cd;$/;"	m	struct:__anon18::__anon19	typeref:struct:__anon18::__anon19::__gconv_info	access:public
__cd	_G_config.h	/^  struct __gconv_info __cd;$/;"	m	union:__anon18	typeref:struct:__anon18::__gconv_info	access:public
__cd_in	libio.h	/^  _IO_iconv_t __cd_in;$/;"	m	struct:_IO_codecvt	access:public
__cd_out	libio.h	/^  _IO_iconv_t __cd_out;$/;"	m	struct:_IO_codecvt	access:public
__ch	regexp.h	/^  int __ch;$/;"	l
__cleanup_fct_attribute	pthread.h	519;"	d
__clock_t_defined	time.h	54;"	d
__clockid_t_defined	time.h	87;"	d
__clockid_time_t	time.h	95;"	d
__codecvt_destr	libio.h	/^  void (*__codecvt_destr) (struct _IO_codecvt *);$/;"	m	struct:_IO_codecvt	access:public
__codecvt_do_always_noconv	libio.h	/^  int (*__codecvt_do_always_noconv) (struct _IO_codecvt *);$/;"	m	struct:_IO_codecvt	access:public
__codecvt_do_encoding	libio.h	/^  int (*__codecvt_do_encoding) (struct _IO_codecvt *);$/;"	m	struct:_IO_codecvt	access:public
__codecvt_do_in	libio.h	/^  enum __codecvt_result (*__codecvt_do_in) (struct _IO_codecvt *,$/;"	m	struct:_IO_codecvt	typeref:enum:_IO_codecvt::__codecvt_do_in	access:public
__codecvt_do_length	libio.h	/^  int (*__codecvt_do_length) (struct _IO_codecvt *, __mbstate_t *,$/;"	m	struct:_IO_codecvt	access:public
__codecvt_do_max_length	libio.h	/^  int (*__codecvt_do_max_length) (struct _IO_codecvt *);$/;"	m	struct:_IO_codecvt	access:public
__codecvt_do_out	libio.h	/^  enum __codecvt_result (*__codecvt_do_out) (struct _IO_codecvt *,$/;"	m	struct:_IO_codecvt	typeref:enum:_IO_codecvt::__codecvt_do_out	access:public
__codecvt_do_unshift	libio.h	/^  enum __codecvt_result (*__codecvt_do_unshift) (struct _IO_codecvt *,$/;"	m	struct:_IO_codecvt	typeref:enum:_IO_codecvt::__codecvt_do_unshift	access:public
__codecvt_error	libio.h	/^  __codecvt_error,$/;"	e	enum:__codecvt_result
__codecvt_noconv	libio.h	/^  __codecvt_noconv$/;"	e	enum:__codecvt_result
__codecvt_ok	libio.h	/^  __codecvt_ok,$/;"	e	enum:__codecvt_result
__codecvt_partial	libio.h	/^  __codecvt_partial,$/;"	e	enum:__codecvt_result
__codecvt_result	libio.h	/^enum __codecvt_result$/;"	g
__combined	_G_config.h	/^  } __combined;$/;"	m	union:__anon18	typeref:struct:__anon18::__anon19	access:public
__compar_d_fn_t	stdlib.h	/^typedef int (*__compar_d_fn_t) (__const void *, __const void *, void *);$/;"	t
__compar_fn_t	search.h	/^typedef int (*__compar_fn_t) (__const void *, __const void *);$/;"	t
__compar_fn_t	stdlib.h	/^typedef int (*__compar_fn_t) (__const void *, __const void *);$/;"	t
__const	argp.h	34;"	d
__const	argz.h	30;"	d
__const	fnmatch.h	28;"	d
__const	fnmatch.h	30;"	d
__count	wchar.h	/^  int __count;$/;"	m	struct:__anon127	access:public
__counter	gconv.h	/^  int __counter;$/;"	m	struct:__gconv_step	access:public
__ctype_b	xlocale.h	/^  const unsigned short int *__ctype_b;$/;"	m	struct:__locale_struct	access:public
__ctype_tolower	xlocale.h	/^  const int *__ctype_tolower;$/;"	m	struct:__locale_struct	access:public
__ctype_toupper	xlocale.h	/^  const int *__ctype_toupper;$/;"	m	struct:__locale_struct	access:public
__current_size	regexp.h	/^  size_t __current_size = 0;$/;"	l
__data	_G_config.h	/^    struct __gconv_step_data __data;$/;"	m	struct:__anon18::__anon19	typeref:struct:__anon18::__anon19::__gconv_step_data	access:public
__data	gconv.h	/^  void *__data;		\/* Pointer to step-local data.  *\/$/;"	m	struct:__gconv_step	access:public
__data	gconv.h	/^  void *__data;$/;"	m	struct:__gconv_trans_data	access:public
__defer	pthread.h	/^  void __defer () { pthread_setcanceltype (PTHREAD_CANCEL_DEFERRED,$/;"	f	class:__pthread_cleanup_class	access:public	signature:()
__define_stab	stab.h	15;"	d
__define_stab	stab.h	7;"	d
__do_it	pthread.h	/^  int __do_it;$/;"	m	class:__pthread_cleanup_class	access:private
__do_it	pthread.h	/^  int __do_it;$/;"	m	struct:__pthread_cleanup_frame	access:public
__end_fct	gconv.h	/^  __gconv_end_fct __end_fct;$/;"	m	struct:__gconv_step	access:public
__error	regexp.h	/^  int __error;$/;"	l
__error_code	aio.h	/^  int __error_code;$/;"	m	struct:aiocb	access:public
__error_code	aio.h	/^  int __error_code;$/;"	m	struct:aiocb64	access:public
__error_t_defined	argp.h	71;"	d
__error_t_defined	errno.h	70;"	d
__exception	math.h	/^struct __exception$/;"	s
__exception::arg1	math.h	/^    double arg1;$/;"	m	struct:__exception	access:public
__exception::arg2	math.h	/^    double arg2;$/;"	m	struct:__exception	access:public
__exception::name	math.h	/^    char *name;$/;"	m	struct:__exception	access:public
__exception::retval	math.h	/^    double retval;$/;"	m	struct:__exception	access:public
__exception::type	math.h	/^    int type;$/;"	m	struct:__exception	access:public
__exctype	ctype.h	/^__exctype (isalnum);$/;"	p	signature:(isalnum)
__exctype	ctype.h	/^__exctype (isblank);$/;"	p	signature:(isblank)
__exctype	ctype.h	94;"	d
__exctype_l	ctype.h	240;"	d
__expr_ptr	regexp.h	/^  regex_t *__expr_ptr;$/;"	l
__extension__	obstack.h	258;"	d
__fct	gconv.h	/^  __gconv_fct __fct;$/;"	m	struct:__gconv_step	access:public
__flags	gconv.h	/^  int __flags;$/;"	m	struct:__gconv_step_data	access:public
__flags	spawn.h	/^  short int __flags;$/;"	m	struct:__anon132	access:public
__flexarr	gconv.h	/^  __extension__ struct __gconv_step_data __data __flexarr;$/;"	m	struct:__gconv_info	typeref:struct:__gconv_info::__data	access:public
__floating_type	tgmath.h	52;"	d
__floating_type	tgmath.h	57;"	d
__format__	argp.h	52;"	d
__format__	autosprintf.h	30;"	d
__free_fn_t	search.h	/^typedef void (*__free_fn_t) (void *__nodep);$/;"	t
__from_name	gconv.h	/^  char *__from_name;$/;"	m	struct:__gconv_step	access:public
__ftw64_func_t	ftw.h	/^typedef int (*__ftw64_func_t) (__const char *__filename,$/;"	t
__ftw_func_t	ftw.h	/^typedef int (*__ftw_func_t) (__const char *__filename,$/;"	t
__gconv_btowc_fct	gconv.h	/^typedef wint_t (*__gconv_btowc_fct) (struct __gconv_step *, unsigned char);$/;"	t
__gconv_end_fct	gconv.h	/^typedef void (*__gconv_end_fct) (struct __gconv_step *);$/;"	t
__gconv_fct	gconv.h	/^typedef int (*__gconv_fct) (struct __gconv_step *, struct __gconv_step_data *,$/;"	t
__gconv_info	gconv.h	/^typedef struct __gconv_info$/;"	s
__gconv_info::__flexarr	gconv.h	/^  __extension__ struct __gconv_step_data __data __flexarr;$/;"	m	struct:__gconv_info	typeref:struct:__gconv_info::__data	access:public
__gconv_info::__nsteps	gconv.h	/^  size_t __nsteps;$/;"	m	struct:__gconv_info	access:public
__gconv_info::__steps	gconv.h	/^  struct __gconv_step *__steps;$/;"	m	struct:__gconv_info	typeref:struct:__gconv_info::__gconv_step	access:public
__gconv_init_fct	gconv.h	/^typedef int (*__gconv_init_fct) (struct __gconv_step *);$/;"	t
__gconv_step	gconv.h	/^struct __gconv_step$/;"	s
__gconv_step::__btowc_fct	gconv.h	/^  __gconv_btowc_fct __btowc_fct;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__counter	gconv.h	/^  int __counter;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__data	gconv.h	/^  void *__data;		\/* Pointer to step-local data.  *\/$/;"	m	struct:__gconv_step	access:public
__gconv_step::__end_fct	gconv.h	/^  __gconv_end_fct __end_fct;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__fct	gconv.h	/^  __gconv_fct __fct;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__from_name	gconv.h	/^  char *__from_name;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__init_fct	gconv.h	/^  __gconv_init_fct __init_fct;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__max_needed_from	gconv.h	/^  int __max_needed_from;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__max_needed_to	gconv.h	/^  int __max_needed_to;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__min_needed_from	gconv.h	/^  int __min_needed_from;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__min_needed_to	gconv.h	/^  int __min_needed_to;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__modname	gconv.h	/^  __const char *__modname;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__shlib_handle	gconv.h	/^  struct __gconv_loaded_object *__shlib_handle;$/;"	m	struct:__gconv_step	typeref:struct:__gconv_step::__gconv_loaded_object	access:public
__gconv_step::__stateful	gconv.h	/^  int __stateful;$/;"	m	struct:__gconv_step	access:public
__gconv_step::__to_name	gconv.h	/^  char *__to_name;$/;"	m	struct:__gconv_step	access:public
__gconv_step_data	gconv.h	/^struct __gconv_step_data$/;"	s
__gconv_step_data::__flags	gconv.h	/^  int __flags;$/;"	m	struct:__gconv_step_data	access:public
__gconv_step_data::__internal_use	gconv.h	/^  int __internal_use;$/;"	m	struct:__gconv_step_data	access:public
__gconv_step_data::__invocation_counter	gconv.h	/^  int __invocation_counter;$/;"	m	struct:__gconv_step_data	access:public
__gconv_step_data::__outbuf	gconv.h	/^  unsigned char *__outbuf;    \/* Output buffer for this step.  *\/$/;"	m	struct:__gconv_step_data	access:public
__gconv_step_data::__outbufend	gconv.h	/^  unsigned char *__outbufend; \/* Address of first byte after the output$/;"	m	struct:__gconv_step_data	access:public
__gconv_step_data::__state	gconv.h	/^  __mbstate_t __state;	\/* This element must not be used directly by$/;"	m	struct:__gconv_step_data	access:public
__gconv_step_data::__statep	gconv.h	/^  __mbstate_t *__statep;$/;"	m	struct:__gconv_step_data	access:public
__gconv_step_data::__trans	gconv.h	/^  struct __gconv_trans_data *__trans;$/;"	m	struct:__gconv_step_data	typeref:struct:__gconv_step_data::__gconv_trans_data	access:public
__gconv_t	gconv.h	/^} *__gconv_t;$/;"	t	typeref:struct:__gconv_info
__gconv_trans_context_fct	gconv.h	/^typedef int (*__gconv_trans_context_fct) (void *, __const unsigned char *,$/;"	t
__gconv_trans_data	gconv.h	/^struct __gconv_trans_data$/;"	s
__gconv_trans_data::__data	gconv.h	/^  void *__data;$/;"	m	struct:__gconv_trans_data	access:public
__gconv_trans_data::__next	gconv.h	/^  struct __gconv_trans_data *__next;$/;"	m	struct:__gconv_trans_data	typeref:struct:__gconv_trans_data::__gconv_trans_data	access:public
__gconv_trans_data::__trans_context_fct	gconv.h	/^  __gconv_trans_context_fct __trans_context_fct;$/;"	m	struct:__gconv_trans_data	access:public
__gconv_trans_data::__trans_end_fct	gconv.h	/^  __gconv_trans_end_fct __trans_end_fct;$/;"	m	struct:__gconv_trans_data	access:public
__gconv_trans_data::__trans_fct	gconv.h	/^  __gconv_trans_fct __trans_fct;$/;"	m	struct:__gconv_trans_data	access:public
__gconv_trans_end_fct	gconv.h	/^typedef void (*__gconv_trans_end_fct) (void *);$/;"	t
__gconv_trans_fct	gconv.h	/^typedef int (*__gconv_trans_fct) (struct __gconv_step *,$/;"	t
__gconv_trans_init_fct	gconv.h	/^typedef int (*__gconv_trans_init_fct) (void **, const char *);$/;"	t
__gconv_trans_query_fct	gconv.h	/^typedef int (*__gconv_trans_query_fct) (__const char *, __const char ***,$/;"	t
__gid_t_defined	grp.h	40;"	d
__gid_t_defined	pwd.h	40;"	d
__gid_t_defined	stropts.h	28;"	d
__gid_t_defined	unistd.h	234;"	d
__gnuc_va_list	err.h	28;"	d
__gwchar_t	inttypes.h	/^typedef __WCHAR_TYPE__ __gwchar_t;$/;"	t
__gwchar_t	inttypes.h	/^typedef wchar_t __gwchar_t;$/;"	t
__gwchar_t	inttypes.h	33;"	d
__init	stdlib.h	/^    unsigned short int __init;	\/* Flag for initializing.  *\/$/;"	m	struct:drand48_data	access:public
__init_fct	gconv.h	/^  __gconv_init_fct __init_fct;$/;"	m	struct:__gconv_step	access:public
__ino64_t_defined	dirent.h	43;"	d
__ino_t_defined	dirent.h	39;"	d
__input_buffer	regexp.h	/^  char *__input_buffer = NULL;$/;"	l
__input_size	regexp.h	/^  size_t __input_size = 0;$/;"	l
__int8_t_defined	stdint.h	36;"	d
__int_n_cs_precedes	locale.h	/^  char __int_n_cs_precedes;$/;"	m	struct:lconv	access:public
__int_n_sep_by_space	locale.h	/^  char __int_n_sep_by_space;$/;"	m	struct:lconv	access:public
__int_n_sign_posn	locale.h	/^  char __int_n_sign_posn;$/;"	m	struct:lconv	access:public
__int_p_cs_precedes	locale.h	/^  char __int_p_cs_precedes;$/;"	m	struct:lconv	access:public
__int_p_sep_by_space	locale.h	/^  char __int_p_sep_by_space;$/;"	m	struct:lconv	access:public
__int_p_sign_posn	locale.h	/^  char __int_p_sign_posn;$/;"	m	struct:lconv	access:public
__internal_use	gconv.h	/^  int __internal_use;$/;"	m	struct:__gconv_step_data	access:public
__intptr_t_defined	stdint.h	121;"	d
__intptr_t_defined	stdint.h	127;"	d
__intptr_t_defined	unistd.h	269;"	d
__invocation_counter	gconv.h	/^  int __invocation_counter;$/;"	m	struct:__gconv_step_data	access:public
__io_close_fn	libio.h	/^typedef int __io_close_fn (void *__cookie);$/;"	t
__io_read_fn	libio.h	/^typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);$/;"	t
__io_seek_fn	libio.h	/^typedef int __io_seek_fn (void *__cookie, _IO_off64_t *__pos, int __w);$/;"	t
__io_write_fn	libio.h	/^typedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,$/;"	t
__isalnum_l	ctype.h	281;"	d
__isalpha_l	ctype.h	282;"	d
__isascii	ctype.h	91;"	d
__isascii_l	ctype.h	296;"	d
__isblank_l	ctype.h	293;"	d
__iscntrl_l	ctype.h	283;"	d
__isctype	ctype.h	88;"	d
__isctype_l	ctype.h	237;"	d
__isdigit_l	ctype.h	284;"	d
__isgraph_l	ctype.h	286;"	d
__isleap	time.h	304;"	d
__islower_l	ctype.h	285;"	d
__isoc99_fwscanf	wchar.h	/^extern int __isoc99_fwscanf (__FILE *__restrict __stream,$/;"	p	signature:(__FILE *__restrict __stream, __const wchar_t *__restrict __format, ...)
__isoc99_vfwscanf	wchar.h	/^extern int __isoc99_vfwscanf (__FILE *__restrict __s,$/;"	p	signature:(__FILE *__restrict __s, __const wchar_t *__restrict __format, __gnuc_va_list __arg)
__isoc99_vwscanf	wchar.h	/^extern int __isoc99_vwscanf (__const wchar_t *__restrict __format,$/;"	p	signature:(__const wchar_t *__restrict __format, __gnuc_va_list __arg)
__isoc99_wscanf	wchar.h	/^extern int __isoc99_wscanf (__const wchar_t *__restrict __format, ...);$/;"	p	signature:(__const wchar_t *__restrict __format, ...)
__isprint_l	ctype.h	287;"	d
__ispunct_l	ctype.h	288;"	d
__isspace_l	ctype.h	289;"	d
__isupper_l	ctype.h	290;"	d
__iswxxx_defined	wctype.h	48;"	d
__isxdigit_l	ctype.h	291;"	d
__jmp_buf_tag	setjmp.h	/^struct __jmp_buf_tag$/;"	s
__jmp_buf_tag::__jmpbuf	setjmp.h	/^    __jmp_buf __jmpbuf;		\/* Calling environment.  *\/$/;"	m	struct:__jmp_buf_tag	access:public
__jmp_buf_tag::__mask_was_saved	setjmp.h	/^    int __mask_was_saved;	\/* Saved the signal mask?  *\/$/;"	m	struct:__jmp_buf_tag	access:public
__jmp_buf_tag::__saved_mask	setjmp.h	/^    __sigset_t __saved_mask;	\/* Saved signal mask.  *\/$/;"	m	struct:__jmp_buf_tag	access:public
__jmpbuf	setjmp.h	/^    __jmp_buf __jmpbuf;		\/* Calling environment.  *\/$/;"	m	struct:__jmp_buf_tag	access:public
__key	argp.h	/^      int __key = __opt->key;$/;"	l
__ldiv_t_defined	stdlib.h	111;"	d
__lldiv_t_defined	stdlib.h	123;"	d
__locale_struct	xlocale.h	/^typedef struct __locale_struct$/;"	s
__locale_struct::__ctype_b	xlocale.h	/^  const unsigned short int *__ctype_b;$/;"	m	struct:__locale_struct	access:public
__locale_struct::__ctype_tolower	xlocale.h	/^  const int *__ctype_tolower;$/;"	m	struct:__locale_struct	access:public
__locale_struct::__ctype_toupper	xlocale.h	/^  const int *__ctype_toupper;$/;"	m	struct:__locale_struct	access:public
__locale_struct::__locales	xlocale.h	/^  struct __locale_data *__locales[13]; \/* 13 = __LC_LAST. *\/$/;"	m	struct:__locale_struct	typeref:struct:__locale_struct::__locale_data	access:public
__locale_struct::__names	xlocale.h	/^  const char *__names[13];$/;"	m	struct:__locale_struct	access:public
__locale_t	xlocale.h	/^} *__locale_t;$/;"	t	typeref:struct:__locale_struct
__locales	xlocale.h	/^  struct __locale_data *__locales[13]; \/* 13 = __LC_LAST. *\/$/;"	m	struct:__locale_struct	typeref:struct:__locale_struct::__locale_data	access:public
__malloc_and_calloc_defined	stdlib.h	468;"	d
__malloc_check_init	malloc.h	/^extern void __malloc_check_init __MALLOC_P ((void));$/;"	p	signature:(void)
__malloc_ptr_t	malloc.h	27;"	d
__malloc_ptrdiff_t	malloc.h	31;"	d
__malloc_size_t	malloc.h	30;"	d
__mask_was_saved	pthread.h	/^    int __mask_was_saved;$/;"	m	struct:__anon38::__anon39	access:public
__mask_was_saved	setjmp.h	/^    int __mask_was_saved;	\/* Saved the signal mask?  *\/$/;"	m	struct:__jmp_buf_tag	access:public
__max_needed_from	gconv.h	/^  int __max_needed_from;$/;"	m	struct:__gconv_step	access:public
__max_needed_to	gconv.h	/^  int __max_needed_to;$/;"	m	struct:__gconv_step	access:public
__mbstate_t	wchar.h	/^} __mbstate_t;$/;"	t	typeref:struct:__anon127
__mbstate_t_defined	wchar.h	81;"	d
__min_needed_from	gconv.h	/^  int __min_needed_from;$/;"	m	struct:__gconv_step	access:public
__min_needed_to	gconv.h	/^  int __min_needed_to;$/;"	m	struct:__gconv_step	access:public
__modname	gconv.h	/^  __const char *__modname;$/;"	m	struct:__gconv_step	access:public
__names	xlocale.h	/^  const char *__names[13];$/;"	m	struct:__locale_struct	access:public
__need_Emath	errno.h	37;"	d
__need_FILE	grp.h	54;"	d
__need_FILE	gshadow.h	28;"	d
__need_FILE	mntent.h	24;"	d
__need_FILE	printf.h	27;"	d
__need_FILE	pwd.h	63;"	d
__need_FILE	shadow.h	28;"	d
__need_FILE	stdio.h	37;"	d
__need_FILE	stdio.h	59;"	d
__need_FILE	wchar.h	35;"	d
__need_NULL	_G_config.h	14;"	d
__need_NULL	libintl.h	100;"	d
__need_NULL	locale.h	28;"	d
__need_NULL	stdio.h	33;"	d
__need_NULL	stdlib.h	31;"	d
__need_NULL	string.h	33;"	d
__need_NULL	time.h	37;"	d
__need_NULL	unistd.h	226;"	d
__need_NULL	wchar.h	47;"	d
__need___FILE	stdio.h	38;"	d
__need___FILE	stdio.h	69;"	d
__need___FILE	wchar.h	33;"	d
__need___va_list	err.h	25;"	d
__need___va_list	libio.h	52;"	d
__need___va_list	wchar.h	39;"	d
__need_clock_t	time.h	67;"	d
__need_error_t	argp.h	30;"	d
__need_error_t	argz.h	25;"	d
__need_error_t	errno.h	72;"	d
__need_getopt	getopt.h	191;"	d
__need_getopt	stdio.h	920;"	d
__need_getopt	unistd.h	889;"	d
__need_iswxxx	wchar.h	876;"	d
__need_iswxxx	wctype.h	42;"	d
__need_malloc_and_calloc	stdlib.h	962;"	d
__need_mbstate_t	_G_config.h	16;"	d
__need_mbstate_t	gconv.h	27;"	d
__need_mbstate_t	wchar.h	897;"	d
__need_mbstate_t	wchar.h	97;"	d
__need_res_state	resolv.h	152;"	d
__need_sig_atomic_t	signal.h	44;"	d
__need_sigevent_t	mqueue.h	25;"	d
__need_sigevent_t	netdb.h	37;"	d
__need_sigset_t	signal.h	52;"	d
__need_size_t	_G_config.h	10;"	d
__need_size_t	alloca.h	24;"	d
__need_size_t	dirent.h	244;"	d
__need_size_t	dlfcn.h	24;"	d
__need_size_t	gconv.h	30;"	d
__need_size_t	grp.h	178;"	d
__need_size_t	grp.h	33;"	d
__need_size_t	gshadow.h	30;"	d
__need_size_t	iconv.h	23;"	d
__need_size_t	monetary.h	27;"	d
__need_size_t	printf.h	29;"	d
__need_size_t	pwd.h	32;"	d
__need_size_t	sched.h	29;"	d
__need_size_t	search.h	25;"	d
__need_size_t	shadow.h	30;"	d
__need_size_t	signal.h	348;"	d
__need_size_t	stdio.h	32;"	d
__need_size_t	stdlib.h	28;"	d
__need_size_t	string.h	32;"	d
__need_size_t	strings.h	29;"	d
__need_size_t	time.h	36;"	d
__need_size_t	unistd.h	225;"	d
__need_size_t	wchar.h	45;"	d
__need_size_t	wordexp.h	23;"	d
__need_time_t	sched.h	32;"	d
__need_time_t	time.h	83;"	d
__need_time_t	utime.h	33;"	d
__need_timer_t	time.h	107;"	d
__need_timespec	fcntl.h	39;"	d
__need_timespec	mqueue.h	27;"	d
__need_timespec	netdb.h	39;"	d
__need_timespec	sched.h	33;"	d
__need_timespec	semaphore.h	25;"	d
__need_timespec	signal.h	75;"	d
__need_timespec	time.h	127;"	d
__need_wchar_t	_G_config.h	12;"	d
__need_wchar_t	gconv.h	31;"	d
__need_wchar_t	inttypes.h	37;"	d
__need_wchar_t	printf.h	30;"	d
__need_wchar_t	stdlib.h	30;"	d
__need_wchar_t	wchar.h	46;"	d
__need_wint_t	_G_config.h	18;"	d
__need_wint_t	gconv.h	28;"	d
__need_wint_t	wchar.h	50;"	d
__need_wint_t	wchar.h	51;"	d
__need_wint_t	wchar.h	898;"	d
__need_wint_t	wctype.h	33;"	d
__new_room	regexp.h	/^	  char *__new_room = (char *) alloca (__new_size);$/;"	l
__new_size	regexp.h	/^	  size_t __new_size = __input_size ? 2 * __input_size : 128;$/;"	l
__next	gconv.h	/^  struct __gconv_trans_data *__next;$/;"	m	struct:__gconv_trans_data	typeref:struct:__gconv_trans_data::__gconv_trans_data	access:public
__next_prio	aio.h	/^  struct aiocb *__next_prio;$/;"	m	struct:aiocb	typeref:struct:aiocb::aiocb	access:public
__next_prio	aio.h	/^  struct aiocb *__next_prio;$/;"	m	struct:aiocb64	typeref:struct:aiocb64::aiocb	access:public
__nftw64_func_t	ftw.h	/^typedef int (*__nftw64_func_t) (__const char *__filename,$/;"	t
__nftw_func_t	ftw.h	/^typedef int (*__nftw_func_t) (__const char *__filename,$/;"	t
__nsteps	gconv.h	/^  size_t __nsteps;$/;"	m	struct:__gconv_info	access:public
__off64_t_defined	stdio.h	99;"	d
__off64_t_defined	unistd.h	252;"	d
__off_t_defined	stdio.h	95;"	d
__off_t_defined	unistd.h	248;"	d
__old_x	stdlib.h	/^    unsigned short int __old_x[3]; \/* Old state.  *\/$/;"	m	struct:drand48_data	access:public
__option_is_end	argp.h	/^__NTH (__option_is_end (__const struct argp_option *__opt))$/;"	f	signature:(__const struct argp_option *__opt)
__option_is_end	argp.h	558;"	d
__option_is_end	argp.h	593;"	d
__option_is_short	argp.h	/^__NTH (__option_is_short (__const struct argp_option *__opt))$/;"	f	signature:(__const struct argp_option *__opt)
__option_is_short	argp.h	557;"	d
__option_is_short	argp.h	592;"	d
__outbuf	gconv.h	/^  unsigned char *__outbuf;    \/* Output buffer for this step.  *\/$/;"	m	struct:__gconv_step_data	access:public
__outbufend	gconv.h	/^  unsigned char *__outbufend; \/* Address of first byte after the output$/;"	m	struct:__gconv_step_data	access:public
__overflow	libio.h	/^extern int __overflow (_IO_FILE *, int);$/;"	p	signature:(_IO_FILE *, int)
__pad	aio.h	/^  char __pad[sizeof (__off64_t) - sizeof (__off_t)];$/;"	m	struct:aiocb	access:public
__pad	printf.h	/^  unsigned int __pad:4;		\/* Unused so far.  *\/$/;"	m	struct:printf_info	access:public
__pad	pthread.h	/^  void *__pad[4];$/;"	m	struct:__anon38	access:public
__pad	spawn.h	/^  int __pad[16];$/;"	m	struct:__anon132	access:public
__pad	spawn.h	/^  int __pad[16];$/;"	m	struct:__anon133	access:public
__pad1	libio.h	/^  void *__pad1;$/;"	m	struct:_IO_FILE_complete	access:public
__pad2	libio.h	/^  void *__pad2;$/;"	m	struct:_IO_FILE_complete	access:public
__pad3	libio.h	/^  void *__pad3;$/;"	m	struct:_IO_FILE_complete	access:public
__pad4	libio.h	/^  void *__pad4;$/;"	m	struct:_IO_FILE_complete	access:public
__pad5	libio.h	/^  size_t __pad5;$/;"	m	struct:_IO_FILE_complete	access:public
__pgrp	spawn.h	/^  pid_t __pgrp;$/;"	m	struct:__anon132	access:public
__pid_t_defined	sched.h	38;"	d
__pid_t_defined	signal.h	63;"	d
__pid_t_defined	termios.h	32;"	d
__pid_t_defined	time.h	175;"	d
__pid_t_defined	unistd.h	262;"	d
__pid_t_defined	utmpx.h	28;"	d
__policy	aio.h	/^  int __policy;$/;"	m	struct:aiocb	access:public
__policy	aio.h	/^  int __policy;$/;"	m	struct:aiocb64	access:public
__policy	spawn.h	/^  int __policy;$/;"	m	struct:__anon132	access:public
__pos	_G_config.h	/^  __off64_t __pos;$/;"	m	struct:__anon17	access:public
__pos	_G_config.h	/^  __off_t __pos;$/;"	m	struct:__anon16	access:public
__prev	pthread.h	/^  struct _pthread_cleanup_buffer *__prev; \/* Chaining of cleanup functions.  *\/$/;"	m	struct:_pthread_cleanup_buffer	typeref:struct:_pthread_cleanup_buffer::_pthread_cleanup_buffer	access:public
__printf__	argp.h	53;"	d
__printf__	autosprintf.h	31;"	d
__pthread_cleanup_class	pthread.h	/^  __pthread_cleanup_class (void (*__fct) (void *), void *__arg)$/;"	f	class:__pthread_cleanup_class	access:public	signature:(void (*__fct) (void *), void *__arg)
__pthread_cleanup_class	pthread.h	/^class __pthread_cleanup_class$/;"	c
__pthread_cleanup_class::__cancel_arg	pthread.h	/^  void *__cancel_arg;$/;"	m	class:__pthread_cleanup_class	access:private
__pthread_cleanup_class::__cancel_routine	pthread.h	/^  void (*__cancel_routine) (void *);$/;"	m	class:__pthread_cleanup_class	access:private
__pthread_cleanup_class::__cancel_type	pthread.h	/^  int __cancel_type;$/;"	m	class:__pthread_cleanup_class	access:private
__pthread_cleanup_class::__defer	pthread.h	/^  void __defer () { pthread_setcanceltype (PTHREAD_CANCEL_DEFERRED,$/;"	f	class:__pthread_cleanup_class	access:public	signature:()
__pthread_cleanup_class::__do_it	pthread.h	/^  int __do_it;$/;"	m	class:__pthread_cleanup_class	access:private
__pthread_cleanup_class::__pthread_cleanup_class	pthread.h	/^  __pthread_cleanup_class (void (*__fct) (void *), void *__arg)$/;"	f	class:__pthread_cleanup_class	access:public	signature:(void (*__fct) (void *), void *__arg)
__pthread_cleanup_class::__restore	pthread.h	/^  void __restore () const { pthread_setcanceltype (__cancel_type, 0); }$/;"	f	class:__pthread_cleanup_class	access:public	signature:() const
__pthread_cleanup_class::__setdoit	pthread.h	/^  void __setdoit (int __newval) { __do_it = __newval; }$/;"	f	class:__pthread_cleanup_class	access:public	signature:(int __newval)
__pthread_cleanup_class::~__pthread_cleanup_class	pthread.h	/^  ~__pthread_cleanup_class () { if (__do_it) __cancel_routine (__cancel_arg); }$/;"	f	class:__pthread_cleanup_class	access:public	signature:()
__pthread_cleanup_frame	pthread.h	/^struct __pthread_cleanup_frame$/;"	s
__pthread_cleanup_frame::__cancel_arg	pthread.h	/^  void *__cancel_arg;$/;"	m	struct:__pthread_cleanup_frame	access:public
__pthread_cleanup_frame::__cancel_routine	pthread.h	/^  void (*__cancel_routine) (void *);$/;"	m	struct:__pthread_cleanup_frame	access:public
__pthread_cleanup_frame::__cancel_type	pthread.h	/^  int __cancel_type;$/;"	m	struct:__pthread_cleanup_frame	access:public
__pthread_cleanup_frame::__do_it	pthread.h	/^  int __do_it;$/;"	m	struct:__pthread_cleanup_frame	access:public
__pthread_cleanup_routine	pthread.h	/^__pthread_cleanup_routine (struct __pthread_cleanup_frame *__frame)$/;"	f	signature:(struct __pthread_cleanup_frame *__frame)
__pthread_unwind_buf_t	pthread.h	/^} __pthread_unwind_buf_t __attribute__ ((__aligned__));$/;"	t	typeref:struct:__anon38
__req	regexp.h	/^  const size_t __req = 8;$/;"	l
__req	regexp.h	/^  const size_t __req = __alignof__ (regex_t *);$/;"	l
__res_state	resolv.h	/^extern struct __res_state *__res_state(void) __attribute__ ((__const__));$/;"	p	signature:(void)
__res_state	resolv.h	/^struct __res_state {$/;"	s
__res_state::__anon41::addr	resolv.h	/^		struct in_addr	addr;$/;"	m	struct:__res_state::__anon41	typeref:struct:__res_state::__anon41::in_addr	access:public
__res_state::__anon41::mask	resolv.h	/^		u_int32_t	mask;$/;"	m	struct:__res_state::__anon41	access:public
__res_state::__anon42::__anon43::_initstamp	resolv.h	/^			unsigned int		_initstamp[2];$/;"	m	struct:__res_state::__anon42::__anon43	access:public
__res_state::__anon42::__anon43::initstamp	resolv.h	/^			unsigned long long int	initstamp$/;"	m	struct:__res_state::__anon42::__anon43	access:public
__res_state::__anon42::__anon43::nsaddrs	resolv.h	/^			struct sockaddr_in6	*nsaddrs[MAXNS];$/;"	m	struct:__res_state::__anon42::__anon43	typeref:struct:__res_state::__anon42::__anon43::sockaddr_in6	access:public
__res_state::__anon42::__anon43::nscount	resolv.h	/^			u_int16_t		nscount;$/;"	m	struct:__res_state::__anon42::__anon43	access:public
__res_state::__anon42::__anon43::nscount6	resolv.h	/^			u_int16_t		nscount6;$/;"	m	struct:__res_state::__anon42::__anon43	access:public
__res_state::__anon42::__anon43::nsinit	resolv.h	/^			u_int16_t		nsinit;$/;"	m	struct:__res_state::__anon42::__anon43	access:public
__res_state::__anon42::__anon43::nsmap	resolv.h	/^			u_int16_t		nsmap[MAXNS];$/;"	m	struct:__res_state::__anon42::__anon43	access:public
__res_state::__anon42::__anon43::nssocks	resolv.h	/^			int			nssocks[MAXNS];$/;"	m	struct:__res_state::__anon42::__anon43	access:public
__res_state::__anon42::_ext	resolv.h	/^		} _ext;$/;"	m	union:__res_state::__anon42	typeref:struct:__res_state::__anon42::__anon43	access:public
__res_state::__anon42::pad	resolv.h	/^		char	pad[52];	\/* On an i386 this means 512b total. *\/$/;"	m	union:__res_state::__anon42	access:public
__res_state::_flags	resolv.h	/^	u_int	_flags;			\/* PRIVATE: see below *\/$/;"	m	struct:__res_state	access:public
__res_state::_u	resolv.h	/^	} _u;$/;"	m	struct:__res_state	typeref:union:__res_state::__anon42	access:public
__res_state::_vcsock	resolv.h	/^	int	_vcsock;		\/* PRIVATE: for res_send VC i\/o *\/$/;"	m	struct:__res_state	access:public
__res_state::defdname	resolv.h	/^	char	defdname[256];		\/* default domain (deprecated) *\/$/;"	m	struct:__res_state	access:public
__res_state::dnsrch	resolv.h	/^	char	*dnsrch[MAXDNSRCH+1];	\/* components of domain to search *\/$/;"	m	struct:__res_state	access:public
__res_state::id	resolv.h	/^	u_short	id;			\/* current message id *\/$/;"	m	struct:__res_state	access:public
__res_state::ipv6_unavail	resolv.h	/^	unsigned ipv6_unavail:1;	\/* connecting to IPv6 server failed *\/$/;"	m	struct:__res_state	access:public
__res_state::ndots	resolv.h	/^	unsigned ndots:4;		\/* threshold for initial abs. query *\/$/;"	m	struct:__res_state	access:public
__res_state::nsaddr_list	resolv.h	/^		nsaddr_list[MAXNS];	\/* address of name server *\/$/;"	m	struct:__res_state	typeref:struct:__res_state::sockaddr_in	access:public
__res_state::nscount	resolv.h	/^	int	nscount;		\/* number of name servers *\/$/;"	m	struct:__res_state	access:public
__res_state::nsort	resolv.h	/^	unsigned nsort:4;		\/* number of elements in sort_list[] *\/$/;"	m	struct:__res_state	access:public
__res_state::options	resolv.h	/^	u_long	options;		\/* option flags - see below. *\/$/;"	m	struct:__res_state	access:public
__res_state::pfcode	resolv.h	/^	u_long	pfcode;			\/* RES_PRF_ flags - see below. *\/$/;"	m	struct:__res_state	access:public
__res_state::qhook	resolv.h	/^	res_send_qhook qhook;		\/* query hook *\/$/;"	m	struct:__res_state	access:public
__res_state::res_h_errno	resolv.h	/^	int	res_h_errno;		\/* last one set for this context *\/$/;"	m	struct:__res_state	access:public
__res_state::retrans	resolv.h	/^	int	retrans;		\/* retransmition time interval *\/$/;"	m	struct:__res_state	access:public
__res_state::retry	resolv.h	/^	int	retry;			\/* number of times to retransmit *\/$/;"	m	struct:__res_state	access:public
__res_state::rhook	resolv.h	/^	res_send_rhook rhook;		\/* response hook *\/$/;"	m	struct:__res_state	access:public
__res_state::sort_list	resolv.h	/^	} sort_list[MAXRESOLVSORT];$/;"	m	struct:__res_state	typeref:struct:__res_state::__anon41	access:public
__res_state::unused	resolv.h	/^	unsigned unused:23;$/;"	m	struct:__res_state	access:public
__res_state_defined	resolv.h	69;"	d
__restore	pthread.h	/^  void __restore () const { pthread_setcanceltype (__cancel_type, 0); }$/;"	f	class:__pthread_cleanup_class	access:public	signature:() const
__restrict	argp.h	62;"	d
__restrict	argp.h	64;"	d
__restrict	regex.h	550;"	d
__restrict	regex.h	552;"	d
__restrict_arr	regex.h	560;"	d
__restrict_arr	regex.h	562;"	d
__return	netdb.h	/^  int __return;$/;"	m	struct:gaicb	access:public
__return_value	aio.h	/^  __ssize_t __return_value;$/;"	m	struct:aiocb	access:public
__return_value	aio.h	/^  __ssize_t __return_value;$/;"	m	struct:aiocb64	access:public
__routine	pthread.h	/^  void (*__routine) (void *);             \/* Function to call.  *\/$/;"	m	struct:_pthread_cleanup_buffer	access:public
__saved_mask	setjmp.h	/^    __sigset_t __saved_mask;	\/* Saved signal mask.  *\/$/;"	m	struct:__jmp_buf_tag	access:public
__sd	spawn.h	/^  sigset_t __sd;$/;"	m	struct:__anon132	access:public
__setdoit	pthread.h	/^  void __setdoit (int __newval) { __do_it = __newval; }$/;"	f	class:__pthread_cleanup_class	access:public	signature:(int __newval)
__shlib_handle	gconv.h	/^  struct __gconv_loaded_object *__shlib_handle;$/;"	m	struct:__gconv_step	typeref:struct:__gconv_step::__gconv_loaded_object	access:public
__sig_atomic_t_defined	signal.h	39;"	d
__sighandler_t	signal.h	/^typedef void (*__sighandler_t) (int);$/;"	t
__sigpause	signal.h	/^extern int __sigpause (int __sig_or_mask, int __is_sig);$/;"	p	signature:(int __sig_or_mask, int __is_sig)
__sigset_t_defined	signal.h	49;"	d
__size_t	glob.h	/^typedef __SIZE_TYPE__ __size_t;$/;"	t
__socklen_t_defined	unistd.h	276;"	d
__sp	spawn.h	/^  struct sched_param __sp;$/;"	m	struct:__anon132	typeref:struct:__anon132::sched_param	access:public
__ss	spawn.h	/^  sigset_t __ss;$/;"	m	struct:__anon132	access:public
__ssize_t_defined	monetary.h	33;"	d
__ssize_t_defined	stdio.h	104;"	d
__ssize_t_defined	unistd.h	222;"	d
__stab_debug_code	stab.h	/^enum __stab_debug_code$/;"	g
__state	_G_config.h	/^  __mbstate_t __state;$/;"	m	struct:__anon16	access:public
__state	_G_config.h	/^  __mbstate_t __state;$/;"	m	struct:__anon17	access:public
__state	gconv.h	/^  __mbstate_t __state;	\/* This element must not be used directly by$/;"	m	struct:__gconv_step_data	access:public
__stateful	gconv.h	/^  int __stateful;$/;"	m	struct:__gconv_step	access:public
__statep	gconv.h	/^  __mbstate_t *__statep;$/;"	m	struct:__gconv_step_data	access:public
__steps	gconv.h	/^  struct __gconv_step *__steps;$/;"	m	struct:__gconv_info	typeref:struct:__gconv_info::__gconv_step	access:public
__td_eventmask	thread_db.h	122;"	d
__td_eventword	thread_db.h	124;"	d
__tgmath_real_type	tgmath.h	67;"	d
__tgmath_real_type_sub	tgmath.h	62;"	d
__tgml	tgmath.h	41;"	d
__tgml	tgmath.h	43;"	d
__time_t_defined	time.h	70;"	d
__timer_t_defined	time.h	99;"	d
__timespec_defined	time.h	114;"	d
__tm_gmtoff	time.h	/^  long int __tm_gmtoff;		\/* Seconds east of UTC.  *\/$/;"	m	struct:tm	access:public
__tm_zone	time.h	/^  __const char *__tm_zone;	\/* Timezone abbreviation.  *\/$/;"	m	struct:tm	access:public
__to_name	gconv.h	/^  char *__to_name;$/;"	m	struct:__gconv_step	access:public
__toascii	ctype.h	92;"	d
__toascii_l	ctype.h	297;"	d
__tobody	ctype.h	155;"	d
__tolower_l	ctype.h	271;"	d
__toupper_l	ctype.h	273;"	d
__trans	gconv.h	/^  struct __gconv_trans_data *__trans;$/;"	m	struct:__gconv_step_data	typeref:struct:__gconv_step_data::__gconv_trans_data	access:public
__trans_context_fct	gconv.h	/^  __gconv_trans_context_fct __trans_context_fct;$/;"	m	struct:__gconv_trans_data	access:public
__trans_end_fct	gconv.h	/^  __gconv_trans_end_fct __trans_end_fct;$/;"	m	struct:__gconv_trans_data	access:public
__trans_fct	gconv.h	/^  __gconv_trans_fct __trans_fct;$/;"	m	struct:__gconv_trans_data	access:public
__uflow	libio.h	/^extern int __uflow (_IO_FILE *);$/;"	p	signature:(_IO_FILE *)
__uid_t_defined	pwd.h	45;"	d
__uid_t_defined	signal.h	69;"	d
__uid_t_defined	stropts.h	33;"	d
__uid_t_defined	unistd.h	239;"	d
__uint32_t_defined	stdint.h	53;"	d
__underflow	libio.h	/^extern int __underflow (_IO_FILE *);$/;"	p	signature:(_IO_FILE *)
__unused	aio.h	/^  char __unused[32];$/;"	m	struct:aiocb	access:public
__unused	aio.h	/^  char __unused[32];$/;"	m	struct:aiocb64	access:public
__unused	netdb.h	/^  int __unused[5];$/;"	m	struct:gaicb	access:public
__useconds_t_defined	unistd.h	257;"	d
__used	spawn.h	/^  int __used;$/;"	m	struct:__anon133	access:public
__value	wchar.h	/^  } __value;		\/* Value so far.  *\/$/;"	m	struct:__anon127	typeref:union:__anon127::__anon128	access:public
__wch	wchar.h	/^    __WINT_TYPE__ __wch;$/;"	m	union:__anon127::__anon128	access:public
__wchb	wchar.h	/^    char __wchb[4];$/;"	m	union:__anon127::__anon128	access:public
__woverflow	libio.h	/^extern _IO_wint_t __woverflow (_IO_FILE *, _IO_wint_t);$/;"	p	signature:(_IO_FILE *, _IO_wint_t)
__wuflow	libio.h	/^extern _IO_wint_t __wuflow (_IO_FILE *);$/;"	p	signature:(_IO_FILE *)
__wunderflow	libio.h	/^extern _IO_wint_t __wunderflow (_IO_FILE *);$/;"	p	signature:(_IO_FILE *)
__wur	malloc.h	/^       __attribute_malloc__ __wur;$/;"	v
__wur	malloc.h	/^extern void *malloc __MALLOC_P ((size_t __size)) __attribute_malloc__ __wur;$/;"	v
__wur	stdio.h	/^			  _IO_cookie_io_functions_t __io_funcs) __THROW __wur;$/;"	v
__wur	stdio.h	/^     __THROW __attribute__ ((__format__ (__printf__, 2, 0))) __wur;$/;"	v
__wur	stdio.h	/^     __THROW __attribute__ ((__format__ (__printf__, 2, 3))) __wur;$/;"	v
__wur	stdio.h	/^     __THROW __attribute_malloc__ __wur;$/;"	v
__wur	stdio.h	/^  __THROW __wur;$/;"	v
__wur	stdio.h	/^extern FILE *fdopen (int __fd, __const char *__modes) __THROW __wur;$/;"	v
__wur	stdio.h	/^extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __THROW __wur;$/;"	v
__wur	stdio.h	/^extern char *tmpnam (char *__s) __THROW __wur;$/;"	v
__wur	stdio.h	/^extern char *tmpnam_r (char *__s) __THROW __wur;$/;"	v
__wur	stdio.h	/^extern int feof (FILE *__stream) __THROW __wur;$/;"	v
__wur	stdio.h	/^extern int feof_unlocked (FILE *__stream) __THROW __wur;$/;"	v
__wur	stdio.h	/^extern int ferror (FILE *__stream) __THROW __wur;$/;"	v
__wur	stdio.h	/^extern int ferror_unlocked (FILE *__stream) __THROW __wur;$/;"	v
__wur	stdio.h	/^extern int fileno (FILE *__stream) __THROW __wur;$/;"	v
__wur	stdio.h	/^extern int fileno_unlocked (FILE *__stream) __THROW __wur;$/;"	v
__wur	stdio.h	/^extern int ftrylockfile (FILE *__stream) __THROW __wur;$/;"	v
__wur	stdlib.h	/^		       char *__restrict __resolved) __THROW __wur;$/;"	v
__wur	stdlib.h	/^		   __const char *__restrict __s, size_t __n) __THROW __wur;$/;"	v
__wur	stdlib.h	/^     __THROW __attribute__ ((__const__)) __wur;$/;"	v
__wur	stdlib.h	/^     __THROW __attribute_malloc__ __wur;$/;"	v
__wur	stdlib.h	/^extern char *l64a (long int __n) __THROW __wur;$/;"	v
__wur	stdlib.h	/^extern char *ptsname (int __fd) __THROW __wur;$/;"	v
__wur	stdlib.h	/^extern int abs (int __x) __THROW __attribute__ ((__const__)) __wur;$/;"	v
__wur	stdlib.h	/^extern int mblen (__const char *__s, size_t __n) __THROW __wur;$/;"	v
__wur	stdlib.h	/^extern int wctomb (char *__s, wchar_t __wchar) __THROW __wur;$/;"	v
__wur	stdlib.h	/^extern long int labs (long int __x) __THROW __attribute__ ((__const__)) __wur;$/;"	v
__wur	stdlib.h	/^extern size_t __ctype_get_mb_cur_max (void) __THROW __wur;$/;"	v
__wur	stdlib.h	/^extern void *malloc (size_t __size) __THROW __attribute_malloc__ __wur;$/;"	v
__wur	stdlib.h	/^extern void *valloc (size_t __size) __THROW __attribute_malloc__ __wur;$/;"	v
__wur	unistd.h	/^     __THROW __nonnull ((1)) __attribute_deprecated__ __wur;$/;"	v
__wur	unistd.h	/^extern char *getcwd (char *__buf, size_t __size) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int brk (void *__addr) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int daemon (int __nochdir, int __noclose) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int dup (int __fd) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int fchdir (int __fd) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int fchown (int __fd, __uid_t __owner, __gid_t __group) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int ftruncate (int __fd, __off_t __length) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int ftruncate64 (int __fd, __off64_t __length) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int getgroups (int __size, __gid_t __list[]) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int nice (int __inc) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int pipe (int __pipedes[2]) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int pipe2 (int __pipedes[2], int __flags) __THROW __wur;$/;"	v
__wur	unistd.h	/^extern int sethostid (long int __id) __THROW __wur;$/;"	v
__x	stdlib.h	/^    unsigned short int __x[3];	\/* Current state.  *\/$/;"	m	struct:drand48_data	access:public
_chain	libio.h	/^  struct _IO_FILE *_chain;$/;"	m	struct:_IO_FILE	typeref:struct:_IO_FILE::_IO_FILE	access:public
_codecvt	libio.h	/^  struct _IO_codecvt *_codecvt;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_codecvt	access:public
_codecvt	libio.h	/^  struct _IO_codecvt _codecvt;$/;"	m	struct:_IO_wide_data	typeref:struct:_IO_wide_data::_IO_codecvt	access:public
_cur_column	libio.h	/^  unsigned short _cur_column;$/;"	m	struct:_IO_FILE	access:public
_dist_code	zconf.h	20;"	d
_exit	unistd.h	/^extern void _exit (int __status) __attribute__ ((__noreturn__));$/;"	p	signature:(int __status)
_ext	resolv.h	/^		} _ext;$/;"	m	union:__res_state::__anon42	typeref:struct:__res_state::__anon42::__anon43	access:public
_file	libio.h	/^  struct _IO_FILE _file;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_FILE	access:public
_fileno	libio.h	/^  int _fileno;$/;"	m	struct:_IO_FILE	access:public
_flags	libio.h	/^  int _flags;		\/* High-order word is _IO_MAGIC; rest is flags. *\/$/;"	m	struct:_IO_FILE	access:public
_flags	resolv.h	/^	u_int	_flags;			\/* PRIVATE: see below *\/$/;"	m	struct:__res_state	access:public
_flags2	libio.h	/^  int _flags2;$/;"	m	struct:_IO_FILE	access:public
_flushlbf	stdio_ext.h	/^extern void _flushlbf (void);$/;"	p	signature:(void)
_freeres_buf	libio.h	/^  void *_freeres_buf;$/;"	m	struct:_IO_FILE_complete	access:public
_freeres_list	libio.h	/^  struct _IO_FILE *_freeres_list;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_FILE	access:public
_freeres_size	libio.h	/^  size_t _freeres_size;$/;"	m	struct:_IO_FILE_complete	access:public
_ftsent	fts.h	/^typedef struct _ftsent {$/;"	s
_ftsent::fts_accpath	fts.h	/^	char *fts_accpath;		\/* access path *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_cycle	fts.h	/^	struct _ftsent *fts_cycle;	\/* cycle node *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
_ftsent::fts_dev	fts.h	/^	dev_t fts_dev;			\/* device *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_errno	fts.h	/^	int fts_errno;			\/* errno for this node *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_flags	fts.h	/^	u_short fts_flags;		\/* private flags for FTSENT structure *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_info	fts.h	/^	u_short fts_info;		\/* user flags for FTSENT structure *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_ino	fts.h	/^	ino_t fts_ino;			\/* inode *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_instr	fts.h	/^	u_short fts_instr;		\/* fts_set() instructions *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_level	fts.h	/^	short fts_level;		\/* depth (-1 to N) *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_link	fts.h	/^	struct _ftsent *fts_link;	\/* next file in directory *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
_ftsent::fts_name	fts.h	/^	char fts_name[1];		\/* file name *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_namelen	fts.h	/^	u_short fts_namelen;		\/* strlen(fts_name) *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_nlink	fts.h	/^	nlink_t fts_nlink;		\/* link count *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_number	fts.h	/^	long fts_number;	        \/* local numeric value *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_parent	fts.h	/^	struct _ftsent *fts_parent;	\/* parent directory *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
_ftsent::fts_path	fts.h	/^	char *fts_path;			\/* root path *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_pathlen	fts.h	/^	u_short fts_pathlen;		\/* strlen(fts_path) *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_pointer	fts.h	/^	void *fts_pointer;	        \/* local address value *\/$/;"	m	struct:_ftsent	access:public
_ftsent::fts_statp	fts.h	/^	struct stat *fts_statp;		\/* stat(2) information *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::stat	access:public
_ftsent::fts_symfd	fts.h	/^	int fts_symfd;			\/* fd for symlink *\/$/;"	m	struct:_ftsent	access:public
_initstamp	resolv.h	/^			unsigned int		_initstamp[2];$/;"	m	struct:__res_state::__anon42::__anon43	access:public
_length_code	zconf.h	21;"	d
_lock	libio.h	/^  _IO_lock_t *_lock;$/;"	m	struct:_IO_FILE	access:public
_markers	libio.h	/^  struct _IO_marker *_markers;$/;"	m	struct:_IO_FILE	typeref:struct:_IO_FILE::_IO_marker	access:public
_mode	libio.h	/^  int _mode;$/;"	m	struct:_IO_FILE_complete	access:public
_next	libio.h	/^  struct _IO_marker *_next;$/;"	m	struct:_IO_marker	typeref:struct:_IO_marker::_IO_marker	access:public
_obstack_begin	obstack.h	/^extern int _obstack_begin (struct obstack *, int, int,$/;"	p	signature:(struct obstack *, int, int, void *(*) (long), void (*) (void *))
_obstack_begin_1	obstack.h	/^extern int _obstack_begin_1 (struct obstack *, int, int,$/;"	p	signature:(struct obstack *, int, int, void *(*) (void *, long), void (*) (void *, void *), void *)
_obstack_chunk	obstack.h	/^struct _obstack_chunk		\/* Lives at front of each chunk. *\/$/;"	s
_obstack_chunk::contents	obstack.h	/^  char	contents[4];		\/* objects begin here *\/$/;"	m	struct:_obstack_chunk	access:public
_obstack_chunk::limit	obstack.h	/^  char  *limit;			\/* 1 past end of this chunk *\/$/;"	m	struct:_obstack_chunk	access:public
_obstack_chunk::prev	obstack.h	/^  struct _obstack_chunk *prev;	\/* address of prior chunk or NULL *\/$/;"	m	struct:_obstack_chunk	typeref:struct:_obstack_chunk::_obstack_chunk	access:public
_obstack_memory_used	obstack.h	/^extern int _obstack_memory_used (struct obstack *);$/;"	p	signature:(struct obstack *)
_obstack_newchunk	obstack.h	/^extern void _obstack_newchunk (struct obstack *, int);$/;"	p	signature:(struct obstack *, int)
_offset	libio.h	/^  _IO_off64_t _offset;$/;"	m	struct:_IO_FILE_complete	access:public
_old_offset	libio.h	/^  _IO_off_t _old_offset; \/* This used to be _offset but it's too small.  *\/$/;"	m	struct:_IO_FILE	access:public
_pos	libio.h	/^  int _pos;$/;"	m	struct:_IO_marker	access:public
_pthread_cleanup_buffer	pthread.h	/^struct _pthread_cleanup_buffer$/;"	s
_pthread_cleanup_buffer::__arg	pthread.h	/^  void *__arg;                            \/* Its argument.  *\/$/;"	m	struct:_pthread_cleanup_buffer	access:public
_pthread_cleanup_buffer::__canceltype	pthread.h	/^  int __canceltype;                       \/* Saved cancellation type. *\/$/;"	m	struct:_pthread_cleanup_buffer	access:public
_pthread_cleanup_buffer::__prev	pthread.h	/^  struct _pthread_cleanup_buffer *__prev; \/* Chaining of cleanup functions.  *\/$/;"	m	struct:_pthread_cleanup_buffer	typeref:struct:_pthread_cleanup_buffer::_pthread_cleanup_buffer	access:public
_pthread_cleanup_buffer::__routine	pthread.h	/^  void (*__routine) (void *);             \/* Function to call.  *\/$/;"	m	struct:_pthread_cleanup_buffer	access:public
_res	resolv.h	251;"	d
_sbuf	libio.h	/^  struct _IO_FILE *_sbuf;$/;"	m	struct:_IO_marker	typeref:struct:_IO_marker::_IO_FILE	access:public
_shortbuf	libio.h	/^  char _shortbuf[1];$/;"	m	struct:_IO_FILE	access:public
_shortbuf	libio.h	/^  wchar_t _shortbuf[1];$/;"	m	struct:_IO_wide_data	access:public
_tolower	ctype.h	/^__exctype (_tolower);$/;"	v
_tolower	ctype.h	212;"	d
_toupper	ctype.h	/^__exctype (_toupper);$/;"	v
_toupper	ctype.h	213;"	d
_tr_align	zconf.h	22;"	d
_tr_flush_block	zconf.h	23;"	d
_tr_init	zconf.h	24;"	d
_tr_stored_block	zconf.h	25;"	d
_tr_tally	zconf.h	26;"	d
_u	resolv.h	/^	} _u;$/;"	m	struct:__res_state	typeref:union:__res_state::__anon42	access:public
_unused2	libio.h	/^  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];$/;"	m	struct:_IO_FILE_complete	access:public
_vcsock	resolv.h	/^	int	_vcsock;		\/* PRIVATE: for res_send VC i\/o *\/$/;"	m	struct:__res_state	access:public
_vtable_offset	libio.h	/^  signed char _vtable_offset;$/;"	m	struct:_IO_FILE	access:public
_wide_data	libio.h	/^  struct _IO_wide_data *_wide_data;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE_complete::_IO_wide_data	access:public
_wide_vtable	libio.h	/^  const struct _IO_jump_t *_wide_vtable;$/;"	m	struct:_IO_wide_data	typeref:struct:_IO_wide_data::_IO_jump_t	access:public
a_bss	a.out.h	/^  unsigned int a_bss;	\/* Length of uninitialized data area for file, in bytes.  *\/$/;"	m	struct:exec	access:public
a_concurrency_den	thread_db.h	/^  int a_concurrency_den;	\/* Achieved concurrency level, denominator.  *\/$/;"	m	struct:td_ta_stats	access:public
a_concurrency_num	thread_db.h	/^  int a_concurrency_num;	\/* Achieved concurrency level, numerator.  *\/$/;"	m	struct:td_ta_stats	access:public
a_data	a.out.h	/^  unsigned int a_data;	\/* Length of data, in bytes.  *\/$/;"	m	struct:exec	access:public
a_drsize	a.out.h	/^  unsigned int a_drsize;\/* Length of relocation info for data, in bytes.  *\/$/;"	m	struct:exec	access:public
a_entry	a.out.h	/^  unsigned int a_entry;	\/* Start address.  *\/$/;"	m	struct:exec	access:public
a_info	a.out.h	/^  unsigned long a_info;	\/* Use macros N_MAGIC, etc for access.  *\/$/;"	m	struct:exec	access:public
a_syms	a.out.h	/^  unsigned int a_syms;	\/* Length of symbol table data in file, in bytes.  *\/$/;"	m	struct:exec	access:public
a_text	a.out.h	/^  unsigned int a_text;	\/* Length of text, in bytes.  *\/$/;"	m	struct:exec	access:public
a_trsize	a.out.h	/^  unsigned int a_trsize;\/* Length of relocation info for text, in bytes.  *\/$/;"	m	struct:exec	access:public
a_type	elf.h	/^  uint32_t a_type;		\/* Entry type *\/$/;"	m	struct:__anon111	access:public
a_type	elf.h	/^  uint64_t a_type;		\/* Entry type *\/$/;"	m	struct:__anon113	access:public
a_un	elf.h	/^    } a_un;$/;"	m	struct:__anon111	typeref:union:__anon111::__anon112	access:public
a_un	elf.h	/^    } a_un;$/;"	m	struct:__anon113	typeref:union:__anon113::__anon114	access:public
a_val	elf.h	/^      uint32_t a_val;		\/* Integer value *\/$/;"	m	union:__anon111::__anon112	access:public
a_val	elf.h	/^      uint64_t a_val;		\/* Integer value *\/$/;"	m	union:__anon113::__anon114	access:public
acos	tgmath.h	255;"	d
acosh	tgmath.h	274;"	d
actime	utime.h	/^    __time_t actime;		\/* Access time.  *\/$/;"	m	struct:utimbuf	access:public
active_reg_t	regex.h	/^typedef unsigned long int active_reg_t;$/;"	t
addr	nss.h	/^    uint32_t addr[4];$/;"	m	struct:gaih_addrtuple	access:public
addr	resolv.h	/^		struct in_addr	addr;$/;"	m	struct:__res_state::__anon41	typeref:struct:__res_state::__anon41::in_addr	access:public
addrinfo	netdb.h	/^struct addrinfo$/;"	s
addrinfo::ai_addr	netdb.h	/^  struct sockaddr *ai_addr;	\/* Socket address for socket.  *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
addrinfo::ai_addrlen	netdb.h	/^  socklen_t ai_addrlen;		\/* Length of socket address.  *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_canonname	netdb.h	/^  char *ai_canonname;		\/* Canonical name for service location.  *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_family	netdb.h	/^  int ai_family;		\/* Protocol family for socket.  *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_flags	netdb.h	/^  int ai_flags;			\/* Input flags.  *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_next	netdb.h	/^  struct addrinfo *ai_next;	\/* Pointer to next in list.  *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
addrinfo::ai_protocol	netdb.h	/^  int ai_protocol;		\/* Protocol for socket.  *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_socktype	netdb.h	/^  int ai_socktype;		\/* Socket type.  *\/$/;"	m	struct:addrinfo	access:public
adler	zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s	access:public
adler32	zconf.h	27;"	d
adler32	zlib.h	/^ZEXTERN uLong ZEXPORT adler32 OF((uLong adler, const Bytef *buf, uInt len));$/;"	p	signature:(uLong adler, const Bytef *buf, uInt len)
adler32_combine	zconf.h	28;"	d
adler32_combine	zlib.h	/^   ZEXTERN uLong ZEXPORT adler32_combine OF((uLong, uLong, z_off_t));$/;"	p	signature:(uLong, uLong, z_off_t)
adler32_combine	zlib.h	1458;"	d
adler32_combine64	zlib.h	/^     ZEXTERN uLong ZEXPORT adler32_combine64 OF((uLong, uLong, off_t));$/;"	p	signature:(uLong, uLong, off_t)
adler32_combine64	zlib.h	/^   ZEXTERN uLong ZEXPORT adler32_combine64 OF((uLong, uLong, z_off64_t));$/;"	p	signature:(uLong, uLong, z_off64_t)
ai_addr	netdb.h	/^  struct sockaddr *ai_addr;	\/* Socket address for socket.  *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
ai_addrlen	netdb.h	/^  socklen_t ai_addrlen;		\/* Length of socket address.  *\/$/;"	m	struct:addrinfo	access:public
ai_canonname	netdb.h	/^  char *ai_canonname;		\/* Canonical name for service location.  *\/$/;"	m	struct:addrinfo	access:public
ai_family	netdb.h	/^  int ai_family;		\/* Protocol family for socket.  *\/$/;"	m	struct:addrinfo	access:public
ai_flags	netdb.h	/^  int ai_flags;			\/* Input flags.  *\/$/;"	m	struct:addrinfo	access:public
ai_next	netdb.h	/^  struct addrinfo *ai_next;	\/* Pointer to next in list.  *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
ai_protocol	netdb.h	/^  int ai_protocol;		\/* Protocol for socket.  *\/$/;"	m	struct:addrinfo	access:public
ai_socktype	netdb.h	/^  int ai_socktype;		\/* Socket type.  *\/$/;"	m	struct:addrinfo	access:public
aio_buf	aio.h	/^  volatile void *aio_buf;	\/* Location of buffer.  *\/$/;"	m	struct:aiocb	access:public
aio_buf	aio.h	/^  volatile void *aio_buf;	\/* Location of buffer.  *\/$/;"	m	struct:aiocb64	access:public
aio_cancel	aio.h	214;"	d
aio_debug	aio.h	/^    int aio_debug;		\/* Not used.  *\/$/;"	m	struct:aioinit	access:public
aio_error	aio.h	212;"	d
aio_fildes	aio.h	/^  int aio_fildes;		\/* File desriptor.  *\/$/;"	m	struct:aiocb	access:public
aio_fildes	aio.h	/^  int aio_fildes;		\/* File desriptor.  *\/$/;"	m	struct:aiocb64	access:public
aio_fsync	aio.h	216;"	d
aio_idle_time	aio.h	/^    int aio_idle_time;		\/* Number of seconds before idle thread$/;"	m	struct:aioinit	access:public
aio_lio_opcode	aio.h	/^  int aio_lio_opcode;		\/* Operation to be performed.  *\/$/;"	m	struct:aiocb	access:public
aio_lio_opcode	aio.h	/^  int aio_lio_opcode;		\/* Operation to be performed.  *\/$/;"	m	struct:aiocb64	access:public
aio_locks	aio.h	/^    int aio_locks;		\/* Not used.  *\/$/;"	m	struct:aioinit	access:public
aio_nbytes	aio.h	/^  size_t aio_nbytes;		\/* Length of transfer.  *\/$/;"	m	struct:aiocb	access:public
aio_nbytes	aio.h	/^  size_t aio_nbytes;		\/* Length of transfer.  *\/$/;"	m	struct:aiocb64	access:public
aio_num	aio.h	/^    int aio_num;		\/* Number of expected simultanious requests. *\/$/;"	m	struct:aioinit	access:public
aio_numusers	aio.h	/^    int aio_numusers;		\/* Not used.  *\/$/;"	m	struct:aioinit	access:public
aio_offset	aio.h	/^  __off64_t aio_offset;		\/* File offset.  *\/$/;"	m	struct:aiocb	access:public
aio_offset	aio.h	/^  __off64_t aio_offset;		\/* File offset.  *\/$/;"	m	struct:aiocb64	access:public
aio_offset	aio.h	/^  __off_t aio_offset;		\/* File offset.  *\/$/;"	m	struct:aiocb	access:public
aio_read	aio.h	209;"	d
aio_reqprio	aio.h	/^  int aio_reqprio;		\/* Request priority offset.  *\/$/;"	m	struct:aiocb	access:public
aio_reqprio	aio.h	/^  int aio_reqprio;		\/* Request priority offset.  *\/$/;"	m	struct:aiocb64	access:public
aio_reserved	aio.h	/^    int aio_reserved;$/;"	m	struct:aioinit	access:public
aio_return	aio.h	213;"	d
aio_sigevent	aio.h	/^  struct sigevent aio_sigevent;	\/* Signal number and value.  *\/$/;"	m	struct:aiocb	typeref:struct:aiocb::sigevent	access:public
aio_sigevent	aio.h	/^  struct sigevent aio_sigevent;	\/* Signal number and value.  *\/$/;"	m	struct:aiocb64	typeref:struct:aiocb64::sigevent	access:public
aio_suspend	aio.h	215;"	d
aio_threads	aio.h	/^    int aio_threads;		\/* Maximal number of threads.  *\/$/;"	m	struct:aioinit	access:public
aio_usedba	aio.h	/^    int aio_usedba;		\/* Not used.  *\/$/;"	m	struct:aioinit	access:public
aio_write	aio.h	210;"	d
aiocb	aio.h	/^struct aiocb$/;"	s
aiocb64	aio.h	/^struct aiocb64$/;"	s
aiocb64::__abs_prio	aio.h	/^  int __abs_prio;$/;"	m	struct:aiocb64	access:public
aiocb64::__error_code	aio.h	/^  int __error_code;$/;"	m	struct:aiocb64	access:public
aiocb64::__next_prio	aio.h	/^  struct aiocb *__next_prio;$/;"	m	struct:aiocb64	typeref:struct:aiocb64::aiocb	access:public
aiocb64::__policy	aio.h	/^  int __policy;$/;"	m	struct:aiocb64	access:public
aiocb64::__return_value	aio.h	/^  __ssize_t __return_value;$/;"	m	struct:aiocb64	access:public
aiocb64::__unused	aio.h	/^  char __unused[32];$/;"	m	struct:aiocb64	access:public
aiocb64::aio_buf	aio.h	/^  volatile void *aio_buf;	\/* Location of buffer.  *\/$/;"	m	struct:aiocb64	access:public
aiocb64::aio_fildes	aio.h	/^  int aio_fildes;		\/* File desriptor.  *\/$/;"	m	struct:aiocb64	access:public
aiocb64::aio_lio_opcode	aio.h	/^  int aio_lio_opcode;		\/* Operation to be performed.  *\/$/;"	m	struct:aiocb64	access:public
aiocb64::aio_nbytes	aio.h	/^  size_t aio_nbytes;		\/* Length of transfer.  *\/$/;"	m	struct:aiocb64	access:public
aiocb64::aio_offset	aio.h	/^  __off64_t aio_offset;		\/* File offset.  *\/$/;"	m	struct:aiocb64	access:public
aiocb64::aio_reqprio	aio.h	/^  int aio_reqprio;		\/* Request priority offset.  *\/$/;"	m	struct:aiocb64	access:public
aiocb64::aio_sigevent	aio.h	/^  struct sigevent aio_sigevent;	\/* Signal number and value.  *\/$/;"	m	struct:aiocb64	typeref:struct:aiocb64::sigevent	access:public
aiocb::__abs_prio	aio.h	/^  int __abs_prio;$/;"	m	struct:aiocb	access:public
aiocb::__error_code	aio.h	/^  int __error_code;$/;"	m	struct:aiocb	access:public
aiocb::__next_prio	aio.h	/^  struct aiocb *__next_prio;$/;"	m	struct:aiocb	typeref:struct:aiocb::aiocb	access:public
aiocb::__pad	aio.h	/^  char __pad[sizeof (__off64_t) - sizeof (__off_t)];$/;"	m	struct:aiocb	access:public
aiocb::__policy	aio.h	/^  int __policy;$/;"	m	struct:aiocb	access:public
aiocb::__return_value	aio.h	/^  __ssize_t __return_value;$/;"	m	struct:aiocb	access:public
aiocb::__unused	aio.h	/^  char __unused[32];$/;"	m	struct:aiocb	access:public
aiocb::aio_buf	aio.h	/^  volatile void *aio_buf;	\/* Location of buffer.  *\/$/;"	m	struct:aiocb	access:public
aiocb::aio_fildes	aio.h	/^  int aio_fildes;		\/* File desriptor.  *\/$/;"	m	struct:aiocb	access:public
aiocb::aio_lio_opcode	aio.h	/^  int aio_lio_opcode;		\/* Operation to be performed.  *\/$/;"	m	struct:aiocb	access:public
aiocb::aio_nbytes	aio.h	/^  size_t aio_nbytes;		\/* Length of transfer.  *\/$/;"	m	struct:aiocb	access:public
aiocb::aio_offset	aio.h	/^  __off64_t aio_offset;		\/* File offset.  *\/$/;"	m	struct:aiocb	access:public
aiocb::aio_offset	aio.h	/^  __off_t aio_offset;		\/* File offset.  *\/$/;"	m	struct:aiocb	access:public
aiocb::aio_reqprio	aio.h	/^  int aio_reqprio;		\/* Request priority offset.  *\/$/;"	m	struct:aiocb	access:public
aiocb::aio_sigevent	aio.h	/^  struct sigevent aio_sigevent;	\/* Signal number and value.  *\/$/;"	m	struct:aiocb	typeref:struct:aiocb::sigevent	access:public
aioinit	aio.h	/^struct aioinit$/;"	s
aioinit::aio_debug	aio.h	/^    int aio_debug;		\/* Not used.  *\/$/;"	m	struct:aioinit	access:public
aioinit::aio_idle_time	aio.h	/^    int aio_idle_time;		\/* Number of seconds before idle thread$/;"	m	struct:aioinit	access:public
aioinit::aio_locks	aio.h	/^    int aio_locks;		\/* Not used.  *\/$/;"	m	struct:aioinit	access:public
aioinit::aio_num	aio.h	/^    int aio_num;		\/* Number of expected simultanious requests. *\/$/;"	m	struct:aioinit	access:public
aioinit::aio_numusers	aio.h	/^    int aio_numusers;		\/* Not used.  *\/$/;"	m	struct:aioinit	access:public
aioinit::aio_reserved	aio.h	/^    int aio_reserved;$/;"	m	struct:aioinit	access:public
aioinit::aio_threads	aio.h	/^    int aio_threads;		\/* Maximal number of threads.  *\/$/;"	m	struct:aioinit	access:public
aioinit::aio_usedba	aio.h	/^    int aio_usedba;		\/* Not used.  *\/$/;"	m	struct:aioinit	access:public
alias_local	aliases.h	/^    int alias_local;$/;"	m	struct:aliasent	access:public
alias_members	aliases.h	/^    char **alias_members;$/;"	m	struct:aliasent	access:public
alias_members_len	aliases.h	/^    size_t alias_members_len;$/;"	m	struct:aliasent	access:public
alias_name	aliases.h	/^    char *alias_name;$/;"	m	struct:aliasent	access:public
aliasent	aliases.h	/^struct aliasent$/;"	s
aliasent::alias_local	aliases.h	/^    int alias_local;$/;"	m	struct:aliasent	access:public
aliasent::alias_members	aliases.h	/^    char **alias_members;$/;"	m	struct:aliasent	access:public
aliasent::alias_members_len	aliases.h	/^    size_t alias_members_len;$/;"	m	struct:aliasent	access:public
aliasent::alias_name	aliases.h	/^    char *alias_name;$/;"	m	struct:aliasent	access:public
alignment_mask	obstack.h	/^  int   alignment_mask;		\/* Mask of alignment for each object. *\/$/;"	m	struct:obstack	access:public
alloc_failed	obstack.h	/^  unsigned alloc_failed:1;	\/* No longer used, as we now call the failed$/;"	m	struct:obstack	access:public
alloc_func	zconf.h	96;"	d
alloc_func	zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
alloca	alloca.h	30;"	d
alloca	alloca.h	36;"	d
alphasort	dirent.h	295;"	d
alt	printf.h	/^  unsigned int alt:1;		\/* # flag.  *\/$/;"	m	struct:printf_info	access:public
ar_date	ar.h	/^    char ar_date[12];		\/* File date, decimal seconds since Epoch.  *\/$/;"	m	struct:ar_hdr	access:public
ar_fmag	ar.h	/^    char ar_fmag[2];		\/* Always contains ARFMAG.  *\/$/;"	m	struct:ar_hdr	access:public
ar_gid	ar.h	/^    char ar_uid[6], ar_gid[6];	\/* User and group IDs, in ASCII decimal.  *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr	ar.h	/^struct ar_hdr$/;"	s
ar_hdr::ar_date	ar.h	/^    char ar_date[12];		\/* File date, decimal seconds since Epoch.  *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_fmag	ar.h	/^    char ar_fmag[2];		\/* Always contains ARFMAG.  *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_gid	ar.h	/^    char ar_uid[6], ar_gid[6];	\/* User and group IDs, in ASCII decimal.  *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_mode	ar.h	/^    char ar_mode[8];		\/* File mode, in ASCII octal.  *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_name	ar.h	/^    char ar_name[16];		\/* Member file name, sometimes \/ terminated. *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_size	ar.h	/^    char ar_size[10];		\/* File size, in ASCII decimal.  *\/$/;"	m	struct:ar_hdr	access:public
ar_hdr::ar_uid	ar.h	/^    char ar_uid[6], ar_gid[6];	\/* User and group IDs, in ASCII decimal.  *\/$/;"	m	struct:ar_hdr	access:public
ar_mode	ar.h	/^    char ar_mode[8];		\/* File mode, in ASCII octal.  *\/$/;"	m	struct:ar_hdr	access:public
ar_name	ar.h	/^    char ar_name[16];		\/* Member file name, sometimes \/ terminated. *\/$/;"	m	struct:ar_hdr	access:public
ar_name	netdb.h	/^  const char *ar_name;		\/* Name to look up.  *\/$/;"	m	struct:gaicb	access:public
ar_request	netdb.h	/^  const struct addrinfo *ar_request; \/* Additional request specification.  *\/$/;"	m	struct:gaicb	typeref:struct:gaicb::addrinfo	access:public
ar_result	netdb.h	/^  struct addrinfo *ar_result;	\/* Pointer to result.  *\/$/;"	m	struct:gaicb	typeref:struct:gaicb::addrinfo	access:public
ar_service	netdb.h	/^  const char *ar_service;	\/* Service name.  *\/$/;"	m	struct:gaicb	access:public
ar_size	ar.h	/^    char ar_size[10];		\/* File size, in ASCII decimal.  *\/$/;"	m	struct:ar_hdr	access:public
ar_uid	ar.h	/^    char ar_uid[6], ar_gid[6];	\/* User and group IDs, in ASCII decimal.  *\/$/;"	m	struct:ar_hdr	access:public
arena	malloc.h	/^  int arena;    \/* non-mmapped space allocated from system *\/$/;"	m	struct:mallinfo	access:public
arg	argp.h	/^  __const char *arg;$/;"	m	struct:argp_option	access:public
arg1	math.h	/^    double arg1;$/;"	m	struct:__exception	access:public
arg2	math.h	/^    double arg2;$/;"	m	struct:__exception	access:public
arg_num	argp.h	/^  unsigned arg_num;$/;"	m	struct:argp_state	access:public
argc	argp.h	/^  int argc;$/;"	m	struct:argp_state	access:public
argp	argp.h	/^  __const struct argp *argp;$/;"	m	struct:argp_child	typeref:struct:argp_child::argp	access:public
argp	argp.h	/^struct argp$/;"	s
argp::argp_domain	argp.h	/^  const char *argp_domain;$/;"	m	struct:argp	access:public
argp::args_doc	argp.h	/^  __const char *args_doc;$/;"	m	struct:argp	access:public
argp::children	argp.h	/^  __const struct argp_child *children;$/;"	m	struct:argp	typeref:struct:argp::argp_child	access:public
argp::doc	argp.h	/^  __const char *doc;$/;"	m	struct:argp	access:public
argp::help_filter	argp.h	/^  char *(*help_filter) (int __key, __const char *__text, void *__input);$/;"	m	struct:argp	access:public
argp::options	argp.h	/^  __const struct argp_option *options;$/;"	m	struct:argp	typeref:struct:argp::argp_option	access:public
argp::parser	argp.h	/^  argp_parser_t parser;$/;"	m	struct:argp	access:public
argp_child	argp.h	/^struct argp_child$/;"	s
argp_child::argp	argp.h	/^  __const struct argp *argp;$/;"	m	struct:argp_child	typeref:struct:argp_child::argp	access:public
argp_child::flags	argp.h	/^  int flags;$/;"	m	struct:argp_child	access:public
argp_child::group	argp.h	/^  int group;$/;"	m	struct:argp_child	access:public
argp_child::header	argp.h	/^  __const char *header;$/;"	m	struct:argp_child	access:public
argp_domain	argp.h	/^  const char *argp_domain;$/;"	m	struct:argp	access:public
argp_error	argp.h	/^extern void argp_error (__const struct argp_state *__restrict __state,$/;"	p	signature:(__const struct argp_state *__restrict __state, __const char *__restrict __fmt, ...)
argp_failure	argp.h	/^extern void argp_failure (__const struct argp_state *__restrict __state,$/;"	p	signature:(__const struct argp_state *__restrict __state, int __status, int __errnum, __const char *__restrict __fmt, ...)
argp_help	argp.h	/^extern void argp_help (__const struct argp *__restrict __argp,$/;"	p	signature:(__const struct argp *__restrict __argp, FILE *__restrict __stream, unsigned __flags, char *__restrict __name)
argp_option	argp.h	/^struct argp_option$/;"	s
argp_option::arg	argp.h	/^  __const char *arg;$/;"	m	struct:argp_option	access:public
argp_option::doc	argp.h	/^  __const char *doc;$/;"	m	struct:argp_option	access:public
argp_option::flags	argp.h	/^  int flags;$/;"	m	struct:argp_option	access:public
argp_option::group	argp.h	/^  int group;$/;"	m	struct:argp_option	access:public
argp_option::key	argp.h	/^  int key;$/;"	m	struct:argp_option	access:public
argp_option::name	argp.h	/^  __const char *name;$/;"	m	struct:argp_option	access:public
argp_parse	argp.h	/^extern error_t argp_parse (__const struct argp *__restrict __argp,$/;"	p	signature:(__const struct argp *__restrict __argp, int __argc, char **__restrict __argv, unsigned __flags, int *__restrict __arg_index, void *__restrict __input)
argp_parser_t	argp.h	/^typedef error_t (*argp_parser_t) (int __key, char *__arg,$/;"	t
argp_state	argp.h	/^struct argp_state$/;"	s
argp_state::arg_num	argp.h	/^  unsigned arg_num;$/;"	m	struct:argp_state	access:public
argp_state::argc	argp.h	/^  int argc;$/;"	m	struct:argp_state	access:public
argp_state::argv	argp.h	/^  char **argv;$/;"	m	struct:argp_state	access:public
argp_state::child_inputs	argp.h	/^  void **child_inputs;$/;"	m	struct:argp_state	access:public
argp_state::err_stream	argp.h	/^  FILE *err_stream;		\/* For errors; initialized to stderr. *\/$/;"	m	struct:argp_state	access:public
argp_state::flags	argp.h	/^  unsigned flags;$/;"	m	struct:argp_state	access:public
argp_state::hook	argp.h	/^  void *hook;$/;"	m	struct:argp_state	access:public
argp_state::input	argp.h	/^  void *input;$/;"	m	struct:argp_state	access:public
argp_state::name	argp.h	/^  char *name;$/;"	m	struct:argp_state	access:public
argp_state::next	argp.h	/^  int next;$/;"	m	struct:argp_state	access:public
argp_state::out_stream	argp.h	/^  FILE *out_stream;		\/* For information; initialized to stdout. *\/$/;"	m	struct:argp_state	access:public
argp_state::pstate	argp.h	/^  void *pstate;			\/* Private, for use by argp.  *\/$/;"	m	struct:argp_state	access:public
argp_state::quoted	argp.h	/^  int quoted;$/;"	m	struct:argp_state	access:public
argp_state::root_argp	argp.h	/^  __const struct argp *root_argp;$/;"	m	struct:argp_state	typeref:struct:argp_state::argp	access:public
argp_state_help	argp.h	/^extern void argp_state_help (__const struct argp_state *__restrict __state,$/;"	p	signature:(__const struct argp_state *__restrict __state, FILE *__restrict __stream, unsigned int __flags)
argp_usage	argp.h	/^extern void argp_usage (__const struct argp_state *__state);$/;"	p	signature:(__const struct argp_state *__state)
args_doc	argp.h	/^  __const char *args_doc;$/;"	m	struct:argp	access:public
argv	argp.h	/^  char **argv;$/;"	m	struct:argp_state	access:public
argz_next	argz.h	/^__NTH (argz_next (__const char *__argz, size_t __argz_len,$/;"	f	signature:(__const char *__argz, size_t __argz_len, __const char *__entry)
argz_replace	argz.h	/^extern error_t argz_replace (char **__restrict __argz,$/;"	p	signature:(char **__restrict __argz, size_t *__restrict __argz_len, __const char *__restrict __str, __const char *__restrict __with, unsigned int *__restrict __replace_count)
asin	tgmath.h	257;"	d
asinh	tgmath.h	276;"	d
asn1_array2tree	libtasn1.h	/^    asn1_array2tree (const ASN1_ARRAY_TYPE * array,$/;"	p	signature:(const ASN1_ARRAY_TYPE * array, ASN1_TYPE * definitions, char *errorDescription)
asn1_bit_der	libtasn1.h	/^  extern ASN1_API void asn1_bit_der (const unsigned char *str, int bit_len,$/;"	p	signature:(const unsigned char *str, int bit_len, unsigned char *der, int *der_len)
asn1_check_version	libtasn1.h	/^  extern ASN1_API const char *asn1_check_version (const char *req_version);$/;"	p	signature:(const char *req_version)
asn1_copy_node	libtasn1.h	/^    asn1_copy_node (ASN1_TYPE dst, const char *dst_name,$/;"	p	signature:(ASN1_TYPE dst, const char *dst_name, ASN1_TYPE src, const char *src_name)
asn1_create_element	libtasn1.h	/^    asn1_create_element (ASN1_TYPE definitions,$/;"	p	signature:(ASN1_TYPE definitions, const char *source_name, ASN1_TYPE * element)
asn1_delete_element	libtasn1.h	/^    asn1_delete_element (ASN1_TYPE structure, const char *element_name);$/;"	p	signature:(ASN1_TYPE structure, const char *element_name)
asn1_delete_structure	libtasn1.h	/^  extern ASN1_API asn1_retCode asn1_delete_structure (ASN1_TYPE * structure);$/;"	p	signature:(ASN1_TYPE * structure)
asn1_der_coding	libtasn1.h	/^    asn1_der_coding (ASN1_TYPE element, const char *name,$/;"	p	signature:(ASN1_TYPE element, const char *name, void *ider, int *len, char *ErrorDescription)
asn1_der_decoding	libtasn1.h	/^    asn1_der_decoding (ASN1_TYPE * element, const void *ider,$/;"	p	signature:(ASN1_TYPE * element, const void *ider, int len, char *errorDescription)
asn1_der_decoding_element	libtasn1.h	/^    asn1_der_decoding_element (ASN1_TYPE * structure,$/;"	p	signature:(ASN1_TYPE * structure, const char *elementName, const void *ider, int len, char *errorDescription)
asn1_der_decoding_startEnd	libtasn1.h	/^    asn1_der_decoding_startEnd (ASN1_TYPE element,$/;"	p	signature:(ASN1_TYPE element, const void *ider, int len, const char *name_element, int *start, int *end)
asn1_expand_any_defined_by	libtasn1.h	/^    asn1_expand_any_defined_by (ASN1_TYPE definitions, ASN1_TYPE * element);$/;"	p	signature:(ASN1_TYPE definitions, ASN1_TYPE * element)
asn1_expand_octet_string	libtasn1.h	/^    asn1_expand_octet_string (ASN1_TYPE definitions,$/;"	p	signature:(ASN1_TYPE definitions, ASN1_TYPE * element, const char *octetName, const char *objectName)
asn1_find_node	libtasn1.h	/^    asn1_find_node (ASN1_TYPE pointer, const char *name);$/;"	p	signature:(ASN1_TYPE pointer, const char *name)
asn1_find_structure_from_oid	libtasn1.h	/^  extern ASN1_API const char *asn1_find_structure_from_oid (ASN1_TYPE$/;"	p	signature:(ASN1_TYPE definitions, const char *oidValue)
asn1_get_bit_der	libtasn1.h	/^    asn1_get_bit_der (const unsigned char *der, int der_len,$/;"	p	signature:(const unsigned char *der, int der_len, int *ret_len, unsigned char *str, int str_size, int *bit_len)
asn1_get_length_ber	libtasn1.h	/^    asn1_get_length_ber (const unsigned char *ber, int ber_len, int *len);$/;"	p	signature:(const unsigned char *ber, int ber_len, int *len)
asn1_get_length_der	libtasn1.h	/^    asn1_get_length_der (const unsigned char *der, int der_len, int *len);$/;"	p	signature:(const unsigned char *der, int der_len, int *len)
asn1_get_octet_der	libtasn1.h	/^    asn1_get_octet_der (const unsigned char *der, int der_len,$/;"	p	signature:(const unsigned char *der, int der_len, int *ret_len, unsigned char *str, int str_size, int *str_len)
asn1_get_tag_der	libtasn1.h	/^    asn1_get_tag_der (const unsigned char *der, int der_len,$/;"	p	signature:(const unsigned char *der, int der_len, unsigned char *cls, int *len, unsigned long *tag)
asn1_length_der	libtasn1.h	/^    asn1_length_der (unsigned long int len, unsigned char *ans, int *ans_len);$/;"	p	signature:(unsigned long int len, unsigned char *ans, int *ans_len)
asn1_number_of_elements	libtasn1.h	/^    asn1_number_of_elements (ASN1_TYPE element, const char *name, int *num);$/;"	p	signature:(ASN1_TYPE element, const char *name, int *num)
asn1_octet_der	libtasn1.h	/^    asn1_octet_der (const unsigned char *str, int str_len,$/;"	p	signature:(const unsigned char *str, int str_len, unsigned char *der, int *der_len)
asn1_parser2array	libtasn1.h	/^    asn1_parser2array (const char *inputFileName,$/;"	p	signature:(const char *inputFileName, const char *outputFileName, const char *vectorName, char *errorDescription)
asn1_parser2tree	libtasn1.h	/^    asn1_parser2tree (const char *file_name,$/;"	p	signature:(const char *file_name, ASN1_TYPE * definitions, char *errorDescription)
asn1_perror	libtasn1.h	/^  extern ASN1_API void asn1_perror (asn1_retCode error);$/;"	p	signature:(asn1_retCode error)
asn1_print_structure	libtasn1.h	/^    asn1_print_structure (FILE * out, ASN1_TYPE structure,$/;"	p	signature:(FILE * out, ASN1_TYPE structure, const char *name, int mode)
asn1_read_tag	libtasn1.h	/^    asn1_read_tag (ASN1_TYPE root, const char *name,$/;"	p	signature:(ASN1_TYPE root, const char *name, int *tagValue, int *classValue)
asn1_read_value	libtasn1.h	/^    asn1_read_value (ASN1_TYPE root, const char *name,$/;"	p	signature:(ASN1_TYPE root, const char *name, void *ivalue, int *len)
asn1_retCode	libtasn1.h	/^  typedef int asn1_retCode;	\/* type returned by libtasn1 functions *\/$/;"	t
asn1_strerror	libtasn1.h	/^  extern ASN1_API const char *asn1_strerror (asn1_retCode error);$/;"	p	signature:(asn1_retCode error)
asn1_write_value	libtasn1.h	/^    asn1_write_value (ASN1_TYPE node_root, const char *name,$/;"	p	signature:(ASN1_TYPE node_root, const char *name, const void *ivalue, int len)
assert	assert.h	27;"	d
assert	assert.h	52;"	d
assert	assert.h	91;"	d
assert_perror	assert.h	31;"	d
assert_perror	assert.h	61;"	d
assert_perror	assert.h	97;"	d
atan	tgmath.h	259;"	d
atan2	tgmath.h	261;"	d
atanh	tgmath.h	278;"	d
atof	stdlib.h	/^__NTH (atof (__const char *__nptr))$/;"	f	signature:(__const char *__nptr)
atoi	stdlib.h	/^__NTH (atoi (__const char *__nptr))$/;"	f	signature:(__const char *__nptr)
atol	stdlib.h	/^__NTH (atol (__const char *__nptr))$/;"	f	signature:(__const char *__nptr)
atoll	stdlib.h	/^__NTH (atoll (__const char *__nptr))$/;"	f	signature:(__const char *__nptr)
autosprintf	autosprintf.h	/^    autosprintf (const autosprintf& src);$/;"	p	class:gnu::autosprintf	access:public	signature:(const autosprintf& src)
autosprintf	autosprintf.h	/^    autosprintf (const char *format, ...)$/;"	p	class:gnu::autosprintf	access:public	signature:(const char *format, ...)
autosprintf	autosprintf.h	/^  class autosprintf$/;"	c	namespace:gnu
avail_in	zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s	access:public
avail_out	zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s	access:public
b64_ntop	resolv.h	285;"	d
b64_pton	resolv.h	286;"	d
base	ftw.h	/^    int base;$/;"	m	struct:FTW	access:public
basename	libgen.h	36;"	d
be16toh	endian.h	66;"	d
be16toh	endian.h	81;"	d
be32toh	endian.h	71;"	d
be32toh	endian.h	86;"	d
be64toh	endian.h	76;"	d
be64toh	endian.h	91;"	d
bptaddr	thread_db.h	/^    psaddr_t bptaddr;		\/* Address of breakpoint.  *\/$/;"	m	union:td_notify::__anon64	access:public
bswap_16	byteswap.h	30;"	d
bswap_32	byteswap.h	33;"	d
bswap_64	byteswap.h	37;"	d
btowc	wchar.h	/^__NTH (btowc (int __c))$/;"	f	signature:(int __c)
carg	tgmath.h	439;"	d
cbrt	tgmath.h	337;"	d
ceil	tgmath.h	343;"	d
cfree	malloc.h	/^extern void cfree __MALLOC_P ((void *__ptr));$/;"	p	signature:(void *__ptr)
charf	zconf.h	/^typedef char  FAR charf;$/;"	t
charf	zconf.h	97;"	d
child_inputs	argp.h	/^  void **child_inputs;$/;"	m	struct:argp_state	access:public
children	argp.h	/^  __const struct argp_child *children;$/;"	m	struct:argp	typeref:struct:argp::argp_child	access:public
children	expat.h	/^  XML_Content *                 children;$/;"	m	struct:XML_cp	access:public
chunk	obstack.h	/^  struct _obstack_chunk *chunk;	\/* address of current struct obstack_chunk *\/$/;"	m	struct:obstack	typeref:struct:obstack::_obstack_chunk	access:public
chunk_limit	obstack.h	/^  char	*chunk_limit;		\/* address of char after current chunk *\/$/;"	m	struct:obstack	access:public
chunk_size	obstack.h	/^  long	chunk_size;		\/* preferred size to allocate chunks in *\/$/;"	m	struct:obstack	access:public
chunkfun	obstack.h	/^  struct _obstack_chunk *(*chunkfun) (void *, long);$/;"	m	struct:obstack	typeref:struct:obstack::chunkfun	access:public
cimag	tgmath.h	451;"	d
clock_nanosleep	time.h	/^extern int clock_nanosleep (clockid_t __clock_id, int __flags,$/;"	p	signature:(clockid_t __clock_id, int __flags, __const struct timespec *__req, struct timespec *__rem)
clock_t	time.h	/^typedef __clock_t clock_t;$/;"	t
clockid_t	time.h	/^typedef __clockid_t clockid_t;$/;"	t
close	libio.h	/^  __io_close_fn *close;		\/* Close file.  *\/$/;"	m	struct:__anon130	access:public
close	unistd.h	/^extern int close (int __fd);$/;"	p	signature:(int __fd)
comm_max	zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
comment	zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s	access:public
comparison_fn_t	search.h	/^typedef __compar_fn_t comparison_fn_t;$/;"	t
comparison_fn_t	stdlib.h	/^typedef __compar_fn_t comparison_fn_t;$/;"	t
compile	regexp.h	/^compile (char *__restrict instring, char *__restrict expbuf,$/;"	f	signature:(char *__restrict instring, char *__restrict expbuf, __const char *__restrict endbuf, int eof)
complex	complex.h	40;"	d
compress	zconf.h	29;"	d
compress	zlib.h	/^ZEXTERN int ZEXPORT compress OF((Bytef *dest,   uLongf *destLen,$/;"	p	signature:(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)
compress2	zconf.h	30;"	d
compress2	zlib.h	/^ZEXTERN int ZEXPORT compress2 OF((Bytef *dest,   uLongf *destLen,$/;"	p	signature:(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen, int level)
compressBound	zconf.h	31;"	d
compressBound	zlib.h	/^ZEXTERN uLong ZEXPORT compressBound OF((uLong sourceLen));$/;"	p	signature:(uLong sourceLen)
conj	tgmath.h	442;"	d
const	libio.h	81;"	d
const	zconf.h	187;"	d
contents	obstack.h	/^  char	contents[4];		\/* objects begin here *\/$/;"	m	struct:_obstack_chunk	access:public
convert	expat.h	/^  int (XMLCALL *convert)(void *data, const char *s);$/;"	m	struct:__anon47	access:public
cookie_close_function_t	libio.h	/^typedef __io_close_fn cookie_close_function_t;$/;"	t
cookie_io_functions_t	libio.h	/^typedef _IO_cookie_io_functions_t cookie_io_functions_t;$/;"	t
cookie_read_function_t	libio.h	/^typedef __io_read_fn cookie_read_function_t;$/;"	t
cookie_seek_function_t	libio.h	/^typedef __io_seek_fn cookie_seek_function_t;$/;"	t
cookie_write_function_t	libio.h	/^typedef __io_write_fn cookie_write_function_t;$/;"	t
copysign	tgmath.h	384;"	d
cos	tgmath.h	264;"	d
cosh	tgmath.h	281;"	d
cproj	tgmath.h	445;"	d
crc32	zconf.h	32;"	d
crc32	zlib.h	/^ZEXTERN uLong ZEXPORT crc32   OF((uLong crc, const Bytef *buf, uInt len));$/;"	p	signature:(uLong crc, const Bytef *buf, uInt len)
crc32_combine	zconf.h	33;"	d
crc32_combine	zlib.h	/^   ZEXTERN uLong ZEXPORT crc32_combine OF((uLong, uLong, z_off_t));$/;"	p	signature:(uLong, uLong, z_off_t)
crc32_combine	zlib.h	1459;"	d
crc32_combine64	zlib.h	/^     ZEXTERN uLong ZEXPORT crc32_combine64 OF((uLong, uLong, off_t));$/;"	p	signature:(uLong, uLong, off_t)
crc32_combine64	zlib.h	/^   ZEXTERN uLong ZEXPORT crc32_combine64 OF((uLong, uLong, z_off64_t));$/;"	p	signature:(uLong, uLong, z_off64_t)
creal	tgmath.h	454;"	d
creat	fcntl.h	171;"	d
crypt_3_buf	crypt.h	/^    char crypt_3_buf[14];$/;"	m	struct:crypt_data	access:public
crypt_data	crypt.h	/^struct crypt_data$/;"	s
crypt_data::crypt_3_buf	crypt.h	/^    char crypt_3_buf[14];$/;"	m	struct:crypt_data	access:public
crypt_data::current_salt	crypt.h	/^    char current_salt[2];$/;"	m	struct:crypt_data	access:public
crypt_data::current_saltbits	crypt.h	/^    long int current_saltbits;$/;"	m	struct:crypt_data	access:public
crypt_data::direction	crypt.h	/^    int  direction, initialized;$/;"	m	struct:crypt_data	access:public
crypt_data::initialized	crypt.h	/^    int  direction, initialized;$/;"	m	struct:crypt_data	access:public
crypt_data::keysched	crypt.h	/^    char keysched[16 * 8];$/;"	m	struct:crypt_data	access:public
crypt_data::sb0	crypt.h	/^    char sb0[32768];$/;"	m	struct:crypt_data	access:public
crypt_data::sb1	crypt.h	/^    char sb1[32768];$/;"	m	struct:crypt_data	access:public
crypt_data::sb2	crypt.h	/^    char sb2[32768];$/;"	m	struct:crypt_data	access:public
crypt_data::sb3	crypt.h	/^    char sb3[32768];$/;"	m	struct:crypt_data	access:public
currency_symbol	locale.h	/^  char *currency_symbol;	\/* Local currency symbol.  *\/$/;"	m	struct:lconv	access:public
current_salt	crypt.h	/^    char current_salt[2];$/;"	m	struct:crypt_data	access:public
current_saltbits	crypt.h	/^    long int current_saltbits;$/;"	m	struct:crypt_data	access:public
cuserid	stdio.h	/^extern char *cuserid (char *__s);$/;"	p	signature:(char *__s)
d	ieee754.h	/^    double d;$/;"	m	union:ieee754_double	access:public
d	ieee754.h	/^    long double d;$/;"	m	union:ieee854_long_double	access:public
d_ino	dirent.h	65;"	d
d_ptr	elf.h	/^      Elf32_Addr d_ptr;			\/* Address value *\/$/;"	m	union:__anon99::__anon100	access:public
d_ptr	elf.h	/^      Elf64_Addr d_ptr;			\/* Address value *\/$/;"	m	union:__anon101::__anon102	access:public
d_tag	elf.h	/^  Elf32_Sword	d_tag;			\/* Dynamic entry type *\/$/;"	m	struct:__anon99	access:public
d_tag	elf.h	/^  Elf64_Sxword	d_tag;			\/* Dynamic entry type *\/$/;"	m	struct:__anon101	access:public
d_un	elf.h	/^    } d_un;$/;"	m	struct:__anon101	typeref:union:__anon101::__anon102	access:public
d_un	elf.h	/^    } d_un;$/;"	m	struct:__anon99	typeref:union:__anon99::__anon100	access:public
d_val	elf.h	/^      Elf32_Word d_val;			\/* Integer value *\/$/;"	m	union:__anon99::__anon100	access:public
d_val	elf.h	/^      Elf64_Xword d_val;		\/* Integer value *\/$/;"	m	union:__anon101::__anon102	access:public
data	expat.h	/^  void *data;$/;"	m	struct:__anon47	access:public
data	search.h	/^    void *data;$/;"	m	struct:entry	access:public
data	thread_db.h	/^    uintptr_t data;		\/* Event specific data.  *\/$/;"	m	union:td_event_msg::__anon65	access:public
data_type	zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s	access:public
debug	FlexLexer.h	/^	int debug() const		{ return yy_flex_debug; }$/;"	f	class:FlexLexer	access:public	signature:() const
decimal_point	locale.h	/^  char *decimal_point;		\/* Decimal point character.  *\/$/;"	m	struct:lconv	access:public
defdname	resolv.h	/^	char	defdname[256];		\/* default domain (deprecated) *\/$/;"	m	struct:__res_state	access:public
deflate	zconf.h	34;"	d
deflate	zlib.h	/^ZEXTERN int ZEXPORT deflate OF((z_streamp strm, int flush));$/;"	p	signature:(z_streamp strm, int flush)
deflateBound	zconf.h	35;"	d
deflateBound	zlib.h	/^ZEXTERN uLong ZEXPORT deflateBound OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, uLong sourceLen)
deflateCopy	zconf.h	36;"	d
deflateCopy	zlib.h	/^ZEXTERN int ZEXPORT deflateCopy OF((z_streamp dest,$/;"	p	signature:(z_streamp dest, z_streamp source)
deflateEnd	zconf.h	37;"	d
deflateEnd	zlib.h	/^ZEXTERN int ZEXPORT deflateEnd OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
deflateInit	zlib.h	1425;"	d
deflateInit2	zlib.h	1429;"	d
deflateInit2_	zconf.h	38;"	d
deflateInit2_	zlib.h	/^ZEXTERN int ZEXPORT deflateInit2_ OF((z_streamp strm, int  level, int  method,$/;"	p	signature:(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
deflateInit_	zconf.h	39;"	d
deflateInit_	zlib.h	/^ZEXTERN int ZEXPORT deflateInit_ OF((z_streamp strm, int level,$/;"	p	signature:(z_streamp strm, int level, const char *version, int stream_size)
deflateParams	zconf.h	40;"	d
deflateParams	zlib.h	/^ZEXTERN int ZEXPORT deflateParams OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, int level, int strategy)
deflatePrime	zconf.h	41;"	d
deflatePrime	zlib.h	/^ZEXTERN int ZEXPORT deflatePrime OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, int bits, int value)
deflateReset	zconf.h	42;"	d
deflateReset	zlib.h	/^ZEXTERN int ZEXPORT deflateReset OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
deflateSetDictionary	zconf.h	43;"	d
deflateSetDictionary	zlib.h	/^ZEXTERN int ZEXPORT deflateSetDictionary OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, const Bytef *dictionary, uInt dictLength)
deflateSetHeader	zconf.h	44;"	d
deflateSetHeader	zlib.h	/^ZEXTERN int ZEXPORT deflateSetHeader OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, gz_headerp head)
deflateTune	zconf.h	45;"	d
deflateTune	zlib.h	/^ZEXTERN int ZEXPORT deflateTune OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, int good_length, int max_lazy, int nice_length, int max_chain)
deflate_copyright	zconf.h	46;"	d
dgettext	libintl.h	112;"	d
direction	crypt.h	/^    int  direction, initialized;$/;"	m	struct:crypt_data	access:public
dirfd	dirent.h	227;"	d
div_t	stdlib.h	/^  } div_t;$/;"	t	typeref:struct:__anon24
dl_iterate_phdr	link.h	/^extern int dl_iterate_phdr (int (*__callback) (struct dl_phdr_info *,$/;"	p	signature:(int (*__callback) (struct dl_phdr_info *, size_t, void *), void *__data)
dl_phdr_info	link.h	/^struct dl_phdr_info$/;"	s
dl_phdr_info::dlpi_addr	link.h	/^    ElfW(Addr) dlpi_addr;$/;"	m	struct:dl_phdr_info	access:public
dl_phdr_info::dlpi_adds	link.h	/^    unsigned long long int dlpi_adds;$/;"	m	struct:dl_phdr_info	access:public
dl_phdr_info::dlpi_name	link.h	/^    const char *dlpi_name;$/;"	m	struct:dl_phdr_info	access:public
dl_phdr_info::dlpi_phdr	link.h	/^    const ElfW(Phdr) *dlpi_phdr;$/;"	m	struct:dl_phdr_info	access:public
dl_phdr_info::dlpi_phnum	link.h	/^    ElfW(Half) dlpi_phnum;$/;"	m	struct:dl_phdr_info	access:public
dl_phdr_info::dlpi_subs	link.h	/^    unsigned long long int dlpi_subs;$/;"	m	struct:dl_phdr_info	access:public
dl_phdr_info::dlpi_tls_data	link.h	/^    void *dlpi_tls_data;$/;"	m	struct:dl_phdr_info	access:public
dl_phdr_info::dlpi_tls_modid	link.h	/^    size_t dlpi_tls_modid;$/;"	m	struct:dl_phdr_info	access:public
dli_fbase	dlfcn.h	/^  void *dli_fbase;		\/* Load address of that object.  *\/$/;"	m	struct:__anon9	access:public
dli_fname	dlfcn.h	/^  __const char *dli_fname;	\/* File name of defining object.  *\/$/;"	m	struct:__anon9	access:public
dli_saddr	dlfcn.h	/^  void *dli_saddr;		\/* Exact value of nearest symbol.  *\/$/;"	m	struct:__anon9	access:public
dli_sname	dlfcn.h	/^  __const char *dli_sname;	\/* Name of nearest symbol.  *\/$/;"	m	struct:__anon9	access:public
dlpi_addr	link.h	/^    ElfW(Addr) dlpi_addr;$/;"	m	struct:dl_phdr_info	access:public
dlpi_adds	link.h	/^    unsigned long long int dlpi_adds;$/;"	m	struct:dl_phdr_info	access:public
dlpi_name	link.h	/^    const char *dlpi_name;$/;"	m	struct:dl_phdr_info	access:public
dlpi_phdr	link.h	/^    const ElfW(Phdr) *dlpi_phdr;$/;"	m	struct:dl_phdr_info	access:public
dlpi_phnum	link.h	/^    ElfW(Half) dlpi_phnum;$/;"	m	struct:dl_phdr_info	access:public
dlpi_subs	link.h	/^    unsigned long long int dlpi_subs;$/;"	m	struct:dl_phdr_info	access:public
dlpi_tls_data	link.h	/^    void *dlpi_tls_data;$/;"	m	struct:dl_phdr_info	access:public
dlpi_tls_modid	link.h	/^    size_t dlpi_tls_modid;$/;"	m	struct:dl_phdr_info	access:public
dls_cnt	dlfcn.h	/^  unsigned int dls_cnt;		\/* Number of elements in `dls_serpath'.  *\/$/;"	m	struct:__anon13	access:public
dls_flags	dlfcn.h	/^  unsigned int dls_flags;	\/* Indicates where this directory came from. *\/$/;"	m	struct:__anon12	access:public
dls_name	dlfcn.h	/^  char *dls_name;		\/* Name of library search path directory.  *\/$/;"	m	struct:__anon12	access:public
dls_serpath	dlfcn.h	/^  Dl_serpath dls_serpath[1];	\/* Actually longer, dls_cnt elements.  *\/$/;"	m	struct:__anon13	access:public
dls_size	dlfcn.h	/^  size_t dls_size;		\/* Size in bytes of the whole buffer.  *\/$/;"	m	struct:__anon13	access:public
dn_comp	resolv.h	287;"	d
dn_count_labels	resolv.h	288;"	d
dn_expand	resolv.h	289;"	d
dn_skipname	resolv.h	290;"	d
dngettext	libintl.h	117;"	d
dnsrch	resolv.h	/^	char	*dnsrch[MAXDNSRCH+1];	\/* components of domain to search *\/$/;"	m	struct:__res_state	access:public
doc	argp.h	/^  __const char *doc;$/;"	m	struct:argp	access:public
doc	argp.h	/^  __const char *doc;$/;"	m	struct:argp_option	access:public
done	zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s	access:public
down	libtasn1.h	/^    struct node_asn_struct *down;	\/* Pointer to the son node *\/$/;"	m	struct:node_asn_struct	typeref:struct:node_asn_struct::node_asn_struct	access:public
dprintf	stdio.h	/^extern int dprintf (int __fd, __const char *__restrict __fmt, ...)$/;"	p	signature:(int __fd, __const char *__restrict __fmt, ...)
drand48_data	stdlib.h	/^struct drand48_data$/;"	s
drand48_data::__a	stdlib.h	/^    unsigned long long int __a;	\/* Factor in congruential formula.  *\/$/;"	m	struct:drand48_data	access:public
drand48_data::__c	stdlib.h	/^    unsigned short int __c;	\/* Additive const. in congruential formula.  *\/$/;"	m	struct:drand48_data	access:public
drand48_data::__init	stdlib.h	/^    unsigned short int __init;	\/* Flag for initializing.  *\/$/;"	m	struct:drand48_data	access:public
drand48_data::__old_x	stdlib.h	/^    unsigned short int __old_x[3]; \/* Old state.  *\/$/;"	m	struct:drand48_data	access:public
drand48_data::__x	stdlib.h	/^    unsigned short int __x[3];	\/* Current state.  *\/$/;"	m	struct:drand48_data	access:public
dummy	zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	m	struct:internal_state	access:public
e_ehsize	elf.h	/^  Elf32_Half	e_ehsize;		\/* ELF header size in bytes *\/$/;"	m	struct:__anon85	access:public
e_ehsize	elf.h	/^  Elf64_Half	e_ehsize;		\/* ELF header size in bytes *\/$/;"	m	struct:__anon86	access:public
e_entry	elf.h	/^  Elf32_Addr	e_entry;		\/* Entry point virtual address *\/$/;"	m	struct:__anon85	access:public
e_entry	elf.h	/^  Elf64_Addr	e_entry;		\/* Entry point virtual address *\/$/;"	m	struct:__anon86	access:public
e_flags	elf.h	/^  Elf32_Word	e_flags;		\/* Processor-specific flags *\/$/;"	m	struct:__anon85	access:public
e_flags	elf.h	/^  Elf64_Word	e_flags;		\/* Processor-specific flags *\/$/;"	m	struct:__anon86	access:public
e_ident	elf.h	/^  unsigned char	e_ident[EI_NIDENT];	\/* Magic number and other info *\/$/;"	m	struct:__anon85	access:public
e_ident	elf.h	/^  unsigned char	e_ident[EI_NIDENT];	\/* Magic number and other info *\/$/;"	m	struct:__anon86	access:public
e_machine	elf.h	/^  Elf32_Half	e_machine;		\/* Architecture *\/$/;"	m	struct:__anon85	access:public
e_machine	elf.h	/^  Elf64_Half	e_machine;		\/* Architecture *\/$/;"	m	struct:__anon86	access:public
e_phentsize	elf.h	/^  Elf32_Half	e_phentsize;		\/* Program header table entry size *\/$/;"	m	struct:__anon85	access:public
e_phentsize	elf.h	/^  Elf64_Half	e_phentsize;		\/* Program header table entry size *\/$/;"	m	struct:__anon86	access:public
e_phnum	elf.h	/^  Elf32_Half	e_phnum;		\/* Program header table entry count *\/$/;"	m	struct:__anon85	access:public
e_phnum	elf.h	/^  Elf64_Half	e_phnum;		\/* Program header table entry count *\/$/;"	m	struct:__anon86	access:public
e_phoff	elf.h	/^  Elf32_Off	e_phoff;		\/* Program header table file offset *\/$/;"	m	struct:__anon85	access:public
e_phoff	elf.h	/^  Elf64_Off	e_phoff;		\/* Program header table file offset *\/$/;"	m	struct:__anon86	access:public
e_shentsize	elf.h	/^  Elf32_Half	e_shentsize;		\/* Section header table entry size *\/$/;"	m	struct:__anon85	access:public
e_shentsize	elf.h	/^  Elf64_Half	e_shentsize;		\/* Section header table entry size *\/$/;"	m	struct:__anon86	access:public
e_shnum	elf.h	/^  Elf32_Half	e_shnum;		\/* Section header table entry count *\/$/;"	m	struct:__anon85	access:public
e_shnum	elf.h	/^  Elf64_Half	e_shnum;		\/* Section header table entry count *\/$/;"	m	struct:__anon86	access:public
e_shoff	elf.h	/^  Elf32_Off	e_shoff;		\/* Section header table file offset *\/$/;"	m	struct:__anon85	access:public
e_shoff	elf.h	/^  Elf64_Off	e_shoff;		\/* Section header table file offset *\/$/;"	m	struct:__anon86	access:public
e_shstrndx	elf.h	/^  Elf32_Half	e_shstrndx;		\/* Section header string table index *\/$/;"	m	struct:__anon85	access:public
e_shstrndx	elf.h	/^  Elf64_Half	e_shstrndx;		\/* Section header string table index *\/$/;"	m	struct:__anon86	access:public
e_type	elf.h	/^  Elf32_Half	e_type;			\/* Object file type *\/$/;"	m	struct:__anon85	access:public
e_type	elf.h	/^  Elf64_Half	e_type;			\/* Object file type *\/$/;"	m	struct:__anon86	access:public
e_version	elf.h	/^  Elf32_Word	e_version;		\/* Object file version *\/$/;"	m	struct:__anon85	access:public
e_version	elf.h	/^  Elf64_Word	e_version;		\/* Object file version *\/$/;"	m	struct:__anon86	access:public
empty	ieee754.h	/^	unsigned int empty:16;$/;"	m	struct:ieee854_long_double::__anon7	access:public
empty	ieee754.h	/^	unsigned int empty:16;$/;"	m	struct:ieee854_long_double::__anon8	access:public
encoding	expat.h	/^XML_ParserCreate(const XML_Char *encoding);$/;"	v
end	regex.h	/^  regoff_t *end;$/;"	m	struct:re_registers	access:public
end_ptr	stdlib.h	/^    int32_t *end_ptr;		\/* Pointer behind state table.  *\/$/;"	m	struct:random_data	access:public
endgrent	grp.h	/^extern void endgrent (void);$/;"	p	signature:(void)
endhostent	netdb.h	/^extern void endhostent (void);$/;"	p	signature:(void)
endnetent	netdb.h	/^extern void endnetent (void);$/;"	p	signature:(void)
endnetgrent	netdb.h	/^extern void endnetgrent (void);$/;"	p	signature:(void)
endorder	search.h	/^  endorder,$/;"	e	enum:__anon78
endprotoent	netdb.h	/^extern void endprotoent (void);$/;"	p	signature:(void)
endpwent	pwd.h	/^extern void endpwent (void);$/;"	p	signature:(void)
endservent	netdb.h	/^extern void endservent (void);$/;"	p	signature:(void)
endsgent	gshadow.h	/^extern void endsgent (void);$/;"	p	signature:(void)
endspent	shadow.h	/^extern void endspent (void);$/;"	p	signature:(void)
endutxent	utmpx.h	/^extern void endutxent (void);$/;"	p	signature:(void)
entry	search.h	/^typedef struct entry$/;"	s
entry::data	search.h	/^    void *data;$/;"	m	struct:entry	access:public
entry::key	search.h	/^    char *key;$/;"	m	struct:entry	access:public
erf	tgmath.h	387;"	d
erfc	tgmath.h	388;"	d
err	err.h	/^extern void err (int __status, __const char *__format, ...)$/;"	p	signature:(int __status, __const char *__format, ...)
err_stream	argp.h	/^  FILE *err_stream;		\/* For errors; initialized to stderr. *\/$/;"	m	struct:argp_state	access:public
error	error.h	/^extern void error (int __status, int __errnum, __const char *__format, ...)$/;"	p	signature:(int __status, int __errnum, __const char *__format, ...)
error	gettext-po.h	/^  void (*error) (int status, int errnum,$/;"	m	struct:po_error_handler	access:public
error_at_line	error.h	/^extern void error_at_line (int __status, int __errnum, __const char *__fname,$/;"	p	signature:(int __status, int __errnum, __const char *__fname, unsigned int __lineno, __const char *__format, ...)
error_at_line	gettext-po.h	/^  void (*error_at_line) (int status, int errnum,$/;"	m	struct:po_error_handler	access:public
error_t	argp.h	/^typedef int error_t;$/;"	t
error_t	argz.h	/^typedef int error_t;$/;"	t
error_t	errno.h	/^typedef int error_t;$/;"	t
errx	err.h	/^extern void errx (int __status, __const char *__format, ...)$/;"	p	signature:(int __status, __const char *__format, ...)
event	thread_db.h	/^  td_event_e event;		\/* Event type being reported.  *\/$/;"	m	struct:td_event_msg	access:public
event_bits	thread_db.h	/^  uint32_t event_bits[TD_EVENTSIZE];$/;"	m	struct:td_thr_events	access:public
eventdata	thread_db.h	/^  void *eventdata;		\/* Data associated with event.  *\/$/;"	m	struct:__anon66	access:public
eventmask	thread_db.h	/^  td_thr_events_t eventmask;	\/* Mask of enabled events.  *\/$/;"	m	struct:__anon66	access:public
eventnum	thread_db.h	/^  td_event_e eventnum;		\/* Number of last event.  *\/$/;"	m	struct:__anon66	access:public
exec	a.out.h	/^struct exec$/;"	s
exec::a_bss	a.out.h	/^  unsigned int a_bss;	\/* Length of uninitialized data area for file, in bytes.  *\/$/;"	m	struct:exec	access:public
exec::a_data	a.out.h	/^  unsigned int a_data;	\/* Length of data, in bytes.  *\/$/;"	m	struct:exec	access:public
exec::a_drsize	a.out.h	/^  unsigned int a_drsize;\/* Length of relocation info for data, in bytes.  *\/$/;"	m	struct:exec	access:public
exec::a_entry	a.out.h	/^  unsigned int a_entry;	\/* Start address.  *\/$/;"	m	struct:exec	access:public
exec::a_info	a.out.h	/^  unsigned long a_info;	\/* Use macros N_MAGIC, etc for access.  *\/$/;"	m	struct:exec	access:public
exec::a_syms	a.out.h	/^  unsigned int a_syms;	\/* Length of symbol table data in file, in bytes.  *\/$/;"	m	struct:exec	access:public
exec::a_text	a.out.h	/^  unsigned int a_text;	\/* Length of text, in bytes.  *\/$/;"	m	struct:exec	access:public
exec::a_trsize	a.out.h	/^  unsigned int a_trsize;\/* Length of relocation info for text, in bytes.  *\/$/;"	m	struct:exec	access:public
exp	tgmath.h	291;"	d
exp2	tgmath.h	319;"	d
expm1	tgmath.h	310;"	d
exponent	ieee754.h	/^	unsigned int exponent:11;$/;"	m	struct:ieee754_double::__anon5	access:public
exponent	ieee754.h	/^	unsigned int exponent:11;$/;"	m	struct:ieee754_double::__anon6	access:public
exponent	ieee754.h	/^	unsigned int exponent:15;$/;"	m	struct:ieee854_long_double::__anon7	access:public
exponent	ieee754.h	/^	unsigned int exponent:15;$/;"	m	struct:ieee854_long_double::__anon8	access:public
exponent	ieee754.h	/^	unsigned int exponent:8;$/;"	m	struct:ieee754_float::__anon3	access:public
exponent	ieee754.h	/^	unsigned int exponent:8;$/;"	m	struct:ieee754_float::__anon4	access:public
extra	printf.h	/^  unsigned int extra:1;		\/* For special use.  *\/$/;"	m	struct:printf_info	access:public
extra	zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s	access:public
extra_arg	obstack.h	/^  void *extra_arg;		\/* first arg for chunk alloc\/dealloc funcs *\/$/;"	m	struct:obstack	access:public
extra_len	zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s	access:public
extra_max	zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
f	ieee754.h	/^    float f;$/;"	m	union:ieee754_float	access:public
fabs	tgmath.h	346;"	d
family	nss.h	/^    int family;$/;"	m	struct:gaih_addrtuple	access:public
fclose	stdio.h	/^extern int fclose (FILE *__stream);$/;"	p	signature:(FILE *__stream)
fcloseall	stdio.h	/^extern int fcloseall (void);$/;"	p	signature:(void)
fcntl	fcntl.h	/^extern int fcntl (int __fd, int __cmd, ...);$/;"	p	signature:(int __fd, int __cmd, ...)
fdatasync	unistd.h	/^extern int fdatasync (int __fildes);$/;"	p	signature:(int __fildes)
fdim	tgmath.h	422;"	d
fdopendir	dirent.h	/^extern DIR *fdopendir (int __fd);$/;"	p	signature:(int __fd)
feature	expat.h	/^  enum XML_FeatureEnum  feature;$/;"	m	struct:__anon50	typeref:enum:__anon50::XML_FeatureEnum	access:public
fflush	stdio.h	/^extern int fflush (FILE *__stream);$/;"	p	signature:(FILE *__stream)
fflush_unlocked	stdio.h	/^extern int fflush_unlocked (FILE *__stream);$/;"	p	signature:(FILE *__stream)
fgetc	stdio.h	/^extern int fgetc (FILE *__stream);$/;"	p	signature:(FILE *__stream)
fgetc_unlocked	stdio.h	/^extern int fgetc_unlocked (FILE *__stream);$/;"	p	signature:(FILE *__stream)
fgetgrent	grp.h	/^extern struct group *fgetgrent (FILE *__stream);$/;"	p	signature:(FILE *__stream)
fgetgrent_r	grp.h	/^extern int fgetgrent_r (FILE *__restrict __stream,$/;"	p	signature:(FILE *__restrict __stream, struct group *__restrict __resultbuf, char *__restrict __buffer, size_t __buflen, struct group **__restrict __result)
fgetpos	stdio.h	/^extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);$/;"	p	signature:(FILE *__restrict __stream, fpos_t *__restrict __pos)
fgetpos64	stdio.h	/^extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);$/;"	p	signature:(FILE *__restrict __stream, fpos64_t *__restrict __pos)
fgetpwent	pwd.h	/^extern struct passwd *fgetpwent (FILE *__stream);$/;"	p	signature:(FILE *__stream)
fgetpwent_r	pwd.h	/^extern int fgetpwent_r (FILE *__restrict __stream,$/;"	p	signature:(FILE *__restrict __stream, struct passwd *__restrict __resultbuf, char *__restrict __buffer, size_t __buflen, struct passwd **__restrict __result)
fgetsgent	gshadow.h	/^extern struct sgrp *fgetsgent (FILE *__stream);$/;"	p	signature:(FILE *__stream)
fgetsgent_r	gshadow.h	/^extern int fgetsgent_r (FILE *__stream, struct sgrp *__result_buf,$/;"	p	signature:(FILE *__stream, struct sgrp *__result_buf, char *__buffer, size_t __buflen, struct sgrp **__result)
fgetspent	shadow.h	/^extern struct spwd *fgetspent (FILE *__stream);$/;"	p	signature:(FILE *__stream)
fgetspent_r	shadow.h	/^extern int fgetspent_r (FILE *__stream, struct spwd *__result_buf,$/;"	p	signature:(FILE *__stream, struct spwd *__result_buf, char *__buffer, size_t __buflen, struct spwd **__result)
fgetwc	wchar.h	/^extern wint_t fgetwc (__FILE *__stream);$/;"	p	signature:(__FILE *__stream)
fgetwc_unlocked	wchar.h	/^extern wint_t fgetwc_unlocked (__FILE *__stream);$/;"	p	signature:(__FILE *__stream)
fgetws	wchar.h	/^extern wchar_t *fgetws (wchar_t *__restrict __ws, int __n,$/;"	p	signature:(wchar_t *__restrict __ws, int __n, __FILE *__restrict __stream)
fgetws_unlocked	wchar.h	/^extern wchar_t *fgetws_unlocked (wchar_t *__restrict __ws, int __n,$/;"	p	signature:(wchar_t *__restrict __ws, int __n, __FILE *__restrict __stream)
filled	search.h	/^    unsigned int filled;$/;"	m	struct:hsearch_data	access:public
finalBuffer	expat.h	/^  XML_Bool finalBuffer;$/;"	m	struct:__anon48	access:public
flag	getopt.h	/^  int *flag;$/;"	m	struct:option	access:public
flags	argp.h	/^  int flags;$/;"	m	struct:argp_child	access:public
flags	argp.h	/^  int flags;$/;"	m	struct:argp_option	access:public
flags	argp.h	/^  unsigned flags;$/;"	m	struct:argp_state	access:public
floor	tgmath.h	349;"	d
fma	tgmath.h	432;"	d
fmax	tgmath.h	425;"	d
fmin	tgmath.h	428;"	d
fmod	tgmath.h	352;"	d
fmtmsg	fmtmsg.h	/^extern int fmtmsg (long int __classification, __const char *__label,$/;"	p	signature:(long int __classification, __const char *__label, int __severity, __const char *__text, __const char *__action, __const char *__tag)
fnmatch	fnmatch.h	/^extern int fnmatch (__const char *__pattern, __const char *__name,$/;"	p	signature:(__const char *__pattern, __const char *__name, int __flags)
fordblks	malloc.h	/^  int fordblks; \/* total free space *\/$/;"	m	struct:mallinfo	access:public
fp_nquery	resolv.h	254;"	d
fp_query	resolv.h	255;"	d
fp_resstat	resolv.h	291;"	d
fpclassify	math.h	218;"	d
fpclassify	math.h	221;"	d
fpos64_t	stdio.h	/^typedef _G_fpos64_t fpos64_t;$/;"	t
fpos_t	stdio.h	/^typedef _G_fpos_t fpos_t;$/;"	t
fprintf	stdio.h	/^extern int fprintf (FILE *__restrict __stream,$/;"	p	signature:(FILE *__restrict __stream, __const char *__restrict __format, ...)
fptr	stdlib.h	/^    int32_t *fptr;		\/* Front pointer.  *\/$/;"	m	struct:random_data	access:public
fputc	stdio.h	/^extern int fputc (int __c, FILE *__stream);$/;"	p	signature:(int __c, FILE *__stream)
fputc_unlocked	stdio.h	/^extern int fputc_unlocked (int __c, FILE *__stream);$/;"	p	signature:(int __c, FILE *__stream)
fputs	stdio.h	/^extern int fputs (__const char *__restrict __s, FILE *__restrict __stream);$/;"	p	signature:(__const char *__restrict __s, FILE *__restrict __stream)
fputs_unlocked	stdio.h	/^extern int fputs_unlocked (__const char *__restrict __s,$/;"	p	signature:(__const char *__restrict __s, FILE *__restrict __stream)
fputwc	wchar.h	/^extern wint_t fputwc (wchar_t __wc, __FILE *__stream);$/;"	p	signature:(wchar_t __wc, __FILE *__stream)
fputwc_unlocked	wchar.h	/^extern wint_t fputwc_unlocked (wchar_t __wc, __FILE *__stream);$/;"	p	signature:(wchar_t __wc, __FILE *__stream)
fputws	wchar.h	/^extern int fputws (__const wchar_t *__restrict __ws,$/;"	p	signature:(__const wchar_t *__restrict __ws, __FILE *__restrict __stream)
fputws_unlocked	wchar.h	/^extern int fputws_unlocked (__const wchar_t *__restrict __ws,$/;"	p	signature:(__const wchar_t *__restrict __ws, __FILE *__restrict __stream)
frac_digits	locale.h	/^  char frac_digits;		\/* Local fractional digits.  *\/$/;"	m	struct:lconv	access:public
free	malloc.h	/^extern void free __MALLOC_P ((void *__ptr));$/;"	p	signature:(void *__ptr)
free_fcn	expat.h	/^  void (*free_fcn)(void *ptr);$/;"	m	struct:__anon46	access:public
free_func	zconf.h	98;"	d
free_func	zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
freefun	obstack.h	/^  void (*freefun) (void *, struct _obstack_chunk *);$/;"	m	struct:obstack	access:public
frexp	tgmath.h	294;"	d
fs_file	fstab.h	/^    char *fs_file;			\/* file system path prefix *\/$/;"	m	struct:fstab	access:public
fs_freq	fstab.h	/^    int	fs_freq;			\/* dump frequency, in days *\/$/;"	m	struct:fstab	access:public
fs_mntops	fstab.h	/^    char *fs_mntops;			\/* Mount options ala -o *\/$/;"	m	struct:fstab	access:public
fs_passno	fstab.h	/^    int	fs_passno;			\/* pass number on parallel dump *\/$/;"	m	struct:fstab	access:public
fs_spec	fstab.h	/^    char *fs_spec;			\/* block special device name *\/$/;"	m	struct:fstab	access:public
fs_type	fstab.h	/^    const char *fs_type;		\/* FSTAB_* from fs_mntops *\/$/;"	m	struct:fstab	access:public
fs_vfstype	fstab.h	/^    char *fs_vfstype;			\/* File system type, ufs, nfs *\/$/;"	m	struct:fstab	access:public
fscanf	stdio.h	459;"	d
fseek	stdio.h	/^extern int fseek (FILE *__stream, long int __off, int __whence);$/;"	p	signature:(FILE *__stream, long int __off, int __whence)
fseeko	stdio.h	/^extern int fseeko (FILE *__stream, __off_t __off, int __whence);$/;"	p	signature:(FILE *__stream, __off_t __off, int __whence)
fseeko64	stdio.h	/^extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);$/;"	p	signature:(FILE *__stream, __off64_t __off, int __whence)
fsetpos	stdio.h	/^extern int fsetpos (FILE *__stream, __const fpos_t *__pos);$/;"	p	signature:(FILE *__stream, __const fpos_t *__pos)
fsetpos64	stdio.h	/^extern int fsetpos64 (FILE *__stream, __const fpos64_t *__pos);$/;"	p	signature:(FILE *__stream, __const fpos64_t *__pos)
fsmblks	malloc.h	/^  int fsmblks;  \/* space available in freed fastbin blocks *\/$/;"	m	struct:mallinfo	access:public
fstab	fstab.h	/^struct fstab$/;"	s
fstab::fs_file	fstab.h	/^    char *fs_file;			\/* file system path prefix *\/$/;"	m	struct:fstab	access:public
fstab::fs_freq	fstab.h	/^    int	fs_freq;			\/* dump frequency, in days *\/$/;"	m	struct:fstab	access:public
fstab::fs_mntops	fstab.h	/^    char *fs_mntops;			\/* Mount options ala -o *\/$/;"	m	struct:fstab	access:public
fstab::fs_passno	fstab.h	/^    int	fs_passno;			\/* pass number on parallel dump *\/$/;"	m	struct:fstab	access:public
fstab::fs_spec	fstab.h	/^    char *fs_spec;			\/* block special device name *\/$/;"	m	struct:fstab	access:public
fstab::fs_type	fstab.h	/^    const char *fs_type;		\/* FSTAB_* from fs_mntops *\/$/;"	m	struct:fstab	access:public
fstab::fs_vfstype	fstab.h	/^    char *fs_vfstype;			\/* File system type, ufs, nfs *\/$/;"	m	struct:fstab	access:public
fsync	unistd.h	/^extern int fsync (int __fd);$/;"	p	signature:(int __fd)
ftruncate	unistd.h	1035;"	d
fts_accpath	fts.h	/^	char *fts_accpath;		\/* access path *\/$/;"	m	struct:_ftsent	access:public
fts_array	fts.h	/^	struct _ftsent **fts_array;	\/* sort array *\/$/;"	m	struct:__anon58	typeref:struct:__anon58::_ftsent	access:public
fts_child	fts.h	/^	struct _ftsent *fts_child;	\/* linked list of children *\/$/;"	m	struct:__anon58	typeref:struct:__anon58::_ftsent	access:public
fts_children	fts.h	/^FTSENT	*fts_children (FTS *, int);$/;"	p	signature:(FTS *, int)
fts_close	fts.h	/^int	 fts_close (FTS *);$/;"	p	signature:(FTS *)
fts_compar	fts.h	/^	int (*fts_compar) (const void *, const void *); \/* compare fn *\/$/;"	m	struct:__anon58	access:public
fts_cur	fts.h	/^	struct _ftsent *fts_cur;	\/* current node *\/$/;"	m	struct:__anon58	typeref:struct:__anon58::_ftsent	access:public
fts_cycle	fts.h	/^	struct _ftsent *fts_cycle;	\/* cycle node *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
fts_dev	fts.h	/^	dev_t fts_dev;			\/* device *\/$/;"	m	struct:_ftsent	access:public
fts_dev	fts.h	/^	dev_t fts_dev;			\/* starting device # *\/$/;"	m	struct:__anon58	access:public
fts_errno	fts.h	/^	int fts_errno;			\/* errno for this node *\/$/;"	m	struct:_ftsent	access:public
fts_flags	fts.h	/^	u_short fts_flags;		\/* private flags for FTSENT structure *\/$/;"	m	struct:_ftsent	access:public
fts_info	fts.h	/^	u_short fts_info;		\/* user flags for FTSENT structure *\/$/;"	m	struct:_ftsent	access:public
fts_ino	fts.h	/^	ino_t fts_ino;			\/* inode *\/$/;"	m	struct:_ftsent	access:public
fts_instr	fts.h	/^	u_short fts_instr;		\/* fts_set() instructions *\/$/;"	m	struct:_ftsent	access:public
fts_level	fts.h	/^	short fts_level;		\/* depth (-1 to N) *\/$/;"	m	struct:_ftsent	access:public
fts_link	fts.h	/^	struct _ftsent *fts_link;	\/* next file in directory *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
fts_name	fts.h	/^	char fts_name[1];		\/* file name *\/$/;"	m	struct:_ftsent	access:public
fts_namelen	fts.h	/^	u_short fts_namelen;		\/* strlen(fts_name) *\/$/;"	m	struct:_ftsent	access:public
fts_nitems	fts.h	/^	int fts_nitems;			\/* elements in the sort array *\/$/;"	m	struct:__anon58	access:public
fts_nlink	fts.h	/^	nlink_t fts_nlink;		\/* link count *\/$/;"	m	struct:_ftsent	access:public
fts_number	fts.h	/^	long fts_number;	        \/* local numeric value *\/$/;"	m	struct:_ftsent	access:public
fts_open	fts.h	/^FTS	*fts_open (char * const *, int,$/;"	p	signature:(char * const *, int, int (*)(const FTSENT **, const FTSENT **))
fts_options	fts.h	/^	int fts_options;		\/* fts_open options, global flags *\/$/;"	m	struct:__anon58	access:public
fts_parent	fts.h	/^	struct _ftsent *fts_parent;	\/* parent directory *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::_ftsent	access:public
fts_path	fts.h	/^	char *fts_path;			\/* path for this descent *\/$/;"	m	struct:__anon58	access:public
fts_path	fts.h	/^	char *fts_path;			\/* root path *\/$/;"	m	struct:_ftsent	access:public
fts_pathlen	fts.h	/^	int fts_pathlen;		\/* sizeof(path) *\/$/;"	m	struct:__anon58	access:public
fts_pathlen	fts.h	/^	u_short fts_pathlen;		\/* strlen(fts_path) *\/$/;"	m	struct:_ftsent	access:public
fts_pointer	fts.h	/^	void *fts_pointer;	        \/* local address value *\/$/;"	m	struct:_ftsent	access:public
fts_read	fts.h	/^FTSENT	*fts_read (FTS *);$/;"	p	signature:(FTS *)
fts_rfd	fts.h	/^	int fts_rfd;			\/* fd for root *\/$/;"	m	struct:__anon58	access:public
fts_statp	fts.h	/^	struct stat *fts_statp;		\/* stat(2) information *\/$/;"	m	struct:_ftsent	typeref:struct:_ftsent::stat	access:public
fts_symfd	fts.h	/^	int fts_symfd;			\/* fd for symlink *\/$/;"	m	struct:_ftsent	access:public
ftw	ftw.h	144;"	d
fwprintf	wchar.h	/^extern int fwprintf (__FILE *__restrict __stream,$/;"	p	signature:(__FILE *__restrict __stream, __const wchar_t *__restrict __format, ...)
fwrite	stdio.h	/^extern size_t fwrite (__const void *__restrict __ptr, size_t __size,$/;"	p	signature:(__const void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __s)
fwrite_unlocked	stdio.h	/^extern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,$/;"	p	signature:(__const void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream)
fwscanf	wchar.h	/^extern int fwscanf (__FILE *__restrict __stream,$/;"	p	signature:(__FILE *__restrict __stream, __const wchar_t *__restrict __format, ...)
fwscanf	wchar.h	672;"	d
gai_suspend	netdb.h	/^extern int gai_suspend (__const struct gaicb *__const __list[], int __ent,$/;"	p	signature:(__const struct gaicb *__const __list[], int __ent, __const struct timespec *__timeout)
gaicb	netdb.h	/^struct gaicb$/;"	s
gaicb::__return	netdb.h	/^  int __return;$/;"	m	struct:gaicb	access:public
gaicb::__unused	netdb.h	/^  int __unused[5];$/;"	m	struct:gaicb	access:public
gaicb::ar_name	netdb.h	/^  const char *ar_name;		\/* Name to look up.  *\/$/;"	m	struct:gaicb	access:public
gaicb::ar_request	netdb.h	/^  const struct addrinfo *ar_request; \/* Additional request specification.  *\/$/;"	m	struct:gaicb	typeref:struct:gaicb::addrinfo	access:public
gaicb::ar_result	netdb.h	/^  struct addrinfo *ar_result;	\/* Pointer to result.  *\/$/;"	m	struct:gaicb	typeref:struct:gaicb::addrinfo	access:public
gaicb::ar_service	netdb.h	/^  const char *ar_service;	\/* Service name.  *\/$/;"	m	struct:gaicb	access:public
gaih_addrtuple	nss.h	/^struct gaih_addrtuple$/;"	s
gaih_addrtuple::addr	nss.h	/^    uint32_t addr[4];$/;"	m	struct:gaih_addrtuple	access:public
gaih_addrtuple::family	nss.h	/^    int family;$/;"	m	struct:gaih_addrtuple	access:public
gaih_addrtuple::name	nss.h	/^    char *name;$/;"	m	struct:gaih_addrtuple	access:public
gaih_addrtuple::next	nss.h	/^    struct gaih_addrtuple *next;$/;"	m	struct:gaih_addrtuple	typeref:struct:gaih_addrtuple::gaih_addrtuple	access:public
gaih_addrtuple::scopeid	nss.h	/^    uint32_t scopeid;$/;"	m	struct:gaih_addrtuple	access:public
get_crc_table	zconf.h	47;"	d
get_crc_table	zlib.h	/^ZEXTERN const uLongf * ZEXPORT get_crc_table    OF((void));$/;"	p	signature:(void)
getaddrinfo	netdb.h	/^extern int getaddrinfo (__const char *__restrict __name,$/;"	p	signature:(__const char *__restrict __name, __const char *__restrict __service, __const struct addrinfo *__restrict __req, struct addrinfo **__restrict __pai)
getaddrinfo_a	netdb.h	/^extern int getaddrinfo_a (int __mode, struct gaicb *__list[__restrict_arr],$/;"	p	signature:(int __mode, struct gaicb *__list[__restrict_arr], int __ent, struct sigevent *__restrict __sig)
getc	stdio.h	/^extern int getc (FILE *__stream);$/;"	p	signature:(FILE *__stream)
getc	stdio.h	545;"	d
getc_unlocked	stdio.h	/^extern int getc_unlocked (FILE *__stream);$/;"	p	signature:(FILE *__stream)
getchar	stdio.h	/^extern int getchar (void);$/;"	p	signature:(void)
getchar_unlocked	stdio.h	/^extern int getchar_unlocked (void);$/;"	p	signature:(void)
getdate	time.h	/^extern struct tm *getdate (__const char *__string);$/;"	p	signature:(__const char *__string)
getdate_r	time.h	/^extern int getdate_r (__const char *__restrict __string,$/;"	p	signature:(__const char *__restrict __string, struct tm *__restrict __resbufp)
getdirentries	dirent.h	325;"	d
getgrent	grp.h	/^extern struct group *getgrent (void);$/;"	p	signature:(void)
getgrent_r	grp.h	/^extern int getgrent_r (struct group *__restrict __resultbuf,$/;"	p	signature:(struct group *__restrict __resultbuf, char *__restrict __buffer, size_t __buflen, struct group **__restrict __result)
getgrgid	grp.h	/^extern struct group *getgrgid (__gid_t __gid);$/;"	p	signature:(__gid_t __gid)
getgrgid_r	grp.h	/^extern int getgrgid_r (__gid_t __gid, struct group *__restrict __resultbuf,$/;"	p	signature:(__gid_t __gid, struct group *__restrict __resultbuf, char *__restrict __buffer, size_t __buflen, struct group **__restrict __result)
getgrnam	grp.h	/^extern struct group *getgrnam (__const char *__name);$/;"	p	signature:(__const char *__name)
getgrnam_r	grp.h	/^extern int getgrnam_r (__const char *__restrict __name,$/;"	p	signature:(__const char *__restrict __name, struct group *__restrict __resultbuf, char *__restrict __buffer, size_t __buflen, struct group **__restrict __result)
getgrouplist	grp.h	/^extern int getgrouplist (__const char *__user, __gid_t __group,$/;"	p	signature:(__const char *__user, __gid_t __group, __gid_t *__groups, int *__ngroups)
gethostbyaddr	netdb.h	/^extern struct hostent *gethostbyaddr (__const void *__addr, __socklen_t __len,$/;"	p	signature:(__const void *__addr, __socklen_t __len, int __type)
gethostbyaddr_r	netdb.h	/^extern int gethostbyaddr_r (__const void *__restrict __addr, __socklen_t __len,$/;"	p	signature:(__const void *__restrict __addr, __socklen_t __len, int __type, struct hostent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct hostent **__restrict __result, int *__restrict __h_errnop)
gethostbyname	netdb.h	/^extern struct hostent *gethostbyname (__const char *__name);$/;"	p	signature:(__const char *__name)
gethostbyname2	netdb.h	/^extern struct hostent *gethostbyname2 (__const char *__name, int __af);$/;"	p	signature:(__const char *__name, int __af)
gethostbyname2_r	netdb.h	/^extern int gethostbyname2_r (__const char *__restrict __name, int __af,$/;"	p	signature:(__const char *__restrict __name, int __af, struct hostent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct hostent **__restrict __result, int *__restrict __h_errnop)
gethostbyname_r	netdb.h	/^extern int gethostbyname_r (__const char *__restrict __name,$/;"	p	signature:(__const char *__restrict __name, struct hostent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct hostent **__restrict __result, int *__restrict __h_errnop)
gethostent	netdb.h	/^extern struct hostent *gethostent (void);$/;"	p	signature:(void)
gethostent_r	netdb.h	/^extern int gethostent_r (struct hostent *__restrict __result_buf,$/;"	p	signature:(struct hostent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct hostent **__restrict __result, int *__restrict __h_errnop)
gethostid	unistd.h	/^extern long int gethostid (void);$/;"	p	signature:(void)
getlogin	unistd.h	/^extern char *getlogin (void);$/;"	p	signature:(void)
getmsg	stropts.h	/^extern int getmsg (int __fildes, struct strbuf *__restrict __ctlptr,$/;"	p	signature:(int __fildes, struct strbuf *__restrict __ctlptr, struct strbuf *__restrict __dataptr, int *__restrict __flagsp)
getnameinfo	netdb.h	/^extern int getnameinfo (__const struct sockaddr *__restrict __sa,$/;"	p	signature:(__const struct sockaddr *__restrict __sa, socklen_t __salen, char *__restrict __host, socklen_t __hostlen, char *__restrict __serv, socklen_t __servlen, unsigned int __flags)
getnetbyaddr	netdb.h	/^extern struct netent *getnetbyaddr (uint32_t __net, int __type);$/;"	p	signature:(uint32_t __net, int __type)
getnetbyaddr_r	netdb.h	/^extern int getnetbyaddr_r (uint32_t __net, int __type,$/;"	p	signature:(uint32_t __net, int __type, struct netent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct netent **__restrict __result, int *__restrict __h_errnop)
getnetbyname	netdb.h	/^extern struct netent *getnetbyname (__const char *__name);$/;"	p	signature:(__const char *__name)
getnetbyname_r	netdb.h	/^extern int getnetbyname_r (__const char *__restrict __name,$/;"	p	signature:(__const char *__restrict __name, struct netent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct netent **__restrict __result, int *__restrict __h_errnop)
getnetent	netdb.h	/^extern struct netent *getnetent (void);$/;"	p	signature:(void)
getnetent_r	netdb.h	/^extern int getnetent_r (struct netent *__restrict __result_buf,$/;"	p	signature:(struct netent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct netent **__restrict __result, int *__restrict __h_errnop)
getnetgrent	netdb.h	/^extern int getnetgrent (char **__restrict __hostp,$/;"	p	signature:(char **__restrict __hostp, char **__restrict __userp, char **__restrict __domainp)
getnetgrent_r	netdb.h	/^extern int getnetgrent_r (char **__restrict __hostp,$/;"	p	signature:(char **__restrict __hostp, char **__restrict __userp, char **__restrict __domainp, char *__restrict __buffer, size_t __buflen)
getopt	getopt.h	/^extern int getopt ();$/;"	p	signature:()
getopt	getopt.h	167;"	d
getpgrp	unistd.h	638;"	d
getpmsg	stropts.h	/^extern int getpmsg (int __fildes, struct strbuf *__restrict __ctlptr,$/;"	p	signature:(int __fildes, struct strbuf *__restrict __ctlptr, struct strbuf *__restrict __dataptr, int *__restrict __bandp, int *__restrict __flagsp)
getprotobyname	netdb.h	/^extern struct protoent *getprotobyname (__const char *__name);$/;"	p	signature:(__const char *__name)
getprotobyname_r	netdb.h	/^extern int getprotobyname_r (__const char *__restrict __name,$/;"	p	signature:(__const char *__restrict __name, struct protoent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct protoent **__restrict __result)
getprotobynumber	netdb.h	/^extern struct protoent *getprotobynumber (int __proto);$/;"	p	signature:(int __proto)
getprotobynumber_r	netdb.h	/^extern int getprotobynumber_r (int __proto,$/;"	p	signature:(int __proto, struct protoent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct protoent **__restrict __result)
getprotoent	netdb.h	/^extern struct protoent *getprotoent (void);$/;"	p	signature:(void)
getprotoent_r	netdb.h	/^extern int getprotoent_r (struct protoent *__restrict __result_buf,$/;"	p	signature:(struct protoent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct protoent **__restrict __result)
getpt	stdlib.h	/^extern int getpt (void);$/;"	p	signature:(void)
getpw	pwd.h	/^extern int getpw (__uid_t __uid, char *__buffer);$/;"	p	signature:(__uid_t __uid, char *__buffer)
getpwent	pwd.h	/^extern struct passwd *getpwent (void);$/;"	p	signature:(void)
getpwent_r	pwd.h	/^extern int getpwent_r (struct passwd *__restrict __resultbuf,$/;"	p	signature:(struct passwd *__restrict __resultbuf, char *__restrict __buffer, size_t __buflen, struct passwd **__restrict __result)
getpwnam	pwd.h	/^extern struct passwd *getpwnam (__const char *__name);$/;"	p	signature:(__const char *__name)
getpwnam_r	pwd.h	/^extern int getpwnam_r (__const char *__restrict __name,$/;"	p	signature:(__const char *__restrict __name, struct passwd *__restrict __resultbuf, char *__restrict __buffer, size_t __buflen, struct passwd **__restrict __result)
getpwuid	pwd.h	/^extern struct passwd *getpwuid (__uid_t __uid);$/;"	p	signature:(__uid_t __uid)
getpwuid_r	pwd.h	/^extern int getpwuid_r (__uid_t __uid,$/;"	p	signature:(__uid_t __uid, struct passwd *__restrict __resultbuf, char *__restrict __buffer, size_t __buflen, struct passwd **__restrict __result)
getservbyname	netdb.h	/^extern struct servent *getservbyname (__const char *__name,$/;"	p	signature:(__const char *__name, __const char *__proto)
getservbyname_r	netdb.h	/^extern int getservbyname_r (__const char *__restrict __name,$/;"	p	signature:(__const char *__restrict __name, __const char *__restrict __proto, struct servent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct servent **__restrict __result)
getservbyport	netdb.h	/^extern struct servent *getservbyport (int __port, __const char *__proto);$/;"	p	signature:(int __port, __const char *__proto)
getservbyport_r	netdb.h	/^extern int getservbyport_r (int __port, __const char *__restrict __proto,$/;"	p	signature:(int __port, __const char *__restrict __proto, struct servent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct servent **__restrict __result)
getservent	netdb.h	/^extern struct servent *getservent (void);$/;"	p	signature:(void)
getservent_r	netdb.h	/^extern int getservent_r (struct servent *__restrict __result_buf,$/;"	p	signature:(struct servent *__restrict __result_buf, char *__restrict __buf, size_t __buflen, struct servent **__restrict __result)
getsgent	gshadow.h	/^extern struct sgrp *getsgent (void);$/;"	p	signature:(void)
getsgent_r	gshadow.h	/^extern int getsgent_r (struct sgrp *__result_buf, char *__buffer,$/;"	p	signature:(struct sgrp *__result_buf, char *__buffer, size_t __buflen, struct sgrp **__result)
getsgnam	gshadow.h	/^extern struct sgrp *getsgnam (__const char *__name);$/;"	p	signature:(__const char *__name)
getsgnam_r	gshadow.h	/^extern int getsgnam_r (__const char *__name, struct sgrp *__result_buf,$/;"	p	signature:(__const char *__name, struct sgrp *__result_buf, char *__buffer, size_t __buflen, struct sgrp **__result)
getspent	shadow.h	/^extern struct spwd *getspent (void);$/;"	p	signature:(void)
getspent_r	shadow.h	/^extern int getspent_r (struct spwd *__result_buf, char *__buffer,$/;"	p	signature:(struct spwd *__result_buf, char *__buffer, size_t __buflen, struct spwd **__result)
getspnam	shadow.h	/^extern struct spwd *getspnam (__const char *__name);$/;"	p	signature:(__const char *__name)
getspnam_r	shadow.h	/^extern int getspnam_r (__const char *__name, struct spwd *__result_buf,$/;"	p	signature:(__const char *__name, struct spwd *__result_buf, char *__buffer, size_t __buflen, struct spwd **__result)
gettext	libintl.h	110;"	d
getutmp	utmpx.h	/^extern void getutmp (__const struct utmpx *__utmpx,$/;"	p	signature:(__const struct utmpx *__utmpx, struct utmp *__utmp)
getutmpx	utmpx.h	/^extern void getutmpx (__const struct utmp *__utmp,$/;"	p	signature:(__const struct utmp *__utmp, struct utmpx *__utmpx)
getutxent	utmpx.h	/^extern struct utmpx *getutxent (void);$/;"	p	signature:(void)
getutxid	utmpx.h	/^extern struct utmpx *getutxid (__const struct utmpx *__id);$/;"	p	signature:(__const struct utmpx *__id)
getutxline	utmpx.h	/^extern struct utmpx *getutxline (__const struct utmpx *__line);$/;"	p	signature:(__const struct utmpx *__line)
getw	stdio.h	/^extern int getw (FILE *__stream);$/;"	p	signature:(FILE *__stream)
getwc	wchar.h	/^extern wint_t getwc (__FILE *__stream);$/;"	p	signature:(__FILE *__stream)
getwc_unlocked	wchar.h	/^extern wint_t getwc_unlocked (__FILE *__stream);$/;"	p	signature:(__FILE *__stream)
getwchar	wchar.h	/^extern wint_t getwchar (void);$/;"	p	signature:(void)
getwchar_unlocked	wchar.h	/^extern wint_t getwchar_unlocked (void);$/;"	p	signature:(void)
gid_t	grp.h	/^typedef __gid_t gid_t;$/;"	t
gid_t	pwd.h	/^typedef __gid_t gid_t;$/;"	t
gid_t	stropts.h	/^typedef __gid_t gid_t;$/;"	t
gid_t	unistd.h	/^typedef __gid_t gid_t;$/;"	t
gl_closedir	glob.h	/^    void (*gl_closedir) (void *);$/;"	m	struct:__anon79	access:public
gl_closedir	glob.h	/^    void (*gl_closedir) (void *);$/;"	m	struct:__anon80	access:public
gl_flags	glob.h	/^    int gl_flags;		\/* Set to FLAGS, maybe | GLOB_MAGCHAR.  *\/$/;"	m	struct:__anon79	access:public
gl_flags	glob.h	/^    int gl_flags;$/;"	m	struct:__anon80	access:public
gl_lstat	glob.h	/^    int (*gl_lstat) (__const char *__restrict, struct stat *__restrict);$/;"	m	struct:__anon79	access:public
gl_lstat	glob.h	/^    int (*gl_lstat) (__const char *__restrict, struct stat64 *__restrict);$/;"	m	struct:__anon80	access:public
gl_lstat	glob.h	/^    int (*gl_lstat) (__const char *__restrict, void *__restrict);$/;"	m	struct:__anon79	access:public
gl_lstat	glob.h	/^    int (*gl_lstat) (__const char *__restrict, void *__restrict);$/;"	m	struct:__anon80	access:public
gl_offs	glob.h	/^    __size_t gl_offs;		\/* Slots to reserve in `gl_pathv'.  *\/$/;"	m	struct:__anon79	access:public
gl_offs	glob.h	/^    __size_t gl_offs;$/;"	m	struct:__anon80	access:public
gl_opendir	glob.h	/^    void *(*gl_opendir) (__const char *);$/;"	m	struct:__anon79	access:public
gl_opendir	glob.h	/^    void *(*gl_opendir) (__const char *);$/;"	m	struct:__anon80	access:public
gl_pathc	glob.h	/^    __size_t gl_pathc;		\/* Count of paths matched by the pattern.  *\/$/;"	m	struct:__anon79	access:public
gl_pathc	glob.h	/^    __size_t gl_pathc;$/;"	m	struct:__anon80	access:public
gl_pathv	glob.h	/^    char **gl_pathv;		\/* List of matched pathnames.  *\/$/;"	m	struct:__anon79	access:public
gl_pathv	glob.h	/^    char **gl_pathv;$/;"	m	struct:__anon80	access:public
gl_readdir	glob.h	/^    struct dirent *(*gl_readdir) (void *);$/;"	m	struct:__anon79	typeref:struct:__anon79::gl_readdir	access:public
gl_readdir	glob.h	/^    struct dirent64 *(*gl_readdir) (void *);$/;"	m	struct:__anon80	typeref:struct:__anon80::gl_readdir	access:public
gl_readdir	glob.h	/^    void *(*gl_readdir) (void *);$/;"	m	struct:__anon79	access:public
gl_readdir	glob.h	/^    void *(*gl_readdir) (void *);$/;"	m	struct:__anon80	access:public
gl_stat	glob.h	/^    int (*gl_stat) (__const char *__restrict, struct stat *__restrict);$/;"	m	struct:__anon79	access:public
gl_stat	glob.h	/^    int (*gl_stat) (__const char *__restrict, struct stat64 *__restrict);$/;"	m	struct:__anon80	access:public
gl_stat	glob.h	/^    int (*gl_stat) (__const char *__restrict, void *__restrict);$/;"	m	struct:__anon79	access:public
gl_stat	glob.h	/^    int (*gl_stat) (__const char *__restrict, void *__restrict);$/;"	m	struct:__anon80	access:public
glob	glob.h	147;"	d
glob64_t	glob.h	/^  } glob64_t;$/;"	t	typeref:struct:__anon80
glob_t	glob.h	/^  } glob_t;$/;"	t	typeref:struct:__anon79
globfree	glob.h	148;"	d
gnu	autosprintf.h	/^namespace gnu$/;"	n
gnu::autosprintf	autosprintf.h	/^  class autosprintf$/;"	c	namespace:gnu
gnu::autosprintf::autosprintf	autosprintf.h	/^    autosprintf (const autosprintf& src);$/;"	p	class:gnu::autosprintf	access:public	signature:(const autosprintf& src)
gnu::autosprintf::autosprintf	autosprintf.h	/^    autosprintf (const char *format, ...)$/;"	p	class:gnu::autosprintf	access:public	signature:(const char *format, ...)
gnu::autosprintf::operator <<	autosprintf.h	/^    friend inline std::ostream& operator<< (std::ostream& stream, const autosprintf& tmp)$/;"	f	class:gnu::autosprintf	access:friend	signature:(std::ostream& stream, const autosprintf& tmp)
gnu::autosprintf::operator char *	autosprintf.h	/^    operator char * () const;$/;"	p	class:gnu::autosprintf	access:public	signature:() const
gnu::autosprintf::operator std::string	autosprintf.h	/^    operator std::string () const;$/;"	p	class:gnu::autosprintf	access:public	signature:() const
gnu::autosprintf::str	autosprintf.h	/^    char *str;$/;"	m	class:gnu::autosprintf	access:private
gnu::autosprintf::~autosprintf	autosprintf.h	/^    ~autosprintf ();$/;"	p	class:gnu::autosprintf	access:public	signature:()
gr_gid	grp.h	/^    __gid_t gr_gid;		\/* Group ID.	*\/$/;"	m	struct:group	access:public
gr_mem	grp.h	/^    char **gr_mem;		\/* Member list.	*\/$/;"	m	struct:group	access:public
gr_name	grp.h	/^    char *gr_name;		\/* Group name.	*\/$/;"	m	struct:group	access:public
gr_passwd	grp.h	/^    char *gr_passwd;		\/* Password.	*\/$/;"	m	struct:group	access:public
group	argp.h	/^  int group;$/;"	m	struct:argp_child	access:public
group	argp.h	/^  int group;$/;"	m	struct:argp_option	access:public
group	grp.h	/^struct group$/;"	s
group	printf.h	/^  unsigned int group:1;		\/* ' flag.  *\/$/;"	m	struct:printf_info	access:public
group::gr_gid	grp.h	/^    __gid_t gr_gid;		\/* Group ID.	*\/$/;"	m	struct:group	access:public
group::gr_mem	grp.h	/^    char **gr_mem;		\/* Member list.	*\/$/;"	m	struct:group	access:public
group::gr_name	grp.h	/^    char *gr_name;		\/* Group name.	*\/$/;"	m	struct:group	access:public
group::gr_passwd	grp.h	/^    char *gr_passwd;		\/* Password.	*\/$/;"	m	struct:group	access:public
grouping	locale.h	/^  char *grouping;$/;"	m	struct:lconv	access:public
gt_bytes	elf.h	/^      Elf32_Word gt_bytes;		\/* This many bytes would be used *\/$/;"	m	struct:__anon119::__anon121	access:public
gt_current_g_value	elf.h	/^      Elf32_Word gt_current_g_value;	\/* -G value used for compilation *\/$/;"	m	struct:__anon119::__anon120	access:public
gt_entry	elf.h	/^    } gt_entry;				\/* Subsequent entries in section *\/$/;"	m	union:__anon119	typeref:struct:__anon119::__anon121	access:public
gt_g_value	elf.h	/^      Elf32_Word gt_g_value;		\/* If this value were used for -G *\/$/;"	m	struct:__anon119::__anon121	access:public
gt_header	elf.h	/^    } gt_header;			\/* First entry in section *\/$/;"	m	union:__anon119	typeref:struct:__anon119::__anon120	access:public
gt_unused	elf.h	/^      Elf32_Word gt_unused;		\/* Not used *\/$/;"	m	struct:__anon119::__anon120	access:public
gzFile	zconf.h	99;"	d
gzFile	zlib.h	/^typedef voidp gzFile;$/;"	t
gz_header	zconf.h	100;"	d
gz_header	zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	zconf.h	119;"	d
gz_header_s	zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_header_s::comm_max	zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::comment	zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::done	zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s	access:public
gz_header_s::extra	zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::extra_len	zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::extra_max	zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::hcrc	zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::name	zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::name_max	zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::os	zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::text	zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::time	zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s	access:public
gz_header_s::xflags	zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s	access:public
gz_headerp	zconf.h	101;"	d
gz_headerp	zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t
gzclearerr	zconf.h	48;"	d
gzclearerr	zlib.h	/^ZEXTERN void ZEXPORT gzclearerr OF((gzFile file));$/;"	p	signature:(gzFile file)
gzclose	zconf.h	49;"	d
gzclose	zlib.h	/^ZEXTERN int ZEXPORT    gzclose OF((gzFile file));$/;"	p	signature:(gzFile file)
gzdirect	zconf.h	50;"	d
gzdirect	zlib.h	/^ZEXTERN int ZEXPORT gzdirect OF((gzFile file));$/;"	p	signature:(gzFile file)
gzdopen	zconf.h	51;"	d
gzdopen	zlib.h	/^ZEXTERN gzFile ZEXPORT gzdopen  OF((int fd, const char *mode));$/;"	p	signature:(int fd, const char *mode)
gzeof	zconf.h	52;"	d
gzeof	zlib.h	/^ZEXTERN int ZEXPORT gzeof OF((gzFile file));$/;"	p	signature:(gzFile file)
gzerror	zconf.h	53;"	d
gzerror	zlib.h	/^ZEXTERN const char * ZEXPORT gzerror OF((gzFile file, int *errnum));$/;"	p	signature:(gzFile file, int *errnum)
gzflush	zconf.h	54;"	d
gzflush	zlib.h	/^ZEXTERN int ZEXPORT    gzflush OF((gzFile file, int flush));$/;"	p	signature:(gzFile file, int flush)
gzgetc	zconf.h	55;"	d
gzgetc	zlib.h	/^ZEXTERN int ZEXPORT    gzgetc OF((gzFile file));$/;"	p	signature:(gzFile file)
gzgets	zconf.h	56;"	d
gzgets	zlib.h	/^ZEXTERN char * ZEXPORT gzgets OF((gzFile file, char *buf, int len));$/;"	p	signature:(gzFile file, char *buf, int len)
gzopen	zconf.h	57;"	d
gzopen	zlib.h	/^   ZEXTERN gzFile ZEXPORT gzopen OF((const char *, const char *));$/;"	p	signature:(const char *, const char *)
gzopen	zlib.h	1455;"	d
gzopen64	zlib.h	/^     ZEXTERN gzFile ZEXPORT gzopen64 OF((const char *, const char *));$/;"	p	signature:(const char *, const char *)
gzopen64	zlib.h	/^   ZEXTERN gzFile ZEXPORT gzopen64 OF((const char *, const char *));$/;"	p	signature:(const char *, const char *)
gzprintf	zconf.h	58;"	d
gzprintf	zlib.h	/^ZEXTERN int ZEXPORTVA   gzprintf OF((gzFile file, const char *format, ...));$/;"	p	signature:(gzFile file, const char *format, ...)
gzputc	zconf.h	59;"	d
gzputc	zlib.h	/^ZEXTERN int ZEXPORT    gzputc OF((gzFile file, int c));$/;"	p	signature:(gzFile file, int c)
gzputs	zconf.h	60;"	d
gzputs	zlib.h	/^ZEXTERN int ZEXPORT gzputs OF((gzFile file, const char *s));$/;"	p	signature:(gzFile file, const char *s)
gzread	zconf.h	61;"	d
gzread	zlib.h	/^ZEXTERN int ZEXPORT    gzread  OF((gzFile file, voidp buf, unsigned len));$/;"	p	signature:(gzFile file, voidp buf, unsigned len)
gzrewind	zconf.h	62;"	d
gzrewind	zlib.h	/^ZEXTERN int ZEXPORT    gzrewind OF((gzFile file));$/;"	p	signature:(gzFile file)
gzseek	zconf.h	63;"	d
gzseek	zlib.h	/^   ZEXTERN z_off_t ZEXPORT gzseek OF((gzFile, z_off_t, int));$/;"	p	signature:(gzFile, z_off_t, int)
gzseek	zlib.h	1456;"	d
gzseek64	zlib.h	/^     ZEXTERN off_t ZEXPORT gzseek64 OF((gzFile, off_t, int));$/;"	p	signature:(gzFile, off_t, int)
gzseek64	zlib.h	/^   ZEXTERN z_off64_t ZEXPORT gzseek64 OF((gzFile, z_off64_t, int));$/;"	p	signature:(gzFile, z_off64_t, int)
gzsetparams	zconf.h	64;"	d
gzsetparams	zlib.h	/^ZEXTERN int ZEXPORT gzsetparams OF((gzFile file, int level, int strategy));$/;"	p	signature:(gzFile file, int level, int strategy)
gztell	zconf.h	65;"	d
gztell	zlib.h	/^   ZEXTERN z_off_t ZEXPORT gztell OF((gzFile));$/;"	p	signature:(gzFile)
gztell	zlib.h	1457;"	d
gztell64	zlib.h	/^     ZEXTERN off_t ZEXPORT gztell64 OF((gzFile));$/;"	p	signature:(gzFile)
gztell64	zlib.h	/^   ZEXTERN z_off64_t ZEXPORT gztell64 OF((gzFile));$/;"	p	signature:(gzFile)
gzungetc	zconf.h	66;"	d
gzungetc	zlib.h	/^ZEXTERN int ZEXPORT    gzungetc OF((int c, gzFile file));$/;"	p	signature:(int c, gzFile file)
gzwrite	zconf.h	67;"	d
gzwrite	zlib.h	/^ZEXTERN int ZEXPORT    gzwrite OF((gzFile file,$/;"	p	signature:(gzFile file, voidpc buf, unsigned len)
h_addr	netdb.h	109;"	d
h_addr_list	netdb.h	/^  char **h_addr_list;		\/* List of addresses from name server.  *\/$/;"	m	struct:hostent	access:public
h_addrtype	netdb.h	/^  int h_addrtype;		\/* Host address type.  *\/$/;"	m	struct:hostent	access:public
h_aliases	netdb.h	/^  char **h_aliases;		\/* Alias list.  *\/$/;"	m	struct:hostent	access:public
h_errno	netdb.h	59;"	d
h_length	netdb.h	/^  int h_length;			\/* Length of address.  *\/$/;"	m	struct:hostent	access:public
h_name	netdb.h	/^  char *h_name;			\/* Official name of host.  *\/$/;"	m	struct:hostent	access:public
has_arg	getopt.h	/^  int has_arg;$/;"	m	struct:option	access:public
hblkhd	malloc.h	/^  int hblkhd;   \/* space in mmapped regions *\/$/;"	m	struct:mallinfo	access:public
hblks	malloc.h	/^  int hblks;    \/* number of mmapped regions *\/$/;"	m	struct:mallinfo	access:public
hcrc	zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s	access:public
header	argp.h	/^  __const char *header;$/;"	m	struct:argp_child	access:public
help_filter	argp.h	/^  char *(*help_filter) (int __key, __const char *__text, void *__input);$/;"	m	struct:argp	access:public
hook	argp.h	/^  void *hook;$/;"	m	struct:argp_state	access:public
hostalias	resolv.h	256;"	d
hostent	netdb.h	/^struct hostent$/;"	s
hostent::h_addr_list	netdb.h	/^  char **h_addr_list;		\/* List of addresses from name server.  *\/$/;"	m	struct:hostent	access:public
hostent::h_addrtype	netdb.h	/^  int h_addrtype;		\/* Host address type.  *\/$/;"	m	struct:hostent	access:public
hostent::h_aliases	netdb.h	/^  char **h_aliases;		\/* Alias list.  *\/$/;"	m	struct:hostent	access:public
hostent::h_length	netdb.h	/^  int h_length;			\/* Length of address.  *\/$/;"	m	struct:hostent	access:public
hostent::h_name	netdb.h	/^  char *h_name;			\/* Official name of host.  *\/$/;"	m	struct:hostent	access:public
hsearch_data	search.h	/^struct hsearch_data$/;"	s
hsearch_data::filled	search.h	/^    unsigned int filled;$/;"	m	struct:hsearch_data	access:public
hsearch_data::size	search.h	/^    unsigned int size;$/;"	m	struct:hsearch_data	access:public
hsearch_data::table	search.h	/^    struct _ENTRY *table;$/;"	m	struct:hsearch_data	typeref:struct:hsearch_data::_ENTRY	access:public
htobe16	endian.h	64;"	d
htobe16	endian.h	79;"	d
htobe32	endian.h	69;"	d
htobe32	endian.h	84;"	d
htobe64	endian.h	74;"	d
htobe64	endian.h	89;"	d
htole16	endian.h	65;"	d
htole16	endian.h	80;"	d
htole32	endian.h	70;"	d
htole32	endian.h	85;"	d
htole64	endian.h	75;"	d
htole64	endian.h	90;"	d
humanname	resolv.h	/^	char *	humanname;	\/* Its fun name, like "mail exchanger" *\/$/;"	m	struct:res_sym	access:public
hwp_flags1	elf.h	/^  Elf32_Word hwp_flags1;	\/* Extra flags.  *\/$/;"	m	struct:__anon124	access:public
hwp_flags2	elf.h	/^  Elf32_Word hwp_flags2;	\/* Extra flags.  *\/$/;"	m	struct:__anon124	access:public
hypot	tgmath.h	334;"	d
i18n	printf.h	/^  unsigned int i18n:1;		\/* I flag.  *\/$/;"	m	struct:printf_info	access:public
iconv	iconv.h	/^extern size_t iconv (iconv_t __cd, char **__restrict __inbuf,$/;"	p	signature:(iconv_t __cd, char **__restrict __inbuf, size_t *__restrict __inbytesleft, char **__restrict __outbuf, size_t *__restrict __outbytesleft)
iconv_close	iconv.h	/^extern int iconv_close (iconv_t __cd);$/;"	p	signature:(iconv_t __cd)
iconv_open	iconv.h	/^extern iconv_t iconv_open (__const char *__tocode, __const char *__fromcode);$/;"	p	signature:(__const char *__tocode, __const char *__fromcode)
iconv_t	iconv.h	/^typedef void *iconv_t;$/;"	t
id	resolv.h	/^	u_short	id;			\/* current message id *\/$/;"	m	struct:__res_state	access:public
ieee	ieee754.h	/^      } ieee;$/;"	m	union:ieee754_double	typeref:struct:ieee754_double::__anon5	access:public
ieee	ieee754.h	/^      } ieee;$/;"	m	union:ieee754_float	typeref:struct:ieee754_float::__anon3	access:public
ieee	ieee754.h	/^      } ieee;$/;"	m	union:ieee854_long_double	typeref:struct:ieee854_long_double::__anon7	access:public
ieee754_double	ieee754.h	/^union ieee754_double$/;"	u
ieee754_double::__anon5::exponent	ieee754.h	/^	unsigned int exponent:11;$/;"	m	struct:ieee754_double::__anon5	access:public
ieee754_double::__anon5::mantissa0	ieee754.h	/^	unsigned int mantissa0:20;$/;"	m	struct:ieee754_double::__anon5	access:public
ieee754_double::__anon5::mantissa1	ieee754.h	/^	unsigned int mantissa1:32;$/;"	m	struct:ieee754_double::__anon5	access:public
ieee754_double::__anon5::negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee754_double::__anon5	access:public
ieee754_double::__anon6::exponent	ieee754.h	/^	unsigned int exponent:11;$/;"	m	struct:ieee754_double::__anon6	access:public
ieee754_double::__anon6::mantissa0	ieee754.h	/^	unsigned int mantissa0:19;$/;"	m	struct:ieee754_double::__anon6	access:public
ieee754_double::__anon6::mantissa1	ieee754.h	/^	unsigned int mantissa1:32;$/;"	m	struct:ieee754_double::__anon6	access:public
ieee754_double::__anon6::negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee754_double::__anon6	access:public
ieee754_double::__anon6::quiet_nan	ieee754.h	/^	unsigned int quiet_nan:1;$/;"	m	struct:ieee754_double::__anon6	access:public
ieee754_double::d	ieee754.h	/^    double d;$/;"	m	union:ieee754_double	access:public
ieee754_double::ieee	ieee754.h	/^      } ieee;$/;"	m	union:ieee754_double	typeref:struct:ieee754_double::__anon5	access:public
ieee754_double::ieee_nan	ieee754.h	/^      } ieee_nan;$/;"	m	union:ieee754_double	typeref:struct:ieee754_double::__anon6	access:public
ieee754_float	ieee754.h	/^union ieee754_float$/;"	u
ieee754_float::__anon3::exponent	ieee754.h	/^	unsigned int exponent:8;$/;"	m	struct:ieee754_float::__anon3	access:public
ieee754_float::__anon3::mantissa	ieee754.h	/^	unsigned int mantissa:23;$/;"	m	struct:ieee754_float::__anon3	access:public
ieee754_float::__anon3::negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee754_float::__anon3	access:public
ieee754_float::__anon4::exponent	ieee754.h	/^	unsigned int exponent:8;$/;"	m	struct:ieee754_float::__anon4	access:public
ieee754_float::__anon4::mantissa	ieee754.h	/^	unsigned int mantissa:22;$/;"	m	struct:ieee754_float::__anon4	access:public
ieee754_float::__anon4::negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee754_float::__anon4	access:public
ieee754_float::__anon4::quiet_nan	ieee754.h	/^	unsigned int quiet_nan:1;$/;"	m	struct:ieee754_float::__anon4	access:public
ieee754_float::f	ieee754.h	/^    float f;$/;"	m	union:ieee754_float	access:public
ieee754_float::ieee	ieee754.h	/^      } ieee;$/;"	m	union:ieee754_float	typeref:struct:ieee754_float::__anon3	access:public
ieee754_float::ieee_nan	ieee754.h	/^      } ieee_nan;$/;"	m	union:ieee754_float	typeref:struct:ieee754_float::__anon4	access:public
ieee854_long_double	ieee754.h	/^union ieee854_long_double$/;"	u
ieee854_long_double::__anon7::empty	ieee754.h	/^	unsigned int empty:16;$/;"	m	struct:ieee854_long_double::__anon7	access:public
ieee854_long_double::__anon7::exponent	ieee754.h	/^	unsigned int exponent:15;$/;"	m	struct:ieee854_long_double::__anon7	access:public
ieee854_long_double::__anon7::mantissa0	ieee754.h	/^	unsigned int mantissa0:32;$/;"	m	struct:ieee854_long_double::__anon7	access:public
ieee854_long_double::__anon7::mantissa1	ieee754.h	/^	unsigned int mantissa1:32;$/;"	m	struct:ieee854_long_double::__anon7	access:public
ieee854_long_double::__anon7::negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee854_long_double::__anon7	access:public
ieee854_long_double::__anon8::empty	ieee754.h	/^	unsigned int empty:16;$/;"	m	struct:ieee854_long_double::__anon8	access:public
ieee854_long_double::__anon8::exponent	ieee754.h	/^	unsigned int exponent:15;$/;"	m	struct:ieee854_long_double::__anon8	access:public
ieee854_long_double::__anon8::mantissa0	ieee754.h	/^	unsigned int mantissa0:30;$/;"	m	struct:ieee854_long_double::__anon8	access:public
ieee854_long_double::__anon8::mantissa1	ieee754.h	/^	unsigned int mantissa1:32;$/;"	m	struct:ieee854_long_double::__anon8	access:public
ieee854_long_double::__anon8::negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee854_long_double::__anon8	access:public
ieee854_long_double::__anon8::one	ieee754.h	/^	unsigned int one:1;$/;"	m	struct:ieee854_long_double::__anon8	access:public
ieee854_long_double::__anon8::quiet_nan	ieee754.h	/^	unsigned int quiet_nan:1;$/;"	m	struct:ieee854_long_double::__anon8	access:public
ieee854_long_double::d	ieee754.h	/^    long double d;$/;"	m	union:ieee854_long_double	access:public
ieee854_long_double::ieee	ieee754.h	/^      } ieee;$/;"	m	union:ieee854_long_double	typeref:struct:ieee854_long_double::__anon7	access:public
ieee854_long_double::ieee_nan	ieee754.h	/^      } ieee_nan;$/;"	m	union:ieee854_long_double	typeref:struct:ieee854_long_double::__anon8	access:public
ieee_nan	ieee754.h	/^      } ieee_nan;$/;"	m	union:ieee754_double	typeref:struct:ieee754_double::__anon6	access:public
ieee_nan	ieee754.h	/^      } ieee_nan;$/;"	m	union:ieee754_float	typeref:struct:ieee754_float::__anon4	access:public
ieee_nan	ieee754.h	/^      } ieee_nan;$/;"	m	union:ieee854_long_double	typeref:struct:ieee854_long_double::__anon8	access:public
ifa_addr	ifaddrs.h	/^  struct sockaddr *ifa_addr;	\/* Network address of this interface.  *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr	access:public
ifa_broadaddr	ifaddrs.h	51;"	d
ifa_data	ifaddrs.h	/^  void *ifa_data;		\/* Address-specific data (may be unused).  *\/$/;"	m	struct:ifaddrs	access:public
ifa_dstaddr	ifaddrs.h	54;"	d
ifa_flags	ifaddrs.h	/^  unsigned int ifa_flags;	\/* Flags as from SIOCGIFFLAGS ioctl.  *\/$/;"	m	struct:ifaddrs	access:public
ifa_ifu	ifaddrs.h	/^  } ifa_ifu;$/;"	m	struct:ifaddrs	typeref:union:ifaddrs::__anon76	access:public
ifa_name	ifaddrs.h	/^  char *ifa_name;		\/* Name of this network interface.  *\/$/;"	m	struct:ifaddrs	access:public
ifa_netmask	ifaddrs.h	/^  struct sockaddr *ifa_netmask; \/* Netmask of this interface.  *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr	access:public
ifa_next	ifaddrs.h	/^  struct ifaddrs *ifa_next;	\/* Pointer to the next structure.  *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::ifaddrs	access:public
ifaddrs	ifaddrs.h	/^struct ifaddrs$/;"	s
ifaddrs::__anon76::ifu_broadaddr	ifaddrs.h	/^    struct sockaddr *ifu_broadaddr; \/* Broadcast address of this interface. *\/$/;"	m	union:ifaddrs::__anon76	typeref:struct:ifaddrs::__anon76::sockaddr	access:public
ifaddrs::__anon76::ifu_dstaddr	ifaddrs.h	/^    struct sockaddr *ifu_dstaddr; \/* Point-to-point destination address.  *\/$/;"	m	union:ifaddrs::__anon76	typeref:struct:ifaddrs::__anon76::sockaddr	access:public
ifaddrs::ifa_addr	ifaddrs.h	/^  struct sockaddr *ifa_addr;	\/* Network address of this interface.  *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr	access:public
ifaddrs::ifa_data	ifaddrs.h	/^  void *ifa_data;		\/* Address-specific data (may be unused).  *\/$/;"	m	struct:ifaddrs	access:public
ifaddrs::ifa_flags	ifaddrs.h	/^  unsigned int ifa_flags;	\/* Flags as from SIOCGIFFLAGS ioctl.  *\/$/;"	m	struct:ifaddrs	access:public
ifaddrs::ifa_ifu	ifaddrs.h	/^  } ifa_ifu;$/;"	m	struct:ifaddrs	typeref:union:ifaddrs::__anon76	access:public
ifaddrs::ifa_name	ifaddrs.h	/^  char *ifa_name;		\/* Name of this network interface.  *\/$/;"	m	struct:ifaddrs	access:public
ifaddrs::ifa_netmask	ifaddrs.h	/^  struct sockaddr *ifa_netmask; \/* Netmask of this interface.  *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr	access:public
ifaddrs::ifa_next	ifaddrs.h	/^  struct ifaddrs *ifa_next;	\/* Pointer to the next structure.  *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::ifaddrs	access:public
ifu_broadaddr	ifaddrs.h	/^    struct sockaddr *ifu_broadaddr; \/* Broadcast address of this interface. *\/$/;"	m	union:ifaddrs::__anon76	typeref:struct:ifaddrs::__anon76::sockaddr	access:public
ifu_dstaddr	ifaddrs.h	/^    struct sockaddr *ifu_dstaddr; \/* Point-to-point destination address.  *\/$/;"	m	union:ifaddrs::__anon76	typeref:struct:ifaddrs::__anon76::sockaddr	access:public
ilogb	tgmath.h	418;"	d
imaxdiv_t	inttypes.h	/^  } imaxdiv_t;$/;"	t	typeref:struct:__anon129
in_func	zconf.h	102;"	d
in_func	zlib.h	/^typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));$/;"	t
inflate	zconf.h	68;"	d
inflate	zlib.h	/^ZEXTERN int ZEXPORT inflate OF((z_streamp strm, int flush));$/;"	p	signature:(z_streamp strm, int flush)
inflateBack	zconf.h	69;"	d
inflateBack	zlib.h	/^ZEXTERN int ZEXPORT inflateBack OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, in_func in, void FAR *in_desc, out_func out, void FAR *out_desc)
inflateBackEnd	zconf.h	70;"	d
inflateBackEnd	zlib.h	/^ZEXTERN int ZEXPORT inflateBackEnd OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
inflateBackInit	zlib.h	1434;"	d
inflateBackInit_	zconf.h	71;"	d
inflateBackInit_	zlib.h	/^ZEXTERN int ZEXPORT inflateBackInit_ OF((z_streamp strm, int windowBits,$/;"	p	signature:(z_streamp strm, int windowBits, unsigned char FAR *window, const char *version, int stream_size)
inflateCopy	zconf.h	72;"	d
inflateCopy	zlib.h	/^ZEXTERN int ZEXPORT inflateCopy OF((z_streamp dest,$/;"	p	signature:(z_streamp dest, z_streamp source)
inflateEnd	zconf.h	73;"	d
inflateEnd	zlib.h	/^ZEXTERN int ZEXPORT inflateEnd OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
inflateGetHeader	zconf.h	74;"	d
inflateGetHeader	zlib.h	/^ZEXTERN int ZEXPORT inflateGetHeader OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, gz_headerp head)
inflateInit	zlib.h	1427;"	d
inflateInit2	zlib.h	1432;"	d
inflateInit2_	zconf.h	75;"	d
inflateInit2_	zlib.h	/^ZEXTERN int ZEXPORT inflateInit2_ OF((z_streamp strm, int  windowBits,$/;"	p	signature:(z_streamp strm, int windowBits, const char *version, int stream_size)
inflateInit_	zconf.h	76;"	d
inflateInit_	zlib.h	/^ZEXTERN int ZEXPORT inflateInit_ OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, const char *version, int stream_size)
inflateMark	zlib.h	/^ZEXTERN long ZEXPORT inflateMark OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
inflatePrime	zconf.h	77;"	d
inflatePrime	zlib.h	/^ZEXTERN int ZEXPORT inflatePrime OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, int bits, int value)
inflateReset	zconf.h	78;"	d
inflateReset	zlib.h	/^ZEXTERN int ZEXPORT inflateReset OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
inflateReset2	zlib.h	/^ZEXTERN int ZEXPORT inflateReset2 OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, int windowBits)
inflateSetDictionary	zconf.h	79;"	d
inflateSetDictionary	zlib.h	/^ZEXTERN int ZEXPORT inflateSetDictionary OF((z_streamp strm,$/;"	p	signature:(z_streamp strm, const Bytef *dictionary, uInt dictLength)
inflateSync	zconf.h	80;"	d
inflateSync	zlib.h	/^ZEXTERN int ZEXPORT inflateSync OF((z_streamp strm));$/;"	p	signature:(z_streamp strm)
inflateSyncPoint	zconf.h	81;"	d
inflateSyncPoint	zlib.h	/^ZEXTERN int            ZEXPORT inflateSyncPoint OF((z_streamp));$/;"	p	signature:(z_streamp)
inflateUndermine	zlib.h	/^ZEXTERN int            ZEXPORT inflateUndermine OF((z_streamp, int));$/;"	p	signature:(z_streamp, int)
inflate_copyright	zconf.h	82;"	d
inflate_fast	zconf.h	83;"	d
inflate_table	zconf.h	84;"	d
info	elf.h	/^  Elf32_Word info;		\/* Kind-specific information.  *\/$/;"	m	struct:__anon123	access:public
initgroups	grp.h	/^extern int initgroups (__const char *__user, __gid_t __group);$/;"	p	signature:(__const char *__user, __gid_t __group)
initialized	crypt.h	/^    int  direction, initialized;$/;"	m	struct:crypt_data	access:public
initstamp	resolv.h	/^			unsigned long long int	initstamp$/;"	m	struct:__res_state::__anon42::__anon43	access:public
innetgr	netdb.h	/^extern int innetgr (__const char *__netgroup, __const char *__host,$/;"	p	signature:(__const char *__netgroup, __const char *__host, __const char *__user, __const char *__domain)
ino64_t	dirent.h	/^typedef __ino64_t ino64_t;$/;"	t
ino_t	dirent.h	/^typedef __ino_t ino_t;$/;"	t
input	argp.h	/^  void *input;$/;"	m	struct:argp_state	access:public
int16_t	stdint.h	/^typedef short int		int16_t;$/;"	t
int32_t	stdint.h	/^typedef int			int32_t;$/;"	t
int64_t	stdint.h	/^typedef long int		int64_t;$/;"	t
int64_t	stdint.h	/^typedef long long int		int64_t;$/;"	t
int8_t	stdint.h	/^typedef signed char		int8_t;$/;"	t
int_curr_symbol	locale.h	/^  char *int_curr_symbol;$/;"	m	struct:lconv	access:public
int_fast16_t	stdint.h	/^typedef int			int_fast16_t;$/;"	t
int_fast16_t	stdint.h	/^typedef long int		int_fast16_t;$/;"	t
int_fast32_t	stdint.h	/^typedef int			int_fast32_t;$/;"	t
int_fast32_t	stdint.h	/^typedef long int		int_fast32_t;$/;"	t
int_fast64_t	stdint.h	/^typedef long int		int_fast64_t;$/;"	t
int_fast64_t	stdint.h	/^typedef long long int		int_fast64_t;$/;"	t
int_fast8_t	stdint.h	/^typedef signed char		int_fast8_t;$/;"	t
int_frac_digits	locale.h	/^  char int_frac_digits;		\/* Int'l fractional digits.  *\/$/;"	m	struct:lconv	access:public
int_least16_t	stdint.h	/^typedef short int		int_least16_t;$/;"	t
int_least32_t	stdint.h	/^typedef int			int_least32_t;$/;"	t
int_least64_t	stdint.h	/^typedef long int		int_least64_t;$/;"	t
int_least64_t	stdint.h	/^typedef long long int		int_least64_t;$/;"	t
int_least8_t	stdint.h	/^typedef signed char		int_least8_t;$/;"	t
int_n_cs_precedes	locale.h	/^  char int_n_cs_precedes;$/;"	m	struct:lconv	access:public
int_n_sep_by_space	locale.h	/^  char int_n_sep_by_space;$/;"	m	struct:lconv	access:public
int_n_sign_posn	locale.h	/^  char int_n_sign_posn;$/;"	m	struct:lconv	access:public
int_p_cs_precedes	locale.h	/^  char int_p_cs_precedes;$/;"	m	struct:lconv	access:public
int_p_sep_by_space	locale.h	/^  char int_p_sep_by_space;$/;"	m	struct:lconv	access:public
int_p_sign_posn	locale.h	/^  char int_p_sign_posn;$/;"	m	struct:lconv	access:public
internal_state	zconf.h	120;"	d
internal_state	zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	s
internal_state::dummy	zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	m	struct:internal_state	access:public
intf	zconf.h	/^typedef int   FAR intf;$/;"	t
intf	zconf.h	103;"	d
intmax_t	stdint.h	/^typedef long int		intmax_t;$/;"	t
intmax_t	stdint.h	/^typedef long long int		intmax_t;$/;"	t
intptr_t	stdint.h	/^typedef int			intptr_t;$/;"	t
intptr_t	stdint.h	/^typedef long int		intptr_t;$/;"	t
intptr_t	unistd.h	/^typedef __intptr_t intptr_t;$/;"	t
ipv6_unavail	resolv.h	/^	unsigned ipv6_unavail:1;	\/* connecting to IPv6 server failed *\/$/;"	m	struct:__res_state	access:public
iruserok	netdb.h	/^extern int iruserok (uint32_t __raddr, int __suser,$/;"	p	signature:(uint32_t __raddr, int __suser, __const char *__remuser, __const char *__locuser)
iruserok_af	netdb.h	/^extern int iruserok_af (__const void *__raddr, int __suser,$/;"	p	signature:(__const void *__raddr, int __suser, __const char *__remuser, __const char *__locuser, sa_family_t __af)
is_char	printf.h	/^  unsigned int is_char:1;	\/* hh flag.  *\/$/;"	m	struct:printf_info	access:public
is_long	printf.h	/^  unsigned int is_long:1;	\/* l flag.  *\/$/;"	m	struct:printf_info	access:public
is_long_double	printf.h	/^  unsigned int is_long_double:1;\/* L flag.  *\/$/;"	m	struct:printf_info	access:public
is_short	printf.h	/^  unsigned int is_short:1;	\/* h flag.  *\/$/;"	m	struct:printf_info	access:public
isalnum	ctype.h	173;"	d
isalnum_l	ctype.h	/^__exctype_l (isalnum_l);$/;"	v
isalnum_l	ctype.h	300;"	d
isalpha	ctype.h	/^__exctype (isalpha);$/;"	v
isalpha	ctype.h	174;"	d
isalpha_l	ctype.h	/^__exctype_l (isalpha_l);$/;"	v
isalpha_l	ctype.h	301;"	d
isascii	ctype.h	209;"	d
isascii_l	ctype.h	315;"	d
isblank	ctype.h	186;"	d
isblank_l	ctype.h	/^__exctype_l (isblank_l);$/;"	v
isblank_l	ctype.h	312;"	d
iscntrl	ctype.h	/^__exctype (iscntrl);$/;"	v
iscntrl	ctype.h	175;"	d
iscntrl_l	ctype.h	/^__exctype_l (iscntrl_l);$/;"	v
iscntrl_l	ctype.h	302;"	d
isdigit	ctype.h	/^__exctype (isdigit);$/;"	v
isdigit	ctype.h	176;"	d
isdigit_l	ctype.h	/^__exctype_l (isdigit_l);$/;"	v
isdigit_l	ctype.h	303;"	d
isfinite	math.h	242;"	d
isfinite	math.h	245;"	d
isgraph	ctype.h	/^__exctype (isgraph);$/;"	v
isgraph	ctype.h	178;"	d
isgraph_l	ctype.h	/^__exctype_l (isgraph_l);$/;"	v
isgraph_l	ctype.h	305;"	d
isgreater	math.h	410;"	d
isgreater	math.h	428;"	d
isgreaterequal	math.h	411;"	d
isgreaterequal	math.h	436;"	d
isinf	math.h	270;"	d
isinf	math.h	273;"	d
isless	math.h	412;"	d
isless	math.h	444;"	d
islessequal	math.h	413;"	d
islessequal	math.h	452;"	d
islessgreater	math.h	414;"	d
islessgreater	math.h	460;"	d
islower	ctype.h	/^__exctype (islower);$/;"	v
islower	ctype.h	177;"	d
islower_l	ctype.h	/^__exctype_l (islower_l);$/;"	v
islower_l	ctype.h	304;"	d
isnan	math.h	258;"	d
isnan	math.h	261;"	d
isnormal	math.h	253;"	d
isprint	ctype.h	/^__exctype (isprint);$/;"	v
isprint	ctype.h	179;"	d
isprint_l	ctype.h	/^__exctype_l (isprint_l);$/;"	v
isprint_l	ctype.h	306;"	d
ispunct	ctype.h	/^__exctype (ispunct);$/;"	v
ispunct	ctype.h	180;"	d
ispunct_l	ctype.h	/^__exctype_l (ispunct_l);$/;"	v
ispunct_l	ctype.h	307;"	d
isspace	ctype.h	/^__exctype (isspace);$/;"	v
isspace	ctype.h	181;"	d
isspace_l	ctype.h	/^__exctype_l (isspace_l);$/;"	v
isspace_l	ctype.h	308;"	d
isunordered	math.h	415;"	d
isunordered	math.h	468;"	d
isupper	ctype.h	/^__exctype (isupper);$/;"	v
isupper	ctype.h	182;"	d
isupper_l	ctype.h	/^__exctype_l (isupper_l);$/;"	v
isupper_l	ctype.h	309;"	d
isxdigit	ctype.h	/^__exctype (isxdigit);$/;"	v
isxdigit	ctype.h	183;"	d
isxdigit_l	ctype.h	/^__exctype_l (isxdigit_l);$/;"	v
isxdigit_l	ctype.h	310;"	d
it_interval	time.h	/^    struct timespec it_interval;$/;"	m	struct:itimerspec	typeref:struct:itimerspec::timespec	access:public
it_value	time.h	/^    struct timespec it_value;$/;"	m	struct:itimerspec	typeref:struct:itimerspec::timespec	access:public
itimerspec	time.h	/^struct itimerspec$/;"	s
itimerspec::it_interval	time.h	/^    struct timespec it_interval;$/;"	m	struct:itimerspec	typeref:struct:itimerspec::timespec	access:public
itimerspec::it_value	time.h	/^    struct timespec it_value;$/;"	m	struct:itimerspec	typeref:struct:itimerspec::timespec	access:public
jmp_buf	setjmp.h	/^typedef struct __jmp_buf_tag jmp_buf[1];$/;"	t	typeref:struct:__jmp_buf_tag
keepcost	malloc.h	/^  int keepcost; \/* top-most, releasable (via malloc_trim) space *\/$/;"	m	struct:mallinfo	access:public
key	argp.h	/^  int key;$/;"	m	struct:argp_option	access:public
key	search.h	/^    char *key;$/;"	m	struct:entry	access:public
keysched	crypt.h	/^    char keysched[16 * 8];$/;"	m	struct:crypt_data	access:public
kind	elf.h	/^  unsigned char kind;		\/* Determines interpretation of the$/;"	m	struct:__anon123	access:public
l_addr	link.h	/^    ElfW(Addr) l_addr;		\/* Base address shared object is loaded at.  *\/$/;"	m	struct:link_map	access:public
l_checksum	elf.h	/^  Elf32_Word l_checksum;	\/* Checksum *\/$/;"	m	struct:__anon125	access:public
l_checksum	elf.h	/^  Elf64_Word l_checksum;	\/* Checksum *\/$/;"	m	struct:__anon126	access:public
l_flags	elf.h	/^  Elf32_Word l_flags;		\/* Flags *\/$/;"	m	struct:__anon125	access:public
l_flags	elf.h	/^  Elf64_Word l_flags;		\/* Flags *\/$/;"	m	struct:__anon126	access:public
l_ld	link.h	/^    ElfW(Dyn) *l_ld;		\/* Dynamic section of the shared object.  *\/$/;"	m	struct:link_map	access:public
l_name	elf.h	/^  Elf32_Word l_name;		\/* Name (string table index) *\/$/;"	m	struct:__anon125	access:public
l_name	elf.h	/^  Elf64_Word l_name;		\/* Name (string table index) *\/$/;"	m	struct:__anon126	access:public
l_name	link.h	/^    char *l_name;		\/* Absolute file name object was found in.  *\/$/;"	m	struct:link_map	access:public
l_next	link.h	/^    struct link_map *l_next, *l_prev; \/* Chain of loaded objects.  *\/$/;"	m	struct:link_map	typeref:struct:link_map::link_map	access:public
l_prev	link.h	/^    struct link_map *l_next, *l_prev; \/* Chain of loaded objects.  *\/$/;"	m	struct:link_map	typeref:struct:link_map::	access:public
l_time_stamp	elf.h	/^  Elf32_Word l_time_stamp;	\/* Timestamp *\/$/;"	m	struct:__anon125	access:public
l_time_stamp	elf.h	/^  Elf64_Word l_time_stamp;	\/* Timestamp *\/$/;"	m	struct:__anon126	access:public
l_version	elf.h	/^  Elf32_Word l_version;		\/* Interface version *\/$/;"	m	struct:__anon125	access:public
l_version	elf.h	/^  Elf64_Word l_version;		\/* Interface version *\/$/;"	m	struct:__anon126	access:public
la_activity	link.h	/^extern void la_activity (uintptr_t *__cookie, unsigned int __flag);$/;"	p	signature:(uintptr_t *__cookie, unsigned int __flag)
la_objclose	link.h	/^extern unsigned int la_objclose (uintptr_t *__cookie);$/;"	p	signature:(uintptr_t *__cookie)
la_objopen	link.h	/^extern unsigned int la_objopen (struct link_map *__map, Lmid_t __lmid,$/;"	p	signature:(struct link_map *__map, Lmid_t __lmid, uintptr_t *__cookie)
la_objsearch	link.h	/^extern char *la_objsearch (const char *__name, uintptr_t *__cookie,$/;"	p	signature:(const char *__name, uintptr_t *__cookie, unsigned int __flag)
la_preinit	link.h	/^extern void la_preinit (uintptr_t *__cookie);$/;"	p	signature:(uintptr_t *__cookie)
la_symbind32	link.h	/^extern uintptr_t la_symbind32 (Elf32_Sym *__sym, unsigned int __ndx,$/;"	p	signature:(Elf32_Sym *__sym, unsigned int __ndx, uintptr_t *__refcook, uintptr_t *__defcook, unsigned int *__flags, const char *__symname)
la_symbind64	link.h	/^extern uintptr_t la_symbind64 (Elf64_Sym *__sym, unsigned int __ndx,$/;"	p	signature:(Elf64_Sym *__sym, unsigned int __ndx, uintptr_t *__refcook, uintptr_t *__defcook, unsigned int *__flags, const char *__symname)
la_version	link.h	/^extern unsigned int la_version (unsigned int __version);$/;"	p	signature:(unsigned int __version)
lconv	locale.h	/^struct lconv$/;"	s
lconv::__int_n_cs_precedes	locale.h	/^  char __int_n_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::__int_n_sep_by_space	locale.h	/^  char __int_n_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::__int_n_sign_posn	locale.h	/^  char __int_n_sign_posn;$/;"	m	struct:lconv	access:public
lconv::__int_p_cs_precedes	locale.h	/^  char __int_p_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::__int_p_sep_by_space	locale.h	/^  char __int_p_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::__int_p_sign_posn	locale.h	/^  char __int_p_sign_posn;$/;"	m	struct:lconv	access:public
lconv::currency_symbol	locale.h	/^  char *currency_symbol;	\/* Local currency symbol.  *\/$/;"	m	struct:lconv	access:public
lconv::decimal_point	locale.h	/^  char *decimal_point;		\/* Decimal point character.  *\/$/;"	m	struct:lconv	access:public
lconv::frac_digits	locale.h	/^  char frac_digits;		\/* Local fractional digits.  *\/$/;"	m	struct:lconv	access:public
lconv::grouping	locale.h	/^  char *grouping;$/;"	m	struct:lconv	access:public
lconv::int_curr_symbol	locale.h	/^  char *int_curr_symbol;$/;"	m	struct:lconv	access:public
lconv::int_frac_digits	locale.h	/^  char int_frac_digits;		\/* Int'l fractional digits.  *\/$/;"	m	struct:lconv	access:public
lconv::int_n_cs_precedes	locale.h	/^  char int_n_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::int_n_sep_by_space	locale.h	/^  char int_n_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::int_n_sign_posn	locale.h	/^  char int_n_sign_posn;$/;"	m	struct:lconv	access:public
lconv::int_p_cs_precedes	locale.h	/^  char int_p_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::int_p_sep_by_space	locale.h	/^  char int_p_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::int_p_sign_posn	locale.h	/^  char int_p_sign_posn;$/;"	m	struct:lconv	access:public
lconv::mon_decimal_point	locale.h	/^  char *mon_decimal_point;	\/* Decimal point character.  *\/$/;"	m	struct:lconv	access:public
lconv::mon_grouping	locale.h	/^  char *mon_grouping;		\/* Like `grouping' element (above).  *\/$/;"	m	struct:lconv	access:public
lconv::mon_thousands_sep	locale.h	/^  char *mon_thousands_sep;	\/* Thousands separator.  *\/$/;"	m	struct:lconv	access:public
lconv::n_cs_precedes	locale.h	/^  char n_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::n_sep_by_space	locale.h	/^  char n_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::n_sign_posn	locale.h	/^  char n_sign_posn;$/;"	m	struct:lconv	access:public
lconv::negative_sign	locale.h	/^  char *negative_sign;		\/* Sign for negative values.  *\/$/;"	m	struct:lconv	access:public
lconv::p_cs_precedes	locale.h	/^  char p_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::p_sep_by_space	locale.h	/^  char p_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::p_sign_posn	locale.h	/^  char p_sign_posn;$/;"	m	struct:lconv	access:public
lconv::positive_sign	locale.h	/^  char *positive_sign;		\/* Sign for positive values.  *\/$/;"	m	struct:lconv	access:public
lconv::thousands_sep	locale.h	/^  char *thousands_sep;		\/* Thousands separator.  *\/$/;"	m	struct:lconv	access:public
ldexp	tgmath.h	297;"	d
ldiv_t	stdlib.h	/^  } ldiv_t;$/;"	t	typeref:struct:__anon25
le16toh	endian.h	67;"	d
le16toh	endian.h	82;"	d
le32toh	endian.h	72;"	d
le32toh	endian.h	87;"	d
le64toh	endian.h	77;"	d
le64toh	endian.h	92;"	d
leaf	search.h	/^  leaf$/;"	e	enum:__anon78
left	libtasn1.h	/^    struct node_asn_struct *left;	\/* Pointer to the next list element *\/$/;"	m	struct:node_asn_struct	typeref:struct:node_asn_struct::node_asn_struct	access:public
left	printf.h	/^  unsigned int left:1;		\/* - flag.  *\/$/;"	m	struct:printf_info	access:public
level	ftw.h	/^    int level;$/;"	m	struct:FTW	access:public
lfind	search.h	/^extern void *lfind (__const void *__key, __const void *__base,$/;"	p	signature:(__const void *__key, __const void *__base, size_t *__nmemb, size_t __size, __compar_fn_t __compar)
lgamma	tgmath.h	390;"	d
libtasn1_perror	libtasn1.h	/^    libtasn1_perror (asn1_retCode error) __attribute__ ((deprecated));$/;"	p	signature:(asn1_retCode error)
libtasn1_strerror	libtasn1.h	/^  extern ASN1_API const char *libtasn1_strerror (asn1_retCode error)$/;"	p	signature:(asn1_retCode error)
limit	obstack.h	/^  char  *limit;			\/* 1 past end of this chunk *\/$/;"	m	struct:_obstack_chunk	access:public
lineno	FlexLexer.h	/^	int lineno() const		{ return yylineno; }$/;"	f	class:FlexLexer	access:public	signature:() const
link_map	link.h	/^struct link_map$/;"	s
link_map::l_addr	link.h	/^    ElfW(Addr) l_addr;		\/* Base address shared object is loaded at.  *\/$/;"	m	struct:link_map	access:public
link_map::l_ld	link.h	/^    ElfW(Dyn) *l_ld;		\/* Dynamic section of the shared object.  *\/$/;"	m	struct:link_map	access:public
link_map::l_name	link.h	/^    char *l_name;		\/* Absolute file name object was found in.  *\/$/;"	m	struct:link_map	access:public
link_map::l_next	link.h	/^    struct link_map *l_next, *l_prev; \/* Chain of loaded objects.  *\/$/;"	m	struct:link_map	typeref:struct:link_map::link_map	access:public
link_map::l_prev	link.h	/^    struct link_map *l_next, *l_prev; \/* Chain of loaded objects.  *\/$/;"	m	struct:link_map	typeref:struct:link_map::	access:public
lio_listio	aio.h	211;"	d
lldiv_t	stdlib.h	/^  } lldiv_t;$/;"	t	typeref:struct:__anon26
llrint	tgmath.h	375;"	d
llround	tgmath.h	380;"	d
loc_aton	resolv.h	292;"	d
loc_ntoa	resolv.h	293;"	d
locale_t	xlocale.h	/^typedef __locale_t locale_t;$/;"	t
lockf	fcntl.h	/^extern int lockf (int __fd, int __cmd, __off_t __len);$/;"	p	signature:(int __fd, int __cmd, __off_t __len)
lockf	fcntl.h	199;"	d
lockf	unistd.h	1100;"	d
lockf64	fcntl.h	/^extern int lockf64 (int __fd, int __cmd, __off64_t __len);$/;"	p	signature:(int __fd, int __cmd, __off64_t __len)
log	tgmath.h	300;"	d
log10	tgmath.h	304;"	d
log10	tgmath.h	306;"	d
log1p	tgmath.h	313;"	d
log2	tgmath.h	322;"	d
logb	tgmath.h	316;"	d
lrint	tgmath.h	374;"	d
lround	tgmath.h	379;"	d
lsearch	search.h	/^extern void *lsearch (__const void *__key, void *__base,$/;"	p	signature:(__const void *__key, void *__base, size_t *__nmemb, size_t __size, __compar_fn_t __compar)
lseek	unistd.h	338;"	d
m_info	elf.h	/^  Elf32_Word m_info;		\/* Size and index.  *\/$/;"	m	struct:__anon117	access:public
m_info	elf.h	/^  Elf64_Xword m_info;		\/* Size and index.  *\/$/;"	m	struct:__anon118	access:public
m_poffset	elf.h	/^  Elf32_Word m_poffset;		\/* Symbol offset.  *\/$/;"	m	struct:__anon117	access:public
m_poffset	elf.h	/^  Elf64_Xword m_poffset;	\/* Symbol offset.  *\/$/;"	m	struct:__anon118	access:public
m_repeat	elf.h	/^  Elf32_Half m_repeat;		\/* Repeat count.  *\/$/;"	m	struct:__anon117	access:public
m_repeat	elf.h	/^  Elf64_Half m_repeat;		\/* Repeat count.  *\/$/;"	m	struct:__anon118	access:public
m_stride	elf.h	/^  Elf32_Half m_stride;		\/* Stride info.  *\/$/;"	m	struct:__anon117	access:public
m_stride	elf.h	/^  Elf64_Half m_stride;		\/* Stride info.  *\/$/;"	m	struct:__anon118	access:public
m_value	elf.h	/^  Elf32_Xword m_value;		\/* Symbol value.  *\/$/;"	m	struct:__anon117	access:public
m_value	elf.h	/^  Elf64_Xword m_value;		\/* Symbol value.  *\/$/;"	m	struct:__anon118	access:public
machine_type	a.out.h	/^enum machine_type$/;"	g
major	expat.h	/^  int major;$/;"	m	struct:__anon49	access:public
mallinfo	malloc.h	/^extern struct mallinfo mallinfo __MALLOC_P ((void));$/;"	p	signature:(void)
mallinfo	malloc.h	/^struct mallinfo {$/;"	s
mallinfo::arena	malloc.h	/^  int arena;    \/* non-mmapped space allocated from system *\/$/;"	m	struct:mallinfo	access:public
mallinfo::fordblks	malloc.h	/^  int fordblks; \/* total free space *\/$/;"	m	struct:mallinfo	access:public
mallinfo::fsmblks	malloc.h	/^  int fsmblks;  \/* space available in freed fastbin blocks *\/$/;"	m	struct:mallinfo	access:public
mallinfo::hblkhd	malloc.h	/^  int hblkhd;   \/* space in mmapped regions *\/$/;"	m	struct:mallinfo	access:public
mallinfo::hblks	malloc.h	/^  int hblks;    \/* number of mmapped regions *\/$/;"	m	struct:mallinfo	access:public
mallinfo::keepcost	malloc.h	/^  int keepcost; \/* top-most, releasable (via malloc_trim) space *\/$/;"	m	struct:mallinfo	access:public
mallinfo::ordblks	malloc.h	/^  int ordblks;  \/* number of free chunks *\/$/;"	m	struct:mallinfo	access:public
mallinfo::smblks	malloc.h	/^  int smblks;   \/* number of fastbin blocks *\/$/;"	m	struct:mallinfo	access:public
mallinfo::uordblks	malloc.h	/^  int uordblks; \/* total allocated space *\/$/;"	m	struct:mallinfo	access:public
mallinfo::usmblks	malloc.h	/^  int usmblks;  \/* maximum total allocated space *\/$/;"	m	struct:mallinfo	access:public
malloc_fcn	expat.h	/^  void *(*malloc_fcn)(size_t size);$/;"	m	struct:__anon46	access:public
malloc_get_state	malloc.h	/^extern void *malloc_get_state __MALLOC_P ((void));$/;"	p	signature:(void)
malloc_info	malloc.h	/^extern int malloc_info (int __options, FILE *__fp);$/;"	p	signature:(int __options, FILE *__fp)
malloc_set_state	malloc.h	/^extern int malloc_set_state __MALLOC_P ((void *__ptr));$/;"	p	signature:(void *__ptr)
malloc_stats	malloc.h	/^extern void malloc_stats __MALLOC_P ((void));$/;"	p	signature:(void)
malloc_trim	malloc.h	/^extern int malloc_trim __MALLOC_P ((size_t __pad));$/;"	p	signature:(size_t __pad)
malloc_usable_size	malloc.h	/^extern size_t malloc_usable_size __MALLOC_P ((void *__ptr));$/;"	p	signature:(void *__ptr)
mallopt	malloc.h	/^extern int mallopt __MALLOC_P ((int __param, int __val));$/;"	p	signature:(int __param, int __val)
mantissa	ieee754.h	/^	unsigned int mantissa:22;$/;"	m	struct:ieee754_float::__anon4	access:public
mantissa	ieee754.h	/^	unsigned int mantissa:23;$/;"	m	struct:ieee754_float::__anon3	access:public
mantissa0	ieee754.h	/^	unsigned int mantissa0:19;$/;"	m	struct:ieee754_double::__anon6	access:public
mantissa0	ieee754.h	/^	unsigned int mantissa0:20;$/;"	m	struct:ieee754_double::__anon5	access:public
mantissa0	ieee754.h	/^	unsigned int mantissa0:30;$/;"	m	struct:ieee854_long_double::__anon8	access:public
mantissa0	ieee754.h	/^	unsigned int mantissa0:32;$/;"	m	struct:ieee854_long_double::__anon7	access:public
mantissa1	ieee754.h	/^	unsigned int mantissa1:32;$/;"	m	struct:ieee754_double::__anon5	access:public
mantissa1	ieee754.h	/^	unsigned int mantissa1:32;$/;"	m	struct:ieee754_double::__anon6	access:public
mantissa1	ieee754.h	/^	unsigned int mantissa1:32;$/;"	m	struct:ieee854_long_double::__anon7	access:public
mantissa1	ieee754.h	/^	unsigned int mantissa1:32;$/;"	m	struct:ieee854_long_double::__anon8	access:public
map	expat.h	/^  int map[256];$/;"	m	struct:__anon47	access:public
mask	resolv.h	/^		u_int32_t	mask;$/;"	m	struct:__res_state::__anon41	access:public
math_errhandling	math.h	288;"	d
matherr	math.h	/^extern int matherr (struct __exception *__exc) throw ();$/;"	p	signature:(struct __exception *__exc)
matherr	math.h	/^extern int matherr (struct exception *__exc);$/;"	p	signature:(struct exception *__exc)
maybe_empty_object	obstack.h	/^  unsigned maybe_empty_object:1;\/* There is a possibility that the current$/;"	m	struct:obstack	access:public
mbrlen	wchar.h	/^__NTH (mbrlen (__const char *__restrict __s, size_t __n,$/;"	f	signature:(__const char *__restrict __s, size_t __n, mbstate_t *__restrict __ps)
mbstate_t	wchar.h	/^typedef __mbstate_t mbstate_t;$/;"	t
mcheck_check_all	mcheck.h	/^extern void mcheck_check_all (void);$/;"	p	signature:(void)
mcheck_status	mcheck.h	/^enum mcheck_status$/;"	g
micro	expat.h	/^  int micro;$/;"	m	struct:__anon49	access:public
minor	expat.h	/^  int minor;$/;"	m	struct:__anon49	access:public
mkostemp	stdlib.h	680;"	d
mkostemps	stdlib.h	702;"	d
mkstemp	stdlib.h	626;"	d
mkstemps	stdlib.h	648;"	d
mnt_dir	mntent.h	/^    char *mnt_dir;		\/* Directory mounted on.  *\/$/;"	m	struct:mntent	access:public
mnt_freq	mntent.h	/^    int mnt_freq;		\/* Dump frequency (in days).  *\/$/;"	m	struct:mntent	access:public
mnt_fsname	mntent.h	/^    char *mnt_fsname;		\/* Device or server for filesystem.  *\/$/;"	m	struct:mntent	access:public
mnt_opts	mntent.h	/^    char *mnt_opts;		\/* Comma-separated options for fs.  *\/$/;"	m	struct:mntent	access:public
mnt_passno	mntent.h	/^    int mnt_passno;		\/* Pass number for `fsck'.  *\/$/;"	m	struct:mntent	access:public
mnt_type	mntent.h	/^    char *mnt_type;		\/* Type of filesystem: ufs, nfs, etc.  *\/$/;"	m	struct:mntent	access:public
mntent	mntent.h	/^struct mntent$/;"	s
mntent::mnt_dir	mntent.h	/^    char *mnt_dir;		\/* Directory mounted on.  *\/$/;"	m	struct:mntent	access:public
mntent::mnt_freq	mntent.h	/^    int mnt_freq;		\/* Dump frequency (in days).  *\/$/;"	m	struct:mntent	access:public
mntent::mnt_fsname	mntent.h	/^    char *mnt_fsname;		\/* Device or server for filesystem.  *\/$/;"	m	struct:mntent	access:public
mntent::mnt_opts	mntent.h	/^    char *mnt_opts;		\/* Comma-separated options for fs.  *\/$/;"	m	struct:mntent	access:public
mntent::mnt_passno	mntent.h	/^    int mnt_passno;		\/* Pass number for `fsck'.  *\/$/;"	m	struct:mntent	access:public
mntent::mnt_type	mntent.h	/^    char *mnt_type;		\/* Type of filesystem: ufs, nfs, etc.  *\/$/;"	m	struct:mntent	access:public
modtime	utime.h	/^    __time_t modtime;		\/* Modification time.  *\/$/;"	m	struct:utimbuf	access:public
mon_decimal_point	locale.h	/^  char *mon_decimal_point;	\/* Decimal point character.  *\/$/;"	m	struct:lconv	access:public
mon_grouping	locale.h	/^  char *mon_grouping;		\/* Like `grouping' element (above).  *\/$/;"	m	struct:lconv	access:public
mon_thousands_sep	locale.h	/^  char *mon_thousands_sep;	\/* Thousands separator.  *\/$/;"	m	struct:lconv	access:public
msg	thread_db.h	/^  } msg;$/;"	m	struct:td_event_msg	typeref:union:td_event_msg::__anon65	access:public
msg	zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s	access:public
multiline_error	gettext-po.h	/^  void (*multiline_error) (char *prefix, char *message);$/;"	m	struct:po_error_handler	access:public
multiline_warning	gettext-po.h	/^  void (*multiline_warning) (char *prefix, char *message);$/;"	m	struct:po_error_handler	access:public
n_cs_precedes	locale.h	/^  char n_cs_precedes;$/;"	m	struct:lconv	access:public
n_desc	a.out.h	/^  short n_desc;$/;"	m	struct:nlist	access:public
n_descsz	elf.h	/^  Elf32_Word n_descsz;			\/* Length of the note's descriptor.  *\/$/;"	m	struct:__anon115	access:public
n_descsz	elf.h	/^  Elf64_Word n_descsz;			\/* Length of the note's descriptor.  *\/$/;"	m	struct:__anon116	access:public
n_name	a.out.h	/^      char *n_name;$/;"	m	union:nlist::__anon27	access:public
n_namesz	elf.h	/^  Elf32_Word n_namesz;			\/* Length of the note's name.  *\/$/;"	m	struct:__anon115	access:public
n_namesz	elf.h	/^  Elf64_Word n_namesz;			\/* Length of the note's name.  *\/$/;"	m	struct:__anon116	access:public
n_next	a.out.h	/^      struct nlist *n_next;$/;"	m	union:nlist::__anon27	typeref:struct:nlist::__anon27::nlist	access:public
n_other	a.out.h	/^  char n_other;$/;"	m	struct:nlist	access:public
n_sep_by_space	locale.h	/^  char n_sep_by_space;$/;"	m	struct:lconv	access:public
n_sign_posn	locale.h	/^  char n_sign_posn;$/;"	m	struct:lconv	access:public
n_strx	a.out.h	/^      long n_strx;$/;"	m	union:nlist::__anon27	access:public
n_type	a.out.h	/^  unsigned char n_type;$/;"	m	struct:nlist	access:public
n_type	elf.h	/^  Elf32_Word n_type;			\/* Type of the note.  *\/$/;"	m	struct:__anon115	access:public
n_type	elf.h	/^  Elf64_Word n_type;			\/* Type of the note.  *\/$/;"	m	struct:__anon116	access:public
n_un	a.out.h	/^    } n_un;$/;"	m	struct:nlist	typeref:union:nlist::__anon27	access:public
n_value	a.out.h	/^  unsigned long n_value;$/;"	m	struct:nlist	access:public
name	argp.h	/^  __const char *name;$/;"	m	struct:argp_option	access:public
name	argp.h	/^  char *name;$/;"	m	struct:argp_state	access:public
name	expat.h	/^  XML_Char *                    name;$/;"	m	struct:XML_cp	access:public
name	expat.h	/^  const XML_LChar       *name;$/;"	m	struct:__anon50	access:public
name	getopt.h	/^  const char *name;$/;"	m	struct:option	access:public
name	libtasn1.h	/^    char *name;			\/* Node name *\/$/;"	m	struct:node_asn_struct	access:public
name	libtasn1.h	/^    const char *name;		\/* Node name *\/$/;"	m	struct:static_struct_asn	access:public
name	math.h	/^    char *name;$/;"	m	struct:__exception	access:public
name	nss.h	/^    char *name;$/;"	m	struct:gaih_addrtuple	access:public
name	resolv.h	/^	char *	name;		\/* Its symbolic name, like "MX" *\/$/;"	m	struct:res_sym	access:public
name	zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s	access:public
name_max	zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s	access:public
nanosleep	time.h	/^extern int nanosleep (__const struct timespec *__requested_time,$/;"	p	signature:(__const struct timespec *__requested_time, struct timespec *__remaining)
ndots	resolv.h	/^	unsigned ndots:4;		\/* threshold for initial abs. query *\/$/;"	m	struct:__res_state	access:public
nearbyint	tgmath.h	356;"	d
negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee754_double::__anon5	access:public
negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee754_double::__anon6	access:public
negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee754_float::__anon3	access:public
negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee754_float::__anon4	access:public
negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee854_long_double::__anon7	access:public
negative	ieee754.h	/^	unsigned int negative:1;$/;"	m	struct:ieee854_long_double::__anon8	access:public
negative_sign	locale.h	/^  char *negative_sign;		\/* Sign for negative values.  *\/$/;"	m	struct:lconv	access:public
next	argp.h	/^  int next;$/;"	m	struct:argp_state	access:public
next	nss.h	/^    struct gaih_addrtuple *next;$/;"	m	struct:gaih_addrtuple	typeref:struct:gaih_addrtuple::gaih_addrtuple	access:public
next_free	obstack.h	/^  char	*next_free;		\/* where to add next char to current object *\/$/;"	m	struct:obstack	access:public
next_in	zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s	access:public
next_out	zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s	access:public
nextafter	tgmath.h	398;"	d
nexttoward	tgmath.h	399;"	d
nftw	ftw.h	167;"	d
ngettext	libintl.h	115;"	d
nidle_den	thread_db.h	/^  int nidle_den;		\/* Average number of idling processes,$/;"	m	struct:td_ta_stats	access:public
nidle_num	thread_db.h	/^  int nidle_num;		\/* Average number of idling processes,$/;"	m	struct:td_ta_stats	access:public
nl_catd	nl_types.h	/^typedef void *nl_catd;$/;"	t
nl_item	nl_types.h	/^typedef int nl_item;$/;"	t
nl_langinfo_l	langinfo.h	/^extern char *nl_langinfo_l (nl_item __item, __locale_t __l);$/;"	p	signature:(nl_item __item, __locale_t __l)
nlist	a.out.h	/^struct nlist$/;"	s
nlist::__anon27::n_name	a.out.h	/^      char *n_name;$/;"	m	union:nlist::__anon27	access:public
nlist::__anon27::n_next	a.out.h	/^      struct nlist *n_next;$/;"	m	union:nlist::__anon27	typeref:struct:nlist::__anon27::nlist	access:public
nlist::__anon27::n_strx	a.out.h	/^      long n_strx;$/;"	m	union:nlist::__anon27	access:public
nlist::n_desc	a.out.h	/^  short n_desc;$/;"	m	struct:nlist	access:public
nlist::n_other	a.out.h	/^  char n_other;$/;"	m	struct:nlist	access:public
nlist::n_type	a.out.h	/^  unsigned char n_type;$/;"	m	struct:nlist	access:public
nlist::n_un	a.out.h	/^    } n_un;$/;"	m	struct:nlist	typeref:union:nlist::__anon27	access:public
nlist::n_value	a.out.h	/^  unsigned long n_value;$/;"	m	struct:nlist	access:public
nlwps_den	thread_db.h	/^  int nlwps_den;		\/* Average number of processes in use,$/;"	m	struct:td_ta_stats	access:public
nlwps_num	thread_db.h	/^  int nlwps_num;		\/* Average number of processes in use,$/;"	m	struct:td_ta_stats	access:public
no_argument	getopt.h	118;"	d
node_asn	libtasn1.h	/^  typedef struct node_asn_struct node_asn;$/;"	t	typeref:struct:node_asn_struct
node_asn_struct	libtasn1.h	/^  struct node_asn_struct$/;"	s
node_asn_struct::down	libtasn1.h	/^    struct node_asn_struct *down;	\/* Pointer to the son node *\/$/;"	m	struct:node_asn_struct	typeref:struct:node_asn_struct::node_asn_struct	access:public
node_asn_struct::left	libtasn1.h	/^    struct node_asn_struct *left;	\/* Pointer to the next list element *\/$/;"	m	struct:node_asn_struct	typeref:struct:node_asn_struct::node_asn_struct	access:public
node_asn_struct::name	libtasn1.h	/^    char *name;			\/* Node name *\/$/;"	m	struct:node_asn_struct	access:public
node_asn_struct::right	libtasn1.h	/^    struct node_asn_struct *right;	\/* Pointer to the brother node *\/$/;"	m	struct:node_asn_struct	typeref:struct:node_asn_struct::node_asn_struct	access:public
node_asn_struct::type	libtasn1.h	/^    unsigned int type;		\/* Node type *\/$/;"	m	struct:node_asn_struct	access:public
node_asn_struct::value	libtasn1.h	/^    unsigned char *value;	\/* Node value *\/$/;"	m	struct:node_asn_struct	access:public
node_asn_struct::value_len	libtasn1.h	/^    int value_len;$/;"	m	struct:node_asn_struct	access:public
nrunnable_den	thread_db.h	/^  int nrunnable_den;		\/* Average runnable threads, denominator.  *\/$/;"	m	struct:td_ta_stats	access:public
nrunnable_num	thread_db.h	/^  int nrunnable_num;		\/* Average runnable threads, numerator.  *\/$/;"	m	struct:td_ta_stats	access:public
nsaddr	resolv.h	111;"	d
nsaddr_list	resolv.h	/^		nsaddr_list[MAXNS];	\/* address of name server *\/$/;"	m	struct:__res_state	typeref:struct:__res_state::sockaddr_in	access:public
nsaddrs	resolv.h	/^			struct sockaddr_in6	*nsaddrs[MAXNS];$/;"	m	struct:__res_state::__anon42::__anon43	typeref:struct:__res_state::__anon42::__anon43::sockaddr_in6	access:public
nscount	resolv.h	/^			u_int16_t		nscount;$/;"	m	struct:__res_state::__anon42::__anon43	access:public
nscount	resolv.h	/^	int	nscount;		\/* number of name servers *\/$/;"	m	struct:__res_state	access:public
nscount6	resolv.h	/^			u_int16_t		nscount6;$/;"	m	struct:__res_state::__anon42::__anon43	access:public
nsinit	resolv.h	/^			u_int16_t		nsinit;$/;"	m	struct:__res_state::__anon42::__anon43	access:public
nsmap	resolv.h	/^			u_int16_t		nsmap[MAXNS];$/;"	m	struct:__res_state::__anon42::__anon43	access:public
nsort	resolv.h	/^	unsigned nsort:4;		\/* number of elements in sort_list[] *\/$/;"	m	struct:__res_state	access:public
nss_status	nss.h	/^enum nss_status$/;"	g
nssocks	resolv.h	/^			int			nssocks[MAXNS];$/;"	m	struct:__res_state::__anon42::__anon43	access:public
nthreads	thread_db.h	/^  int nthreads;       		\/* Total number of threads in use.  *\/$/;"	m	struct:td_ta_stats	access:public
num_regs	regex.h	/^  unsigned num_regs;$/;"	m	struct:re_registers	access:public
number	resolv.h	/^	int	number;		\/* Identifying number, like T_MX *\/$/;"	m	struct:res_sym	access:public
numchildren	expat.h	/^  unsigned int                  numchildren;$/;"	m	struct:XML_cp	access:public
object_base	obstack.h	/^  char	*object_base;		\/* address of object we are building *\/$/;"	m	struct:obstack	access:public
obstack	obstack.h	/^struct obstack		\/* control current object in current chunk *\/$/;"	s
obstack::__anon81::tempint	obstack.h	/^    PTR_INT_TYPE tempint;$/;"	m	union:obstack::__anon81	access:public
obstack::__anon81::tempptr	obstack.h	/^    void *tempptr;$/;"	m	union:obstack::__anon81	access:public
obstack::alignment_mask	obstack.h	/^  int   alignment_mask;		\/* Mask of alignment for each object. *\/$/;"	m	struct:obstack	access:public
obstack::alloc_failed	obstack.h	/^  unsigned alloc_failed:1;	\/* No longer used, as we now call the failed$/;"	m	struct:obstack	access:public
obstack::chunk	obstack.h	/^  struct _obstack_chunk *chunk;	\/* address of current struct obstack_chunk *\/$/;"	m	struct:obstack	typeref:struct:obstack::_obstack_chunk	access:public
obstack::chunk_limit	obstack.h	/^  char	*chunk_limit;		\/* address of char after current chunk *\/$/;"	m	struct:obstack	access:public
obstack::chunk_size	obstack.h	/^  long	chunk_size;		\/* preferred size to allocate chunks in *\/$/;"	m	struct:obstack	access:public
obstack::chunkfun	obstack.h	/^  struct _obstack_chunk *(*chunkfun) (void *, long);$/;"	m	struct:obstack	typeref:struct:obstack::chunkfun	access:public
obstack::extra_arg	obstack.h	/^  void *extra_arg;		\/* first arg for chunk alloc\/dealloc funcs *\/$/;"	m	struct:obstack	access:public
obstack::freefun	obstack.h	/^  void (*freefun) (void *, struct _obstack_chunk *);$/;"	m	struct:obstack	access:public
obstack::maybe_empty_object	obstack.h	/^  unsigned maybe_empty_object:1;\/* There is a possibility that the current$/;"	m	struct:obstack	access:public
obstack::next_free	obstack.h	/^  char	*next_free;		\/* where to add next char to current object *\/$/;"	m	struct:obstack	access:public
obstack::object_base	obstack.h	/^  char	*object_base;		\/* address of object we are building *\/$/;"	m	struct:obstack	access:public
obstack::temp	obstack.h	/^  } temp;			\/* Temporary for some macros.  *\/$/;"	m	struct:obstack	typeref:union:obstack::__anon81	access:public
obstack::use_extra_arg	obstack.h	/^  unsigned use_extra_arg:1;	\/* chunk alloc\/dealloc funcs take extra arg *\/$/;"	m	struct:obstack	access:public
obstack_1grow	obstack.h	313;"	d
obstack_1grow	obstack.h	445;"	d
obstack_1grow_fast	obstack.h	247;"	d
obstack_alignment_mask	obstack.h	218;"	d
obstack_alloc	obstack.h	362;"	d
obstack_alloc	obstack.h	472;"	d
obstack_base	obstack.h	206;"	d
obstack_begin	obstack.h	226;"	d
obstack_blank	obstack.h	353;"	d
obstack_blank	obstack.h	466;"	d
obstack_blank_fast	obstack.h	249;"	d
obstack_chunk_size	obstack.h	210;"	d
obstack_chunkfun	obstack.h	241;"	d
obstack_copy	obstack.h	368;"	d
obstack_copy	obstack.h	475;"	d
obstack_copy0	obstack.h	374;"	d
obstack_copy0	obstack.h	478;"	d
obstack_empty_p	obstack.h	284;"	d
obstack_empty_p	obstack.h	413;"	d
obstack_finish	obstack.h	382;"	d
obstack_finish	obstack.h	481;"	d
obstack_free	obstack.h	/^void obstack_free (struct obstack *__obstack, void *__block);$/;"	p	signature:(struct obstack *__obstack, void *__block)
obstack_free	obstack.h	397;"	d
obstack_free	obstack.h	495;"	d
obstack_freefun	obstack.h	244;"	d
obstack_grow	obstack.h	292;"	d
obstack_grow	obstack.h	430;"	d
obstack_grow0	obstack.h	302;"	d
obstack_grow0	obstack.h	437;"	d
obstack_init	obstack.h	221;"	d
obstack_int_grow	obstack.h	332;"	d
obstack_int_grow	obstack.h	455;"	d
obstack_int_grow_fast	obstack.h	346;"	d
obstack_int_grow_fast	obstack.h	463;"	d
obstack_make_room	obstack.h	276;"	d
obstack_make_room	obstack.h	425;"	d
obstack_memory_used	obstack.h	251;"	d
obstack_next_free	obstack.h	214;"	d
obstack_object_size	obstack.h	266;"	d
obstack_object_size	obstack.h	407;"	d
obstack_ptr_grow	obstack.h	325;"	d
obstack_ptr_grow	obstack.h	450;"	d
obstack_ptr_grow_fast	obstack.h	339;"	d
obstack_ptr_grow_fast	obstack.h	460;"	d
obstack_room	obstack.h	271;"	d
obstack_room	obstack.h	410;"	d
obstack_specify_allocation	obstack.h	231;"	d
obstack_specify_allocation_with_arg	obstack.h	236;"	d
off64_t	stdio.h	/^typedef __off64_t off64_t;$/;"	t
off64_t	unistd.h	/^typedef __off64_t off64_t;$/;"	t
off_t	stdio.h	/^typedef __off64_t off_t;$/;"	t
off_t	stdio.h	/^typedef __off_t off_t;$/;"	t
off_t	unistd.h	/^typedef __off64_t off_t;$/;"	t
off_t	unistd.h	/^typedef __off_t off_t;$/;"	t
one	ieee754.h	/^	unsigned int one:1;$/;"	m	struct:ieee854_long_double::__anon8	access:public
opaque	zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s	access:public
open	fcntl.h	125;"	d
openat	fcntl.h	150;"	d
operator <<	autosprintf.h	/^    friend inline std::ostream& operator<< (std::ostream& stream, const autosprintf& tmp)$/;"	f	class:gnu::autosprintf	access:friend	signature:(std::ostream& stream, const autosprintf& tmp)
operator char *	autosprintf.h	/^    operator char * () const;$/;"	p	class:gnu::autosprintf	access:public	signature:() const
operator std::string	autosprintf.h	/^    operator std::string () const;$/;"	p	class:gnu::autosprintf	access:public	signature:() const
option	getopt.h	/^struct option$/;"	s
option::flag	getopt.h	/^  int *flag;$/;"	m	struct:option	access:public
option::has_arg	getopt.h	/^  int has_arg;$/;"	m	struct:option	access:public
option::name	getopt.h	/^  const char *name;$/;"	m	struct:option	access:public
option::val	getopt.h	/^  int val;$/;"	m	struct:option	access:public
optional_argument	getopt.h	120;"	d
options	argp.h	/^  __const struct argp_option *options;$/;"	m	struct:argp	typeref:struct:argp::argp_option	access:public
options	resolv.h	/^	u_long	options;		\/* option flags - see below. *\/$/;"	m	struct:__res_state	access:public
ordblks	malloc.h	/^  int ordblks;  \/* number of free chunks *\/$/;"	m	struct:mallinfo	access:public
os	zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s	access:public
out_func	zconf.h	104;"	d
out_func	zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t
out_stream	argp.h	/^  FILE *out_stream;		\/* For information; initialized to stdout. *\/$/;"	m	struct:argp_state	access:public
p_aliases	netdb.h	/^  char **p_aliases;		\/* Alias list.  *\/$/;"	m	struct:protoent	access:public
p_align	elf.h	/^  Elf32_Word	p_align;		\/* Segment alignment *\/$/;"	m	struct:__anon97	access:public
p_align	elf.h	/^  Elf64_Xword	p_align;		\/* Segment alignment *\/$/;"	m	struct:__anon98	access:public
p_cdname	resolv.h	294;"	d
p_cdnname	resolv.h	295;"	d
p_class	resolv.h	296;"	d
p_cs_precedes	locale.h	/^  char p_cs_precedes;$/;"	m	struct:lconv	access:public
p_filesz	elf.h	/^  Elf32_Word	p_filesz;		\/* Segment size in file *\/$/;"	m	struct:__anon97	access:public
p_filesz	elf.h	/^  Elf64_Xword	p_filesz;		\/* Segment size in file *\/$/;"	m	struct:__anon98	access:public
p_flags	elf.h	/^  Elf32_Word	p_flags;		\/* Segment flags *\/$/;"	m	struct:__anon97	access:public
p_flags	elf.h	/^  Elf64_Word	p_flags;		\/* Segment flags *\/$/;"	m	struct:__anon98	access:public
p_fqname	resolv.h	297;"	d
p_fqnname	resolv.h	298;"	d
p_memsz	elf.h	/^  Elf32_Word	p_memsz;		\/* Segment size in memory *\/$/;"	m	struct:__anon97	access:public
p_memsz	elf.h	/^  Elf64_Xword	p_memsz;		\/* Segment size in memory *\/$/;"	m	struct:__anon98	access:public
p_name	netdb.h	/^  char *p_name;			\/* Official protocol name.  *\/$/;"	m	struct:protoent	access:public
p_offset	elf.h	/^  Elf32_Off	p_offset;		\/* Segment file offset *\/$/;"	m	struct:__anon97	access:public
p_offset	elf.h	/^  Elf64_Off	p_offset;		\/* Segment file offset *\/$/;"	m	struct:__anon98	access:public
p_option	resolv.h	299;"	d
p_paddr	elf.h	/^  Elf32_Addr	p_paddr;		\/* Segment physical address *\/$/;"	m	struct:__anon97	access:public
p_paddr	elf.h	/^  Elf64_Addr	p_paddr;		\/* Segment physical address *\/$/;"	m	struct:__anon98	access:public
p_proto	netdb.h	/^  int p_proto;			\/* Protocol number.  *\/$/;"	m	struct:protoent	access:public
p_query	resolv.h	257;"	d
p_rcode	resolv.h	304;"	d
p_secstodate	resolv.h	300;"	d
p_section	resolv.h	301;"	d
p_sep_by_space	locale.h	/^  char p_sep_by_space;$/;"	m	struct:lconv	access:public
p_sign_posn	locale.h	/^  char p_sign_posn;$/;"	m	struct:lconv	access:public
p_time	resolv.h	302;"	d
p_type	elf.h	/^  Elf32_Word	p_type;			\/* Segment type *\/$/;"	m	struct:__anon97	access:public
p_type	elf.h	/^  Elf64_Word	p_type;			\/* Segment type *\/$/;"	m	struct:__anon98	access:public
p_type	resolv.h	303;"	d
p_vaddr	elf.h	/^  Elf32_Addr	p_vaddr;		\/* Segment virtual address *\/$/;"	m	struct:__anon97	access:public
p_vaddr	elf.h	/^  Elf64_Addr	p_vaddr;		\/* Segment virtual address *\/$/;"	m	struct:__anon98	access:public
pad	printf.h	/^  wchar_t pad;			\/* Padding character.  *\/$/;"	m	struct:printf_info	access:public
pad	resolv.h	/^		char	pad[52];	\/* On an i386 this means 512b total. *\/$/;"	m	union:__res_state::__anon42	access:public
parser	argp.h	/^  argp_parser_t parser;$/;"	m	struct:argp	access:public
parser	expat.h	/^XMLPARSEAPI(XML_Index) XML_GetCurrentByteIndex(XML_Parser parser);$/;"	v
parser	expat.h	/^XMLPARSEAPI(XML_Size) XML_GetCurrentColumnNumber(XML_Parser parser);$/;"	v
parser	expat.h	/^XMLPARSEAPI(XML_Size) XML_GetCurrentLineNumber(XML_Parser parser);$/;"	v
parser	expat.h	/^XML_DefaultCurrent(XML_Parser parser);$/;"	v
parser	expat.h	/^XML_GetBase(XML_Parser parser);$/;"	v
parser	expat.h	/^XML_GetCurrentByteCount(XML_Parser parser);$/;"	v
parser	expat.h	/^XML_GetErrorCode(XML_Parser parser);$/;"	v
parser	expat.h	/^XML_GetIdAttributeIndex(XML_Parser parser);$/;"	v
parser	expat.h	/^XML_GetSpecifiedAttributeCount(XML_Parser parser);$/;"	v
parser	expat.h	/^XML_ParserFree(XML_Parser parser);$/;"	v
parser	expat.h	/^XML_ResumeParser(XML_Parser parser);$/;"	v
parser	expat.h	/^XML_UseParserAsHandlerArg(XML_Parser parser);$/;"	v
parsing	expat.h	/^  enum XML_Parsing parsing;$/;"	m	struct:__anon48	typeref:enum:__anon48::XML_Parsing	access:public
passwd	pwd.h	/^struct passwd$/;"	s
passwd::pw_dir	pwd.h	/^  char *pw_dir;			\/* Home directory.  *\/$/;"	m	struct:passwd	access:public
passwd::pw_gecos	pwd.h	/^  char *pw_gecos;		\/* Real name.  *\/$/;"	m	struct:passwd	access:public
passwd::pw_gid	pwd.h	/^  __gid_t pw_gid;		\/* Group ID.  *\/$/;"	m	struct:passwd	access:public
passwd::pw_name	pwd.h	/^  char *pw_name;		\/* Username.  *\/$/;"	m	struct:passwd	access:public
passwd::pw_passwd	pwd.h	/^  char *pw_passwd;		\/* Password.  *\/$/;"	m	struct:passwd	access:public
passwd::pw_shell	pwd.h	/^  char *pw_shell;		\/* Shell program.  *\/$/;"	m	struct:passwd	access:public
passwd::pw_uid	pwd.h	/^  __uid_t pw_uid;		\/* User ID.  *\/$/;"	m	struct:passwd	access:public
pause	unistd.h	/^extern int pause (void);$/;"	p	signature:(void)
pclose	stdio.h	/^extern int pclose (FILE *__stream);$/;"	p	signature:(FILE *__stream)
perror	stdio.h	/^extern void perror (__const char *__s);$/;"	p	signature:(__const char *__s)
pfcode	resolv.h	/^	u_long	pfcode;			\/* RES_PRF_ flags - see below. *\/$/;"	m	struct:__res_state	access:public
pid_t	sched.h	/^typedef __pid_t pid_t;$/;"	t
pid_t	signal.h	/^typedef __pid_t pid_t;$/;"	t
pid_t	termios.h	/^typedef __pid_t pid_t;$/;"	t
pid_t	time.h	/^typedef __pid_t pid_t;$/;"	t
pid_t	unistd.h	/^typedef __pid_t pid_t;$/;"	t
pid_t	utmpx.h	/^typedef __pid_t pid_t;$/;"	t
po_error_handler	gettext-po.h	/^struct po_error_handler$/;"	s
po_error_handler::error	gettext-po.h	/^  void (*error) (int status, int errnum,$/;"	m	struct:po_error_handler	access:public
po_error_handler::error_at_line	gettext-po.h	/^  void (*error_at_line) (int status, int errnum,$/;"	m	struct:po_error_handler	access:public
po_error_handler::multiline_error	gettext-po.h	/^  void (*multiline_error) (char *prefix, char *message);$/;"	m	struct:po_error_handler	access:public
po_error_handler::multiline_warning	gettext-po.h	/^  void (*multiline_warning) (char *prefix, char *message);$/;"	m	struct:po_error_handler	access:public
po_error_handler_t	gettext-po.h	/^typedef const struct po_error_handler *po_error_handler_t;$/;"	t	typeref:struct:po_error_handler
po_file_check_all	gettext-po.h	/^extern void po_file_check_all (po_file_t file, po_xerror_handler_t handler);$/;"	p	signature:(po_file_t file, po_xerror_handler_t handler)
po_file_create	gettext-po.h	/^extern po_file_t po_file_create (void);$/;"	p	signature:(void)
po_file_domain_header	gettext-po.h	/^extern const char * po_file_domain_header (po_file_t file, const char *domain);$/;"	p	signature:(po_file_t file, const char *domain)
po_file_domains	gettext-po.h	/^extern const char * const * po_file_domains (po_file_t file);$/;"	p	signature:(po_file_t file)
po_file_free	gettext-po.h	/^extern void po_file_free (po_file_t file);$/;"	p	signature:(po_file_t file)
po_file_read	gettext-po.h	/^extern po_file_t po_file_read (const char *filename,$/;"	p	signature:(const char *filename, po_xerror_handler_t handler)
po_file_read	gettext-po.h	135;"	d
po_file_t	gettext-po.h	/^typedef struct po_file *po_file_t;$/;"	t	typeref:struct:po_file
po_file_write	gettext-po.h	/^extern po_file_t po_file_write (po_file_t file, const char *filename,$/;"	p	signature:(po_file_t file, const char *filename, po_xerror_handler_t handler)
po_file_write	gettext-po.h	141;"	d
po_filepos_file	gettext-po.h	/^extern const char * po_filepos_file (po_filepos_t filepos);$/;"	p	signature:(po_filepos_t filepos)
po_filepos_start_line	gettext-po.h	/^extern size_t po_filepos_start_line (po_filepos_t filepos);$/;"	p	signature:(po_filepos_t filepos)
po_filepos_t	gettext-po.h	/^typedef struct po_filepos *po_filepos_t;$/;"	t	typeref:struct:po_filepos
po_format_list	gettext-po.h	/^extern const char * const * po_format_list (void);$/;"	p	signature:(void)
po_format_pretty_name	gettext-po.h	/^extern const char * po_format_pretty_name (const char *format_type);$/;"	p	signature:(const char *format_type)
po_header_field	gettext-po.h	/^extern char * po_header_field (const char *header, const char *field);$/;"	p	signature:(const char *header, const char *field)
po_header_set_field	gettext-po.h	/^extern char * po_header_set_field (const char *header, const char *field, const char *value);$/;"	p	signature:(const char *header, const char *field, const char *value)
po_message_add_filepos	gettext-po.h	/^extern void po_message_add_filepos (po_message_t message, const char *file, size_t start_line);$/;"	p	signature:(po_message_t message, const char *file, size_t start_line)
po_message_check_all	gettext-po.h	/^extern void po_message_check_all (po_message_t message, po_message_iterator_t iterator, po_xerror_handler_t handler);$/;"	p	signature:(po_message_t message, po_message_iterator_t iterator, po_xerror_handler_t handler)
po_message_check_format	gettext-po.h	/^extern void po_message_check_format (po_message_t message, po_xerror_handler_t handler);$/;"	p	signature:(po_message_t message, po_xerror_handler_t handler)
po_message_check_format	gettext-po.h	349;"	d
po_message_comments	gettext-po.h	/^extern const char * po_message_comments (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_create	gettext-po.h	/^extern po_message_t po_message_create (void);$/;"	p	signature:(void)
po_message_extracted_comments	gettext-po.h	/^extern const char * po_message_extracted_comments (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_filepos	gettext-po.h	/^extern po_filepos_t po_message_filepos (po_message_t message, int i);$/;"	p	signature:(po_message_t message, int i)
po_message_insert	gettext-po.h	/^extern void po_message_insert (po_message_iterator_t iterator, po_message_t message);$/;"	p	signature:(po_message_iterator_t iterator, po_message_t message)
po_message_is_format	gettext-po.h	/^extern int po_message_is_format (po_message_t message, const char *format_type);$/;"	p	signature:(po_message_t message, const char *format_type)
po_message_is_fuzzy	gettext-po.h	/^extern int po_message_is_fuzzy (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_is_obsolete	gettext-po.h	/^extern int po_message_is_obsolete (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_is_range	gettext-po.h	/^extern int po_message_is_range (po_message_t message, int *minp, int *maxp);$/;"	p	signature:(po_message_t message, int *minp, int *maxp)
po_message_iterator	gettext-po.h	/^extern po_message_iterator_t po_message_iterator (po_file_t file, const char *domain);$/;"	p	signature:(po_file_t file, const char *domain)
po_message_iterator_free	gettext-po.h	/^extern void po_message_iterator_free (po_message_iterator_t iterator);$/;"	p	signature:(po_message_iterator_t iterator)
po_message_iterator_t	gettext-po.h	/^typedef struct po_message_iterator *po_message_iterator_t;$/;"	t	typeref:struct:po_message_iterator
po_message_msgctxt	gettext-po.h	/^extern const char * po_message_msgctxt (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_msgid	gettext-po.h	/^extern const char * po_message_msgid (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_msgid_plural	gettext-po.h	/^extern const char * po_message_msgid_plural (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_msgstr	gettext-po.h	/^extern const char * po_message_msgstr (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_msgstr_plural	gettext-po.h	/^extern const char * po_message_msgstr_plural (po_message_t message, int index);$/;"	p	signature:(po_message_t message, int index)
po_message_prev_msgctxt	gettext-po.h	/^extern const char * po_message_prev_msgctxt (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_prev_msgid	gettext-po.h	/^extern const char * po_message_prev_msgid (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_prev_msgid_plural	gettext-po.h	/^extern const char * po_message_prev_msgid_plural (po_message_t message);$/;"	p	signature:(po_message_t message)
po_message_remove_filepos	gettext-po.h	/^extern void po_message_remove_filepos (po_message_t message, int i);$/;"	p	signature:(po_message_t message, int i)
po_message_set_comments	gettext-po.h	/^extern void po_message_set_comments (po_message_t message, const char *comments);$/;"	p	signature:(po_message_t message, const char *comments)
po_message_set_extracted_comments	gettext-po.h	/^extern void po_message_set_extracted_comments (po_message_t message, const char *comments);$/;"	p	signature:(po_message_t message, const char *comments)
po_message_set_format	gettext-po.h	/^extern void po_message_set_format (po_message_t message, const char *format_type, \/*bool*\/int value);$/;"	p	signature:(po_message_t message, const char *format_type, int value)
po_message_set_fuzzy	gettext-po.h	/^extern void po_message_set_fuzzy (po_message_t message, int fuzzy);$/;"	p	signature:(po_message_t message, int fuzzy)
po_message_set_msgctxt	gettext-po.h	/^extern void po_message_set_msgctxt (po_message_t message, const char *msgctxt);$/;"	p	signature:(po_message_t message, const char *msgctxt)
po_message_set_msgid	gettext-po.h	/^extern void po_message_set_msgid (po_message_t message, const char *msgid);$/;"	p	signature:(po_message_t message, const char *msgid)
po_message_set_msgid_plural	gettext-po.h	/^extern void po_message_set_msgid_plural (po_message_t message, const char *msgid_plural);$/;"	p	signature:(po_message_t message, const char *msgid_plural)
po_message_set_msgstr	gettext-po.h	/^extern void po_message_set_msgstr (po_message_t message, const char *msgstr);$/;"	p	signature:(po_message_t message, const char *msgstr)
po_message_set_msgstr_plural	gettext-po.h	/^extern void po_message_set_msgstr_plural (po_message_t message, int index, const char *msgstr);$/;"	p	signature:(po_message_t message, int index, const char *msgstr)
po_message_set_obsolete	gettext-po.h	/^extern void po_message_set_obsolete (po_message_t message, int obsolete);$/;"	p	signature:(po_message_t message, int obsolete)
po_message_set_prev_msgctxt	gettext-po.h	/^extern void po_message_set_prev_msgctxt (po_message_t message, const char *prev_msgctxt);$/;"	p	signature:(po_message_t message, const char *prev_msgctxt)
po_message_set_prev_msgid	gettext-po.h	/^extern void po_message_set_prev_msgid (po_message_t message, const char *prev_msgid);$/;"	p	signature:(po_message_t message, const char *prev_msgid)
po_message_set_prev_msgid_plural	gettext-po.h	/^extern void po_message_set_prev_msgid_plural (po_message_t message, const char *prev_msgid_plural);$/;"	p	signature:(po_message_t message, const char *prev_msgid_plural)
po_message_set_range	gettext-po.h	/^extern void po_message_set_range (po_message_t message, int min, int max);$/;"	p	signature:(po_message_t message, int min, int max)
po_message_t	gettext-po.h	/^typedef struct po_message *po_message_t;$/;"	t	typeref:struct:po_message
po_next_message	gettext-po.h	/^extern po_message_t po_next_message (po_message_iterator_t iterator);$/;"	p	signature:(po_message_iterator_t iterator)
po_xerror_handler	gettext-po.h	/^struct po_xerror_handler$/;"	s
po_xerror_handler::xerror	gettext-po.h	/^  void (*xerror) (int severity,$/;"	m	struct:po_xerror_handler	access:public
po_xerror_handler::xerror2	gettext-po.h	/^  void (*xerror2) (int severity,$/;"	m	struct:po_xerror_handler	access:public
po_xerror_handler_t	gettext-po.h	/^typedef const struct po_xerror_handler *po_xerror_handler_t;$/;"	t	typeref:struct:po_xerror_handler
positive_sign	locale.h	/^  char *positive_sign;		\/* Sign for positive values.  *\/$/;"	m	struct:lconv	access:public
posix_fadvise	fcntl.h	219;"	d
posix_fallocate	fcntl.h	/^extern int posix_fallocate (int __fd, __off_t __offset, __off_t __len);$/;"	p	signature:(int __fd, __off_t __offset, __off_t __len)
posix_fallocate	fcntl.h	240;"	d
posix_fallocate64	fcntl.h	/^extern int posix_fallocate64 (int __fd, __off64_t __offset, __off64_t __len);$/;"	p	signature:(int __fd, __off64_t __offset, __off64_t __len)
posix_spawn	spawn.h	/^extern int posix_spawn (pid_t *__restrict __pid,$/;"	p	signature:(pid_t *__restrict __pid, __const char *__restrict __path, __const posix_spawn_file_actions_t *__restrict __file_actions, __const posix_spawnattr_t *__restrict __attrp, char *__const __argv[__restrict_arr], char *__const __envp[__restrict_arr])
posix_spawn_file_actions_t	spawn.h	/^} posix_spawn_file_actions_t;$/;"	t	typeref:struct:__anon133
posix_spawnattr_t	spawn.h	/^} posix_spawnattr_t;$/;"	t	typeref:struct:__anon132
posix_spawnp	spawn.h	/^extern int posix_spawnp (pid_t *__pid, __const char *__file,$/;"	p	signature:(pid_t *__pid, __const char *__file, __const posix_spawn_file_actions_t *__file_actions, __const posix_spawnattr_t *__attrp, char *__const __argv[], char *__const __envp[])
postorder	search.h	/^  postorder,$/;"	e	enum:__anon78
pow	tgmath.h	328;"	d
pread	unistd.h	392;"	d
prec	printf.h	/^  int prec;			\/* Precision.  *\/$/;"	m	struct:printf_info	access:public
preorder	search.h	/^  preorder,$/;"	e	enum:__anon78
prev	obstack.h	/^  struct _obstack_chunk *prev;	\/* address of prior chunk or NULL *\/$/;"	m	struct:_obstack_chunk	typeref:struct:_obstack_chunk::_obstack_chunk	access:public
printf	stdio.h	/^extern int printf (__const char *__restrict __format, ...);$/;"	p	signature:(__const char *__restrict __format, ...)
printf_arginfo_function	printf.h	/^typedef int printf_arginfo_function (__const struct printf_info *__info,$/;"	t
printf_arginfo_size_function	printf.h	/^typedef int printf_arginfo_size_function (__const struct printf_info *__info,$/;"	t
printf_function	printf.h	/^typedef int printf_function (FILE *__stream,$/;"	t
printf_info	printf.h	/^struct printf_info$/;"	s
printf_info::__pad	printf.h	/^  unsigned int __pad:4;		\/* Unused so far.  *\/$/;"	m	struct:printf_info	access:public
printf_info::alt	printf.h	/^  unsigned int alt:1;		\/* # flag.  *\/$/;"	m	struct:printf_info	access:public
printf_info::extra	printf.h	/^  unsigned int extra:1;		\/* For special use.  *\/$/;"	m	struct:printf_info	access:public
printf_info::group	printf.h	/^  unsigned int group:1;		\/* ' flag.  *\/$/;"	m	struct:printf_info	access:public
printf_info::i18n	printf.h	/^  unsigned int i18n:1;		\/* I flag.  *\/$/;"	m	struct:printf_info	access:public
printf_info::is_char	printf.h	/^  unsigned int is_char:1;	\/* hh flag.  *\/$/;"	m	struct:printf_info	access:public
printf_info::is_long	printf.h	/^  unsigned int is_long:1;	\/* l flag.  *\/$/;"	m	struct:printf_info	access:public
printf_info::is_long_double	printf.h	/^  unsigned int is_long_double:1;\/* L flag.  *\/$/;"	m	struct:printf_info	access:public
printf_info::is_short	printf.h	/^  unsigned int is_short:1;	\/* h flag.  *\/$/;"	m	struct:printf_info	access:public
printf_info::left	printf.h	/^  unsigned int left:1;		\/* - flag.  *\/$/;"	m	struct:printf_info	access:public
printf_info::pad	printf.h	/^  wchar_t pad;			\/* Padding character.  *\/$/;"	m	struct:printf_info	access:public
printf_info::prec	printf.h	/^  int prec;			\/* Precision.  *\/$/;"	m	struct:printf_info	access:public
printf_info::showsign	printf.h	/^  unsigned int showsign:1;	\/* + flag.  *\/$/;"	m	struct:printf_info	access:public
printf_info::space	printf.h	/^  unsigned int space:1;		\/* Space flag.  *\/$/;"	m	struct:printf_info	access:public
printf_info::spec	printf.h	/^  wchar_t spec;			\/* Format letter.  *\/$/;"	m	struct:printf_info	access:public
printf_info::user	printf.h	/^  unsigned short int user;	\/* Bits for user-installed modifiers.  *\/$/;"	m	struct:printf_info	access:public
printf_info::wide	printf.h	/^  unsigned int wide:1;		\/* Nonzero for wide character streams.  *\/$/;"	m	struct:printf_info	access:public
printf_info::width	printf.h	/^  int width;			\/* Width.  *\/$/;"	m	struct:printf_info	access:public
printf_va_arg_function	printf.h	/^typedef void printf_va_arg_function (void *__mem, va_list *__ap);$/;"	t
protoent	netdb.h	/^struct protoent$/;"	s
protoent::p_aliases	netdb.h	/^  char **p_aliases;		\/* Alias list.  *\/$/;"	m	struct:protoent	access:public
protoent::p_name	netdb.h	/^  char *p_name;			\/* Official protocol name.  *\/$/;"	m	struct:protoent	access:public
protoent::p_proto	netdb.h	/^  int p_proto;			\/* Protocol number.  *\/$/;"	m	struct:protoent	access:public
psiginfo	signal.h	/^extern void psiginfo (__const siginfo_t *__pinfo, __const char *__s);$/;"	p	signature:(__const siginfo_t *__pinfo, __const char *__s)
psignal	signal.h	/^extern void psignal (int __sig, __const char *__s);$/;"	p	signature:(int __sig, __const char *__s)
pstate	argp.h	/^  void *pstate;			\/* Private, for use by argp.  *\/$/;"	m	struct:argp_state	access:public
pthread_cancel	pthread.h	/^extern int pthread_cancel (pthread_t __th);$/;"	p	signature:(pthread_t __th)
pthread_cleanup_pop	pthread.h	565;"	d
pthread_cleanup_pop	pthread.h	614;"	d
pthread_cleanup_pop	pthread.h	669;"	d
pthread_cleanup_pop_restore_np	pthread.h	581;"	d
pthread_cleanup_pop_restore_np	pthread.h	634;"	d
pthread_cleanup_pop_restore_np	pthread.h	705;"	d
pthread_cleanup_push	pthread.h	559;"	d
pthread_cleanup_push	pthread.h	605;"	d
pthread_cleanup_push	pthread.h	648;"	d
pthread_cleanup_push_defer_np	pthread.h	573;"	d
pthread_cleanup_push_defer_np	pthread.h	622;"	d
pthread_cleanup_push_defer_np	pthread.h	683;"	d
pthread_equal	pthread.h	/^__NTH (pthread_equal (pthread_t __thread1, pthread_t __thread2))$/;"	f	signature:(pthread_t __thread1, pthread_t __thread2)
pthread_exit	pthread.h	/^extern void pthread_exit (void *__retval) __attribute__ ((__noreturn__));$/;"	p	signature:(void *__retval)
pthread_join	pthread.h	/^extern int pthread_join (pthread_t __th, void **__thread_return);$/;"	p	signature:(pthread_t __th, void **__thread_return)
pthread_setcancelstate	pthread.h	/^extern int pthread_setcancelstate (int __state, int *__oldstate);$/;"	p	signature:(int __state, int *__oldstate)
pthread_setcanceltype	pthread.h	/^extern int pthread_setcanceltype (int __type, int *__oldtype);$/;"	p	signature:(int __type, int *__oldtype)
pthread_testcancel	pthread.h	/^extern void pthread_testcancel (void);$/;"	p	signature:(void)
pthread_timedjoin_np	pthread.h	/^extern int pthread_timedjoin_np (pthread_t __th, void **__thread_return,$/;"	p	signature:(pthread_t __th, void **__thread_return, __const struct timespec *__abstime)
putc	stdio.h	/^extern int putc (int __c, FILE *__stream);$/;"	p	signature:(int __c, FILE *__stream)
putc	stdio.h	587;"	d
putc_unlocked	stdio.h	/^extern int putc_unlocked (int __c, FILE *__stream);$/;"	p	signature:(int __c, FILE *__stream)
putchar	stdio.h	/^extern int putchar (int __c);$/;"	p	signature:(int __c)
putchar_unlocked	stdio.h	/^extern int putchar_unlocked (int __c);$/;"	p	signature:(int __c)
putgrent	grp.h	/^extern int putgrent (__const struct group *__restrict __p,$/;"	p	signature:(__const struct group *__restrict __p, FILE *__restrict __f)
putlong	resolv.h	305;"	d
putmsg	stropts.h	/^extern int putmsg (int __fildes, __const struct strbuf *__ctlptr,$/;"	p	signature:(int __fildes, __const struct strbuf *__ctlptr, __const struct strbuf *__dataptr, int __flags)
putpmsg	stropts.h	/^extern int putpmsg (int __fildes, __const struct strbuf *__ctlptr,$/;"	p	signature:(int __fildes, __const struct strbuf *__ctlptr, __const struct strbuf *__dataptr, int __band, int __flags)
putpwent	pwd.h	/^extern int putpwent (__const struct passwd *__restrict __p,$/;"	p	signature:(__const struct passwd *__restrict __p, FILE *__restrict __f)
puts	stdio.h	/^extern int puts (__const char *__s);$/;"	p	signature:(__const char *__s)
putsgent	gshadow.h	/^extern int putsgent (__const struct sgrp *__g, FILE *__stream);$/;"	p	signature:(__const struct sgrp *__g, FILE *__stream)
putshort	resolv.h	306;"	d
putspent	shadow.h	/^extern int putspent (__const struct spwd *__p, FILE *__stream);$/;"	p	signature:(__const struct spwd *__p, FILE *__stream)
pututxline	utmpx.h	/^extern struct utmpx *pututxline (__const struct utmpx *__utmpx);$/;"	p	signature:(__const struct utmpx *__utmpx)
putw	stdio.h	/^extern int putw (int __w, FILE *__stream);$/;"	p	signature:(int __w, FILE *__stream)
putwc	wchar.h	/^extern wint_t putwc (wchar_t __wc, __FILE *__stream);$/;"	p	signature:(wchar_t __wc, __FILE *__stream)
putwc_unlocked	wchar.h	/^extern wint_t putwc_unlocked (wchar_t __wc, __FILE *__stream);$/;"	p	signature:(wchar_t __wc, __FILE *__stream)
putwchar	wchar.h	/^extern wint_t putwchar (wchar_t __wc);$/;"	p	signature:(wchar_t __wc)
putwchar_unlocked	wchar.h	/^extern wint_t putwchar_unlocked (wchar_t __wc);$/;"	p	signature:(wchar_t __wc)
pw_dir	pwd.h	/^  char *pw_dir;			\/* Home directory.  *\/$/;"	m	struct:passwd	access:public
pw_gecos	pwd.h	/^  char *pw_gecos;		\/* Real name.  *\/$/;"	m	struct:passwd	access:public
pw_gid	pwd.h	/^  __gid_t pw_gid;		\/* Group ID.  *\/$/;"	m	struct:passwd	access:public
pw_name	pwd.h	/^  char *pw_name;		\/* Username.  *\/$/;"	m	struct:passwd	access:public
pw_passwd	pwd.h	/^  char *pw_passwd;		\/* Password.  *\/$/;"	m	struct:passwd	access:public
pw_shell	pwd.h	/^  char *pw_shell;		\/* Shell program.  *\/$/;"	m	struct:passwd	access:public
pw_uid	pwd.h	/^  __uid_t pw_uid;		\/* User ID.  *\/$/;"	m	struct:passwd	access:public
pwrite	unistd.h	393;"	d
q_back	search.h	/^    struct qelem *q_back;$/;"	m	struct:qelem	typeref:struct:qelem::qelem	access:public
q_data	search.h	/^    char q_data[1];$/;"	m	struct:qelem	access:public
q_forw	search.h	/^    struct qelem *q_forw;$/;"	m	struct:qelem	typeref:struct:qelem::qelem	access:public
qelem	search.h	/^struct qelem$/;"	s
qelem::q_back	search.h	/^    struct qelem *q_back;$/;"	m	struct:qelem	typeref:struct:qelem::qelem	access:public
qelem::q_data	search.h	/^    char q_data[1];$/;"	m	struct:qelem	access:public
qelem::q_forw	search.h	/^    struct qelem *q_forw;$/;"	m	struct:qelem	typeref:struct:qelem::qelem	access:public
qhook	resolv.h	/^	res_send_qhook qhook;		\/* query hook *\/$/;"	m	struct:__res_state	access:public
quant	expat.h	/^  enum XML_Content_Quant        quant;$/;"	m	struct:XML_cp	typeref:enum:XML_cp::XML_Content_Quant	access:public
quiet_nan	ieee754.h	/^	unsigned int quiet_nan:1;$/;"	m	struct:ieee754_double::__anon6	access:public
quiet_nan	ieee754.h	/^	unsigned int quiet_nan:1;$/;"	m	struct:ieee754_float::__anon4	access:public
quiet_nan	ieee754.h	/^	unsigned int quiet_nan:1;$/;"	m	struct:ieee854_long_double::__anon8	access:public
quot	inttypes.h	/^    long int quot;		\/* Quotient.  *\/$/;"	m	struct:__anon129	access:public
quot	stdlib.h	/^    int quot;			\/* Quotient.  *\/$/;"	m	struct:__anon24	access:public
quot	stdlib.h	/^    long int quot;		\/* Quotient.  *\/$/;"	m	struct:__anon25	access:public
quot	stdlib.h	/^    long long int quot;		\/* Quotient.  *\/$/;"	m	struct:__anon26	access:public
quoted	argp.h	/^  int quoted;$/;"	m	struct:argp_state	access:public
r_addend	elf.h	/^  Elf32_Sword	r_addend;		\/* Addend *\/$/;"	m	struct:__anon95	access:public
r_addend	elf.h	/^  Elf64_Sxword	r_addend;		\/* Addend *\/$/;"	m	struct:__anon96	access:public
r_address	a.out.h	/^  int r_address;$/;"	m	struct:relocation_info	access:public
r_brk	link.h	/^    ElfW(Addr) r_brk;$/;"	m	struct:r_debug	access:public
r_concurrency	thread_db.h	/^  int r_concurrency;		\/* Concurrency level requested by user.  *\/$/;"	m	struct:td_ta_stats	access:public
r_debug	link.h	/^struct r_debug$/;"	s
r_debug::RT_ADD	link.h	/^	RT_ADD,			\/* Beginning to add a new object.  *\/$/;"	e	enum:r_debug::__anon51
r_debug::RT_CONSISTENT	link.h	/^	RT_CONSISTENT,		\/* Mapping change is complete.  *\/$/;"	e	enum:r_debug::__anon51
r_debug::RT_DELETE	link.h	/^	RT_DELETE		\/* Beginning to remove an object mapping.  *\/$/;"	e	enum:r_debug::__anon51
r_debug::r_brk	link.h	/^    ElfW(Addr) r_brk;$/;"	m	struct:r_debug	access:public
r_debug::r_ldbase	link.h	/^    ElfW(Addr) r_ldbase;	\/* Base address the linker is loaded at.  *\/$/;"	m	struct:r_debug	access:public
r_debug::r_map	link.h	/^    struct link_map *r_map;	\/* Head of the chain of loaded objects.  *\/$/;"	m	struct:r_debug	typeref:struct:r_debug::link_map	access:public
r_debug::r_state	link.h	/^      } r_state;$/;"	m	struct:r_debug	typeref:enum:r_debug::__anon51	access:public
r_debug::r_version	link.h	/^    int r_version;		\/* Version number for this protocol.  *\/$/;"	m	struct:r_debug	access:public
r_extern	a.out.h	/^  unsigned int r_extern:1;$/;"	m	struct:relocation_info	access:public
r_info	elf.h	/^  Elf32_Word	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon93	access:public
r_info	elf.h	/^  Elf32_Word	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon95	access:public
r_info	elf.h	/^  Elf64_Xword	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon94	access:public
r_info	elf.h	/^  Elf64_Xword	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon96	access:public
r_ldbase	link.h	/^    ElfW(Addr) r_ldbase;	\/* Base address the linker is loaded at.  *\/$/;"	m	struct:r_debug	access:public
r_length	a.out.h	/^  unsigned int r_length:2;$/;"	m	struct:relocation_info	access:public
r_map	link.h	/^    struct link_map *r_map;	\/* Head of the chain of loaded objects.  *\/$/;"	m	struct:r_debug	typeref:struct:r_debug::link_map	access:public
r_offset	elf.h	/^  Elf32_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon93	access:public
r_offset	elf.h	/^  Elf32_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon95	access:public
r_offset	elf.h	/^  Elf64_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon94	access:public
r_offset	elf.h	/^  Elf64_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon96	access:public
r_pad	a.out.h	/^  unsigned int r_pad:4;$/;"	m	struct:relocation_info	access:public
r_pcrel	a.out.h	/^  unsigned int r_pcrel:1;$/;"	m	struct:relocation_info	access:public
r_state	link.h	/^      } r_state;$/;"	m	struct:r_debug	typeref:enum:r_debug::__anon51	access:public
r_symbolnum	a.out.h	/^  unsigned int r_symbolnum:24;$/;"	m	struct:relocation_info	access:public
r_version	link.h	/^    int r_version;		\/* Version number for this protocol.  *\/$/;"	m	struct:r_debug	access:public
rand_deg	stdlib.h	/^    int rand_deg;		\/* Degree of random number generator.  *\/$/;"	m	struct:random_data	access:public
rand_sep	stdlib.h	/^    int rand_sep;		\/* Distance between front and rear.  *\/$/;"	m	struct:random_data	access:public
rand_type	stdlib.h	/^    int rand_type;		\/* Type of random number generator.  *\/$/;"	m	struct:random_data	access:public
random_data	stdlib.h	/^struct random_data$/;"	s
random_data::end_ptr	stdlib.h	/^    int32_t *end_ptr;		\/* Pointer behind state table.  *\/$/;"	m	struct:random_data	access:public
random_data::fptr	stdlib.h	/^    int32_t *fptr;		\/* Front pointer.  *\/$/;"	m	struct:random_data	access:public
random_data::rand_deg	stdlib.h	/^    int rand_deg;		\/* Degree of random number generator.  *\/$/;"	m	struct:random_data	access:public
random_data::rand_sep	stdlib.h	/^    int rand_sep;		\/* Distance between front and rear.  *\/$/;"	m	struct:random_data	access:public
random_data::rand_type	stdlib.h	/^    int rand_type;		\/* Type of random number generator.  *\/$/;"	m	struct:random_data	access:public
random_data::rptr	stdlib.h	/^    int32_t *rptr;		\/* Rear pointer.  *\/$/;"	m	struct:random_data	access:public
random_data::state	stdlib.h	/^    int32_t *state;		\/* Array of state values.  *\/$/;"	m	struct:random_data	access:public
rcmd	netdb.h	/^extern int rcmd (char **__restrict __ahost, unsigned short int __rport,$/;"	p	signature:(char **__restrict __ahost, unsigned short int __rport, __const char *__restrict __locuser, __const char *__restrict __remuser, __const char *__restrict __cmd, int *__restrict __fd2p)
rcmd_af	netdb.h	/^extern int rcmd_af (char **__restrict __ahost, unsigned short int __rport,$/;"	p	signature:(char **__restrict __ahost, unsigned short int __rport, __const char *__restrict __locuser, __const char *__restrict __remuser, __const char *__restrict __cmd, int *__restrict __fd2p, sa_family_t __af)
re_comp	regex.h	/^extern char *re_comp (const char *);$/;"	p	signature:(const char *)
re_compile_fastmap	regex.h	/^extern int re_compile_fastmap (struct re_pattern_buffer *__buffer);$/;"	p	signature:(struct re_pattern_buffer *__buffer)
re_compile_pattern	regex.h	/^extern const char *re_compile_pattern (const char *__pattern, size_t __length,$/;"	p	signature:(const char *__pattern, size_t __length, struct re_pattern_buffer *__buffer)
re_exec	regex.h	/^extern int re_exec (const char *);$/;"	p	signature:(const char *)
re_match	regex.h	/^extern int re_match (struct re_pattern_buffer *__buffer, const char *__string,$/;"	p	signature:(struct re_pattern_buffer *__buffer, const char *__string, int __length, int __start, struct re_registers *__regs)
re_match_2	regex.h	/^extern int re_match_2 (struct re_pattern_buffer *__buffer,$/;"	p	signature:(struct re_pattern_buffer *__buffer, const char *__string1, int __length1, const char *__string2, int __length2, int __start, struct re_registers *__regs, int __stop)
re_nsub	regex.h	/^  size_t re_nsub;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer	regex.h	/^struct re_pattern_buffer$/;"	s
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  __RE_TRANSLATE_TYPE __REPB_PREFIX(translate);$/;"	p	struct:re_pattern_buffer	access:public	signature:(translate)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  char *__REPB_PREFIX(fastmap);$/;"	p	struct:re_pattern_buffer	access:public	signature:(fastmap)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  reg_syntax_t __REPB_PREFIX(syntax);$/;"	p	struct:re_pattern_buffer	access:public	signature:(syntax)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(can_be_null) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(can_be_null)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(fastmap_accurate) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(fastmap_accurate)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(newline_anchor) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(newline_anchor)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(no_sub) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(no_sub)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(not_bol) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(not_bol)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(not_eol) : 1;$/;"	p	struct:re_pattern_buffer	access:public	signature:(not_eol)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  unsigned __REPB_PREFIX(regs_allocated) : 2;$/;"	p	struct:re_pattern_buffer	access:public	signature:(regs_allocated)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  unsigned char *__REPB_PREFIX(buffer);$/;"	p	struct:re_pattern_buffer	access:public	signature:(buffer)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  unsigned long int __REPB_PREFIX(allocated);$/;"	p	struct:re_pattern_buffer	access:public	signature:(allocated)
re_pattern_buffer::__REPB_PREFIX	regex.h	/^  unsigned long int __REPB_PREFIX(used);$/;"	p	struct:re_pattern_buffer	access:public	signature:(used)
re_pattern_buffer::re_nsub	regex.h	/^  size_t re_nsub;$/;"	m	struct:re_pattern_buffer	access:public
re_registers	regex.h	/^struct re_registers$/;"	s
re_registers::end	regex.h	/^  regoff_t *end;$/;"	m	struct:re_registers	access:public
re_registers::num_regs	regex.h	/^  unsigned num_regs;$/;"	m	struct:re_registers	access:public
re_registers::start	regex.h	/^  regoff_t *start;$/;"	m	struct:re_registers	access:public
re_search	regex.h	/^extern int re_search (struct re_pattern_buffer *__buffer, const char *__string,$/;"	p	signature:(struct re_pattern_buffer *__buffer, const char *__string, int __length, int __start, int __range, struct re_registers *__regs)
re_search_2	regex.h	/^extern int re_search_2 (struct re_pattern_buffer *__buffer,$/;"	p	signature:(struct re_pattern_buffer *__buffer, const char *__string1, int __length1, const char *__string2, int __length2, int __start, int __range, struct re_registers *__regs, int __stop)
re_set_registers	regex.h	/^extern void re_set_registers (struct re_pattern_buffer *__buffer,$/;"	p	signature:(struct re_pattern_buffer *__buffer, struct re_registers *__regs, unsigned int __num_regs, regoff_t *__starts, regoff_t *__ends)
re_set_syntax	regex.h	/^extern reg_syntax_t re_set_syntax (reg_syntax_t __syntax);$/;"	p	signature:(reg_syntax_t __syntax)
read	libio.h	/^  __io_read_fn *read;		\/* Read bytes.  *\/$/;"	m	struct:__anon130	access:public
readdir	dirent.h	169;"	d
readdir_r	dirent.h	196;"	d
realloc_fcn	expat.h	/^  void *(*realloc_fcn)(void *ptr, size_t size);$/;"	m	struct:__anon46	access:public
reg_errcode_t	regex.h	/^} reg_errcode_t;$/;"	t	typeref:enum:__anon1
reg_syntax_t	regex.h	/^typedef unsigned long int reg_syntax_t;$/;"	t
regcomp	regex.h	/^extern int regcomp (regex_t *__restrict __preg,$/;"	p	signature:(regex_t *__restrict __preg, const char *__restrict __pattern, int __cflags)
regerror	regex.h	/^extern size_t regerror (int __errcode, const regex_t *__restrict __preg,$/;"	p	signature:(int __errcode, const regex_t *__restrict __preg, char *__restrict __errbuf, size_t __errbuf_size)
regex_t	regex.h	/^typedef struct re_pattern_buffer regex_t;$/;"	t	typeref:struct:re_pattern_buffer
regexec	regex.h	/^extern int regexec (const regex_t *__restrict __preg,$/;"	p	signature:(const regex_t *__restrict __preg, const char *__restrict __string, size_t __nmatch, regmatch_t __pmatch[__restrict_arr], int __eflags)
regfree	regex.h	/^extern void regfree (regex_t *__preg);$/;"	p	signature:(regex_t *__preg)
regmatch_t	regex.h	/^} regmatch_t;$/;"	t	typeref:struct:__anon2
regoff_t	regex.h	/^typedef int regoff_t;$/;"	t
release	expat.h	/^  void (XMLCALL *release)(void *data);$/;"	m	struct:__anon47	access:public
relocation_info	a.out.h	/^struct relocation_info$/;"	s
relocation_info::r_address	a.out.h	/^  int r_address;$/;"	m	struct:relocation_info	access:public
relocation_info::r_extern	a.out.h	/^  unsigned int r_extern:1;$/;"	m	struct:relocation_info	access:public
relocation_info::r_length	a.out.h	/^  unsigned int r_length:2;$/;"	m	struct:relocation_info	access:public
relocation_info::r_pad	a.out.h	/^  unsigned int r_pad:4;$/;"	m	struct:relocation_info	access:public
relocation_info::r_pcrel	a.out.h	/^  unsigned int r_pcrel:1;$/;"	m	struct:relocation_info	access:public
relocation_info::r_symbolnum	a.out.h	/^  unsigned int r_symbolnum:24;$/;"	m	struct:relocation_info	access:public
rem	inttypes.h	/^    long int rem;		\/* Remainder.  *\/$/;"	m	struct:__anon129	access:public
rem	stdlib.h	/^    int rem;			\/* Remainder.  *\/$/;"	m	struct:__anon24	access:public
rem	stdlib.h	/^    long int rem;		\/* Remainder.  *\/$/;"	m	struct:__anon25	access:public
rem	stdlib.h	/^    long long int rem;		\/* Remainder.  *\/$/;"	m	struct:__anon26	access:public
remainder	tgmath.h	403;"	d
remquo	tgmath.h	369;"	d
required_argument	getopt.h	119;"	d
res_close	resolv.h	258;"	d
res_dnok	resolv.h	307;"	d
res_done	resolv.h	/^typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }$/;"	e	enum:__anon40
res_error	resolv.h	/^typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }$/;"	e	enum:__anon40
res_goahead	resolv.h	/^typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }$/;"	e	enum:__anon40
res_h_errno	resolv.h	/^	int	res_h_errno;		\/* last one set for this context *\/$/;"	m	struct:__res_state	access:public
res_hnok	resolv.h	308;"	d
res_hostalias	resolv.h	309;"	d
res_init	resolv.h	259;"	d
res_isourserver	resolv.h	260;"	d
res_mailok	resolv.h	310;"	d
res_mkquery	resolv.h	261;"	d
res_modified	resolv.h	/^typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }$/;"	e	enum:__anon40
res_nameinquery	resolv.h	311;"	d
res_nclose	resolv.h	312;"	d
res_nextns	resolv.h	/^typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }$/;"	e	enum:__anon40
res_ninit	resolv.h	313;"	d
res_nisourserver	resolv.h	320;"	d
res_nmkquery	resolv.h	314;"	d
res_npquery	resolv.h	315;"	d
res_nquery	resolv.h	316;"	d
res_nquerydomain	resolv.h	317;"	d
res_nsearch	resolv.h	318;"	d
res_nsend	resolv.h	319;"	d
res_ownok	resolv.h	321;"	d
res_queriesmatch	resolv.h	322;"	d
res_query	resolv.h	262;"	d
res_querydomain	resolv.h	263;"	d
res_randomid	resolv.h	323;"	d
res_search	resolv.h	264;"	d
res_send	resolv.h	265;"	d
res_send_qhook	resolv.h	/^typedef res_sendhookact (*res_send_qhook) (struct sockaddr_in * const *__ns,$/;"	t
res_send_rhook	resolv.h	/^typedef res_sendhookact (*res_send_rhook) (const struct sockaddr_in *__ns,$/;"	t
res_sendhookact	resolv.h	/^	res_sendhookact;$/;"	t	typeref:enum:__anon40
res_state	resolv.h	/^typedef struct __res_state *res_state;$/;"	t	typeref:struct:__res_state
res_sym	resolv.h	/^struct res_sym {$/;"	s
res_sym::humanname	resolv.h	/^	char *	humanname;	\/* Its fun name, like "mail exchanger" *\/$/;"	m	struct:res_sym	access:public
res_sym::name	resolv.h	/^	char *	name;		\/* Its symbolic name, like "MX" *\/$/;"	m	struct:res_sym	access:public
res_sym::number	resolv.h	/^	int	number;		\/* Identifying number, like T_MX *\/$/;"	m	struct:res_sym	access:public
reserved	zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s	access:public
retrans	resolv.h	/^	int	retrans;		\/* retransmition time interval *\/$/;"	m	struct:__res_state	access:public
retry	resolv.h	/^	int	retry;			\/* number of times to retransmit *\/$/;"	m	struct:__res_state	access:public
retval	math.h	/^    double retval;$/;"	m	struct:__exception	access:public
rewind	stdio.h	/^extern void rewind (FILE *__stream);$/;"	p	signature:(FILE *__stream)
rexec	netdb.h	/^extern int rexec (char **__restrict __ahost, int __rport,$/;"	p	signature:(char **__restrict __ahost, int __rport, __const char *__restrict __name, __const char *__restrict __pass, __const char *__restrict __cmd, int *__restrict __fd2p)
rexec_af	netdb.h	/^extern int rexec_af (char **__restrict __ahost, int __rport,$/;"	p	signature:(char **__restrict __ahost, int __rport, __const char *__restrict __name, __const char *__restrict __pass, __const char *__restrict __cmd, int *__restrict __fd2p, sa_family_t __af)
rhook	resolv.h	/^	res_send_rhook rhook;		\/* response hook *\/$/;"	m	struct:__res_state	access:public
ri_cprmask	elf.h	/^  Elf32_Word	ri_cprmask[4];		\/* Coprocessor registers used *\/$/;"	m	struct:__anon122	access:public
ri_gp_value	elf.h	/^  Elf32_Sword	ri_gp_value;		\/* $gp register value *\/$/;"	m	struct:__anon122	access:public
ri_gprmask	elf.h	/^  Elf32_Word	ri_gprmask;		\/* General registers used *\/$/;"	m	struct:__anon122	access:public
right	libtasn1.h	/^    struct node_asn_struct *right;	\/* Pointer to the brother node *\/$/;"	m	struct:node_asn_struct	typeref:struct:node_asn_struct::node_asn_struct	access:public
rint	tgmath.h	395;"	d
rm_eo	regex.h	/^  regoff_t rm_eo;  \/* Byte offset from string's start to substring's end.  *\/$/;"	m	struct:__anon2	access:public
rm_so	regex.h	/^  regoff_t rm_so;  \/* Byte offset from string's start to substring's start.  *\/$/;"	m	struct:__anon2	access:public
root_argp	argp.h	/^  __const struct argp *root_argp;$/;"	m	struct:argp_state	typeref:struct:argp_state::argp	access:public
round	tgmath.h	360;"	d
rptr	stdlib.h	/^    int32_t *rptr;		\/* Rear pointer.  *\/$/;"	m	struct:random_data	access:public
rresvport	netdb.h	/^extern int rresvport (int *__alport);$/;"	p	signature:(int *__alport)
rresvport_af	netdb.h	/^extern int rresvport_af (int *__alport, sa_family_t __af);$/;"	p	signature:(int *__alport, sa_family_t __af)
ruserok	netdb.h	/^extern int ruserok (__const char *__rhost, int __suser,$/;"	p	signature:(__const char *__rhost, int __suser, __const char *__remuser, __const char *__locuser)
ruserok_af	netdb.h	/^extern int ruserok_af (__const char *__rhost, int __suser,$/;"	p	signature:(__const char *__rhost, int __suser, __const char *__remuser, __const char *__locuser, sa_family_t __af)
s_aliases	netdb.h	/^  char **s_aliases;		\/* Alias list.  *\/$/;"	m	struct:servent	access:public
s_name	netdb.h	/^  char *s_name;			\/* Official service name.  *\/$/;"	m	struct:servent	access:public
s_port	netdb.h	/^  int s_port;			\/* Port number.  *\/$/;"	m	struct:servent	access:public
s_proto	netdb.h	/^  char *s_proto;		\/* Protocol to use.  *\/$/;"	m	struct:servent	access:public
s_reg_t	regex.h	/^typedef long int s_reg_t;$/;"	t
sb0	crypt.h	/^    char sb0[32768];$/;"	m	struct:crypt_data	access:public
sb1	crypt.h	/^    char sb1[32768];$/;"	m	struct:crypt_data	access:public
sb2	crypt.h	/^    char sb2[32768];$/;"	m	struct:crypt_data	access:public
sb3	crypt.h	/^    char sb3[32768];$/;"	m	struct:crypt_data	access:public
scalb	tgmath.h	407;"	d
scalbln	tgmath.h	414;"	d
scalbn	tgmath.h	411;"	d
scandir	dirent.h	268;"	d
scanf	stdio.h	460;"	d
sched_priority	sched.h	45;"	d
scopeid	nss.h	/^    uint32_t scopeid;$/;"	m	struct:gaih_addrtuple	access:public
section	elf.h	/^  Elf32_Section section;	\/* Section header index of section affected,$/;"	m	struct:__anon123	access:public
seek	libio.h	/^  __io_seek_fn *seek;		\/* Seek\/tell file position.  *\/$/;"	m	struct:__anon130	access:public
sem_timedwait	semaphore.h	/^extern int sem_timedwait (sem_t *__restrict __sem,$/;"	p	signature:(sem_t *__restrict __sem, __const struct timespec *__restrict __abstime)
sem_wait	semaphore.h	/^extern int sem_wait (sem_t *__sem);$/;"	p	signature:(sem_t *__sem)
servent	netdb.h	/^struct servent$/;"	s
servent::s_aliases	netdb.h	/^  char **s_aliases;		\/* Alias list.  *\/$/;"	m	struct:servent	access:public
servent::s_name	netdb.h	/^  char *s_name;			\/* Official service name.  *\/$/;"	m	struct:servent	access:public
servent::s_port	netdb.h	/^  int s_port;			\/* Port number.  *\/$/;"	m	struct:servent	access:public
servent::s_proto	netdb.h	/^  char *s_proto;		\/* Protocol to use.  *\/$/;"	m	struct:servent	access:public
set_debug	FlexLexer.h	/^	void set_debug( int flag )	{ yy_flex_debug = flag; }$/;"	f	class:FlexLexer	access:public	signature:( int flag )
setgrent	grp.h	/^extern void setgrent (void);$/;"	p	signature:(void)
sethostent	netdb.h	/^extern void sethostent (int __stay_open);$/;"	p	signature:(int __stay_open)
setjmp	setjmp.h	69;"	d
setjmp	setjmp.h	74;"	d
setnetent	netdb.h	/^extern void setnetent (int __stay_open);$/;"	p	signature:(int __stay_open)
setnetgrent	netdb.h	/^extern int setnetgrent (__const char *__netgroup);$/;"	p	signature:(__const char *__netgroup)
setpgrp	unistd.h	677;"	d
setprotoent	netdb.h	/^extern void setprotoent (int __stay_open);$/;"	p	signature:(int __stay_open)
setpwent	pwd.h	/^extern void setpwent (void);$/;"	p	signature:(void)
setservent	netdb.h	/^extern void setservent (int __stay_open);$/;"	p	signature:(int __stay_open)
setsgent	gshadow.h	/^extern void setsgent (void);$/;"	p	signature:(void)
setspent	shadow.h	/^extern void setspent (void);$/;"	p	signature:(void)
setutxent	utmpx.h	/^extern void setutxent (void);$/;"	p	signature:(void)
sg_adm	gshadow.h	/^    char **sg_adm;		\/* Group administrator list.  *\/$/;"	m	struct:sgrp	access:public
sg_mem	gshadow.h	/^    char **sg_mem;		\/* Group member list.  *\/$/;"	m	struct:sgrp	access:public
sg_namp	gshadow.h	/^    char *sg_namp;		\/* Group name.  *\/$/;"	m	struct:sgrp	access:public
sg_passwd	gshadow.h	/^    char *sg_passwd;		\/* Encrypted password.  *\/$/;"	m	struct:sgrp	access:public
sgetsgent	gshadow.h	/^extern struct sgrp *sgetsgent (__const char *__string);$/;"	p	signature:(__const char *__string)
sgetsgent_r	gshadow.h	/^extern int sgetsgent_r (__const char *__string, struct sgrp *__result_buf,$/;"	p	signature:(__const char *__string, struct sgrp *__result_buf, char *__buffer, size_t __buflen, struct sgrp **__result)
sgetspent	shadow.h	/^extern struct spwd *sgetspent (__const char *__string);$/;"	p	signature:(__const char *__string)
sgetspent_r	shadow.h	/^extern int sgetspent_r (__const char *__string, struct spwd *__result_buf,$/;"	p	signature:(__const char *__string, struct spwd *__result_buf, char *__buffer, size_t __buflen, struct spwd **__result)
sgrp	gshadow.h	/^struct sgrp$/;"	s
sgrp::sg_adm	gshadow.h	/^    char **sg_adm;		\/* Group administrator list.  *\/$/;"	m	struct:sgrp	access:public
sgrp::sg_mem	gshadow.h	/^    char **sg_mem;		\/* Group member list.  *\/$/;"	m	struct:sgrp	access:public
sgrp::sg_namp	gshadow.h	/^    char *sg_namp;		\/* Group name.  *\/$/;"	m	struct:sgrp	access:public
sgrp::sg_passwd	gshadow.h	/^    char *sg_passwd;		\/* Encrypted password.  *\/$/;"	m	struct:sgrp	access:public
sh_addr	elf.h	/^  Elf32_Addr	sh_addr;		\/* Section virtual addr at execution *\/$/;"	m	struct:__anon87	access:public
sh_addr	elf.h	/^  Elf64_Addr	sh_addr;		\/* Section virtual addr at execution *\/$/;"	m	struct:__anon88	access:public
sh_addralign	elf.h	/^  Elf32_Word	sh_addralign;		\/* Section alignment *\/$/;"	m	struct:__anon87	access:public
sh_addralign	elf.h	/^  Elf64_Xword	sh_addralign;		\/* Section alignment *\/$/;"	m	struct:__anon88	access:public
sh_entsize	elf.h	/^  Elf32_Word	sh_entsize;		\/* Entry size if section holds table *\/$/;"	m	struct:__anon87	access:public
sh_entsize	elf.h	/^  Elf64_Xword	sh_entsize;		\/* Entry size if section holds table *\/$/;"	m	struct:__anon88	access:public
sh_flags	elf.h	/^  Elf32_Word	sh_flags;		\/* Section flags *\/$/;"	m	struct:__anon87	access:public
sh_flags	elf.h	/^  Elf64_Xword	sh_flags;		\/* Section flags *\/$/;"	m	struct:__anon88	access:public
sh_info	elf.h	/^  Elf32_Word	sh_info;		\/* Additional section information *\/$/;"	m	struct:__anon87	access:public
sh_info	elf.h	/^  Elf64_Word	sh_info;		\/* Additional section information *\/$/;"	m	struct:__anon88	access:public
sh_link	elf.h	/^  Elf32_Word	sh_link;		\/* Link to another section *\/$/;"	m	struct:__anon87	access:public
sh_link	elf.h	/^  Elf64_Word	sh_link;		\/* Link to another section *\/$/;"	m	struct:__anon88	access:public
sh_name	elf.h	/^  Elf32_Word	sh_name;		\/* Section name (string tbl index) *\/$/;"	m	struct:__anon87	access:public
sh_name	elf.h	/^  Elf64_Word	sh_name;		\/* Section name (string tbl index) *\/$/;"	m	struct:__anon88	access:public
sh_offset	elf.h	/^  Elf32_Off	sh_offset;		\/* Section file offset *\/$/;"	m	struct:__anon87	access:public
sh_offset	elf.h	/^  Elf64_Off	sh_offset;		\/* Section file offset *\/$/;"	m	struct:__anon88	access:public
sh_size	elf.h	/^  Elf32_Word	sh_size;		\/* Section size in bytes *\/$/;"	m	struct:__anon87	access:public
sh_size	elf.h	/^  Elf64_Xword	sh_size;		\/* Section size in bytes *\/$/;"	m	struct:__anon88	access:public
sh_type	elf.h	/^  Elf32_Word	sh_type;		\/* Section type *\/$/;"	m	struct:__anon87	access:public
sh_type	elf.h	/^  Elf64_Word	sh_type;		\/* Section type *\/$/;"	m	struct:__anon88	access:public
showsign	printf.h	/^  unsigned int showsign:1;	\/* + flag.  *\/$/;"	m	struct:printf_info	access:public
si_boundto	elf.h	/^  Elf32_Half si_boundto;		\/* Direct bindings, symbol bound to *\/$/;"	m	struct:__anon91	access:public
si_boundto	elf.h	/^  Elf64_Half si_boundto;		\/* Direct bindings, symbol bound to *\/$/;"	m	struct:__anon92	access:public
si_flags	elf.h	/^  Elf32_Half si_flags;			\/* Per symbol flags *\/$/;"	m	struct:__anon91	access:public
si_flags	elf.h	/^  Elf64_Half si_flags;			\/* Per symbol flags *\/$/;"	m	struct:__anon92	access:public
sig_atomic_t	signal.h	/^typedef __sig_atomic_t sig_atomic_t;$/;"	t
sig_t	signal.h	/^typedef __sighandler_t sig_t;$/;"	t
sighandler_t	signal.h	/^typedef __sighandler_t sighandler_t;$/;"	t
sigjmp_buf	setjmp.h	/^typedef struct __jmp_buf_tag sigjmp_buf[1];$/;"	t	typeref:struct:__jmp_buf_tag
sigmask	signal.h	193;"	d
signbit	math.h	230;"	d
signbit	math.h	233;"	d
sigpause	signal.h	180;"	d
sigset_t	signal.h	/^typedef __sigset_t sigset_t;$/;"	t
sigsetjmp	setjmp.h	104;"	d
sigvec	signal.h	/^struct sigvec$/;"	s
sigvec::sv_flags	signal.h	/^    int sv_flags;		\/* Flags (see below).  *\/$/;"	m	struct:sigvec	access:public
sigvec::sv_handler	signal.h	/^    __sighandler_t sv_handler;	\/* Signal handler.  *\/$/;"	m	struct:sigvec	access:public
sigvec::sv_mask	signal.h	/^    int sv_mask;		\/* Mask of signals to be blocked.  *\/$/;"	m	struct:sigvec	access:public
sin	tgmath.h	266;"	d
sinh	tgmath.h	283;"	d
size	elf.h	/^  unsigned char size;		\/* Size of descriptor, including header.  *\/$/;"	m	struct:__anon123	access:public
size	search.h	/^    unsigned int size;$/;"	m	struct:hsearch_data	access:public
size_t	glob.h	/^typedef __SIZE_TYPE__ size_t;$/;"	t
sleep	unistd.h	/^extern unsigned int sleep (unsigned int __seconds);$/;"	p	signature:(unsigned int __seconds)
smblks	malloc.h	/^  int smblks;   \/* number of fastbin blocks *\/$/;"	m	struct:mallinfo	access:public
socklen_t	unistd.h	/^typedef __socklen_t socklen_t;$/;"	t
sort_list	resolv.h	/^	} sort_list[MAXRESOLVSORT];$/;"	m	struct:__res_state	typeref:struct:__res_state::__anon41	access:public
sp_expire	shadow.h	/^    long int sp_expire;		\/* Number of days since 1970-01-01 until$/;"	m	struct:spwd	access:public
sp_flag	shadow.h	/^    unsigned long int sp_flag;	\/* Reserved.  *\/$/;"	m	struct:spwd	access:public
sp_inact	shadow.h	/^    long int sp_inact;		\/* Number of days the account may be$/;"	m	struct:spwd	access:public
sp_lstchg	shadow.h	/^    long int sp_lstchg;		\/* Date of last change.  *\/$/;"	m	struct:spwd	access:public
sp_max	shadow.h	/^    long int sp_max;		\/* Maximum number of days between changes.  *\/$/;"	m	struct:spwd	access:public
sp_min	shadow.h	/^    long int sp_min;		\/* Minimum number of days between changes.  *\/$/;"	m	struct:spwd	access:public
sp_namp	shadow.h	/^    char *sp_namp;		\/* Login name.  *\/$/;"	m	struct:spwd	access:public
sp_pwdp	shadow.h	/^    char *sp_pwdp;		\/* Encrypted password.  *\/$/;"	m	struct:spwd	access:public
sp_warn	shadow.h	/^    long int sp_warn;		\/* Number of days to warn user to change$/;"	m	struct:spwd	access:public
space	printf.h	/^  unsigned int space:1;		\/* Space flag.  *\/$/;"	m	struct:printf_info	access:public
spec	printf.h	/^  wchar_t spec;			\/* Format letter.  *\/$/;"	m	struct:printf_info	access:public
spwd	shadow.h	/^struct spwd$/;"	s
spwd::sp_expire	shadow.h	/^    long int sp_expire;		\/* Number of days since 1970-01-01 until$/;"	m	struct:spwd	access:public
spwd::sp_flag	shadow.h	/^    unsigned long int sp_flag;	\/* Reserved.  *\/$/;"	m	struct:spwd	access:public
spwd::sp_inact	shadow.h	/^    long int sp_inact;		\/* Number of days the account may be$/;"	m	struct:spwd	access:public
spwd::sp_lstchg	shadow.h	/^    long int sp_lstchg;		\/* Date of last change.  *\/$/;"	m	struct:spwd	access:public
spwd::sp_max	shadow.h	/^    long int sp_max;		\/* Maximum number of days between changes.  *\/$/;"	m	struct:spwd	access:public
spwd::sp_min	shadow.h	/^    long int sp_min;		\/* Minimum number of days between changes.  *\/$/;"	m	struct:spwd	access:public
spwd::sp_namp	shadow.h	/^    char *sp_namp;		\/* Login name.  *\/$/;"	m	struct:spwd	access:public
spwd::sp_pwdp	shadow.h	/^    char *sp_pwdp;		\/* Encrypted password.  *\/$/;"	m	struct:spwd	access:public
spwd::sp_warn	shadow.h	/^    long int sp_warn;		\/* Number of days to warn user to change$/;"	m	struct:spwd	access:public
sqrt	tgmath.h	331;"	d
sscanf	stdio.h	461;"	d
ssize_t	monetary.h	/^typedef __ssize_t ssize_t;$/;"	t
ssize_t	stdio.h	/^typedef __ssize_t ssize_t;$/;"	t
ssize_t	unistd.h	/^typedef __ssize_t ssize_t;$/;"	t
st_info	elf.h	/^  unsigned char	st_info;		\/* Symbol type and binding *\/$/;"	m	struct:__anon89	access:public
st_info	elf.h	/^  unsigned char	st_info;		\/* Symbol type and binding *\/$/;"	m	struct:__anon90	access:public
st_name	elf.h	/^  Elf32_Word	st_name;		\/* Symbol name (string tbl index) *\/$/;"	m	struct:__anon89	access:public
st_name	elf.h	/^  Elf64_Word	st_name;		\/* Symbol name (string tbl index) *\/$/;"	m	struct:__anon90	access:public
st_other	elf.h	/^  unsigned char	st_other;		\/* Symbol visibility *\/$/;"	m	struct:__anon89	access:public
st_other	elf.h	/^  unsigned char st_other;		\/* Symbol visibility *\/$/;"	m	struct:__anon90	access:public
st_shndx	elf.h	/^  Elf32_Section	st_shndx;		\/* Section index *\/$/;"	m	struct:__anon89	access:public
st_shndx	elf.h	/^  Elf64_Section	st_shndx;		\/* Section index *\/$/;"	m	struct:__anon90	access:public
st_size	elf.h	/^  Elf32_Word	st_size;		\/* Symbol size *\/$/;"	m	struct:__anon89	access:public
st_size	elf.h	/^  Elf64_Xword	st_size;		\/* Symbol size *\/$/;"	m	struct:__anon90	access:public
st_value	elf.h	/^  Elf32_Addr	st_value;		\/* Symbol value *\/$/;"	m	struct:__anon89	access:public
st_value	elf.h	/^  Elf64_Addr	st_value;		\/* Symbol value *\/$/;"	m	struct:__anon90	access:public
start	regex.h	/^  regoff_t *start;$/;"	m	struct:re_registers	access:public
state	stdlib.h	/^    int32_t *state;		\/* Array of state values.  *\/$/;"	m	struct:random_data	access:public
state	zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR	access:public
static_struct_asn	libtasn1.h	/^  struct static_struct_asn$/;"	s
static_struct_asn::name	libtasn1.h	/^    const char *name;		\/* Node name *\/$/;"	m	struct:static_struct_asn	access:public
static_struct_asn::type	libtasn1.h	/^    unsigned int type;		\/* Node type *\/$/;"	m	struct:static_struct_asn	access:public
static_struct_asn::value	libtasn1.h	/^    const void *value;		\/* Node value *\/$/;"	m	struct:static_struct_asn	access:public
stderr	stdio.h	171;"	d
stdin	stdio.h	169;"	d
stdout	stdio.h	170;"	d
str	autosprintf.h	/^    char *str;$/;"	m	class:gnu::autosprintf	access:private
strdupa	string.h	189;"	d
strndupa	string.h	199;"	d
strtoimax	inttypes.h	/^__NTH (strtoimax (__const char *__restrict nptr, char **__restrict endptr,$/;"	f	signature:(__const char *__restrict nptr, char **__restrict endptr, int base)
strtoumax	inttypes.h	/^__NTH (strtoumax (__const char *__restrict nptr, char **__restrict endptr,$/;"	f	signature:(__const char *__restrict nptr, char **__restrict endptr, int base)
sv_flags	signal.h	/^    int sv_flags;		\/* Flags (see below).  *\/$/;"	m	struct:sigvec	access:public
sv_handler	signal.h	/^    __sighandler_t sv_handler;	\/* Signal handler.  *\/$/;"	m	struct:sigvec	access:public
sv_mask	signal.h	/^    int sv_mask;		\/* Mask of signals to be blocked.  *\/$/;"	m	struct:sigvec	access:public
sv_onstack	signal.h	320;"	d
switch_streams	FlexLexer.h	/^	virtual void switch_streams( FLEX_STD istream* new_in = 0,$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* new_in = 0, FLEX_STD ostream* new_out = 0 )
switch_streams	FlexLexer.h	/^	virtual void switch_streams( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )
swscanf	wchar.h	674;"	d
sym_ntop	resolv.h	324;"	d
sym_ntos	resolv.h	325;"	d
sym_ston	resolv.h	326;"	d
syscallno	thread_db.h	/^    int syscallno;		\/* Number of system call used.  *\/$/;"	m	union:td_notify::__anon64	access:public
t_uscalar_t	stropts.h	/^typedef __t_uscalar_t t_uscalar_t;$/;"	t
table	search.h	/^    struct _ENTRY *table;$/;"	m	struct:hsearch_data	typeref:struct:hsearch_data::_ENTRY	access:public
tan	tgmath.h	268;"	d
tanh	tgmath.h	285;"	d
tcdrain	termios.h	/^extern int tcdrain (int __fd);$/;"	p	signature:(int __fd)
td_err_e	thread_db.h	/^} td_err_e;$/;"	t	typeref:enum:__anon59
td_event_addset	thread_db.h	141;"	d
td_event_delset	thread_db.h	143;"	d
td_event_e	thread_db.h	/^} td_event_e;$/;"	t	typeref:enum:__anon62
td_event_emptyset	thread_db.h	127;"	d
td_event_fillset	thread_db.h	134;"	d
td_event_msg	thread_db.h	/^typedef struct td_event_msg$/;"	s
td_event_msg::__anon65::data	thread_db.h	/^    uintptr_t data;		\/* Event specific data.  *\/$/;"	m	union:td_event_msg::__anon65	access:public
td_event_msg::event	thread_db.h	/^  td_event_e event;		\/* Event type being reported.  *\/$/;"	m	struct:td_event_msg	access:public
td_event_msg::msg	thread_db.h	/^  } msg;$/;"	m	struct:td_event_msg	typeref:union:td_event_msg::__anon65	access:public
td_event_msg::th_p	thread_db.h	/^  const td_thrhandle_t *th_p;	\/* Thread reporting the event.  *\/$/;"	m	struct:td_event_msg	access:public
td_event_msg_t	thread_db.h	/^} td_event_msg_t;$/;"	t	typeref:struct:td_event_msg
td_eventbuf_t	thread_db.h	/^} td_eventbuf_t;$/;"	t	typeref:struct:__anon66
td_eventisempty	thread_db.h	148;"	d
td_eventismember	thread_db.h	145;"	d
td_init	thread_db.h	/^extern td_err_e td_init (void);$/;"	p	signature:(void)
td_key_iter_f	thread_db.h	/^typedef int td_key_iter_f (thread_key_t, void (*) (void *), void *);$/;"	t
td_log	thread_db.h	/^extern td_err_e td_log (void);$/;"	p	signature:(void)
td_notify	thread_db.h	/^typedef struct td_notify$/;"	s
td_notify::__anon64::bptaddr	thread_db.h	/^    psaddr_t bptaddr;		\/* Address of breakpoint.  *\/$/;"	m	union:td_notify::__anon64	access:public
td_notify::__anon64::syscallno	thread_db.h	/^    int syscallno;		\/* Number of system call used.  *\/$/;"	m	union:td_notify::__anon64	access:public
td_notify::type	thread_db.h	/^  td_notify_e type;		\/* Way the event is reported.  *\/$/;"	m	struct:td_notify	access:public
td_notify::u	thread_db.h	/^  } u;$/;"	m	struct:td_notify	typeref:union:td_notify::__anon64	access:public
td_notify_e	thread_db.h	/^} td_notify_e;$/;"	t	typeref:enum:__anon63
td_notify_t	thread_db.h	/^} td_notify_t;$/;"	t	typeref:struct:td_notify
td_symbol_list	thread_db.h	/^extern const char **td_symbol_list (void);$/;"	p	signature:(void)
td_ta_clear_event	thread_db.h	/^extern td_err_e td_ta_clear_event (const td_thragent_t *__ta,$/;"	p	signature:(const td_thragent_t *__ta, td_thr_events_t *__event)
td_ta_delete	thread_db.h	/^extern td_err_e td_ta_delete (td_thragent_t *__ta);$/;"	p	signature:(td_thragent_t *__ta)
td_ta_enable_stats	thread_db.h	/^extern td_err_e td_ta_enable_stats (const td_thragent_t *__ta, int __enable);$/;"	p	signature:(const td_thragent_t *__ta, int __enable)
td_ta_event_addr	thread_db.h	/^extern td_err_e td_ta_event_addr (const td_thragent_t *__ta,$/;"	p	signature:(const td_thragent_t *__ta, td_event_e __event, td_notify_t *__ptr)
td_ta_event_getmsg	thread_db.h	/^extern td_err_e td_ta_event_getmsg (const td_thragent_t *__ta,$/;"	p	signature:(const td_thragent_t *__ta, td_event_msg_t *__msg)
td_ta_get_nthreads	thread_db.h	/^extern td_err_e td_ta_get_nthreads (const td_thragent_t *__ta, int *__np);$/;"	p	signature:(const td_thragent_t *__ta, int *__np)
td_ta_get_ph	thread_db.h	/^extern td_err_e td_ta_get_ph (const td_thragent_t *__ta,$/;"	p	signature:(const td_thragent_t *__ta, struct ps_prochandle **__ph)
td_ta_get_stats	thread_db.h	/^extern td_err_e td_ta_get_stats (const td_thragent_t *__ta,$/;"	p	signature:(const td_thragent_t *__ta, td_ta_stats_t *__statsp)
td_ta_map_id2thr	thread_db.h	/^extern td_err_e td_ta_map_id2thr (const td_thragent_t *__ta, pthread_t __pt,$/;"	p	signature:(const td_thragent_t *__ta, pthread_t __pt, td_thrhandle_t *__th)
td_ta_map_lwp2thr	thread_db.h	/^extern td_err_e td_ta_map_lwp2thr (const td_thragent_t *__ta, lwpid_t __lwpid,$/;"	p	signature:(const td_thragent_t *__ta, lwpid_t __lwpid, td_thrhandle_t *__th)
td_ta_new	thread_db.h	/^extern td_err_e td_ta_new (struct ps_prochandle *__ps, td_thragent_t **__ta);$/;"	p	signature:(struct ps_prochandle *__ps, td_thragent_t **__ta)
td_ta_reset_stats	thread_db.h	/^extern td_err_e td_ta_reset_stats (const td_thragent_t *__ta);$/;"	p	signature:(const td_thragent_t *__ta)
td_ta_set_event	thread_db.h	/^extern td_err_e td_ta_set_event (const td_thragent_t *__ta,$/;"	p	signature:(const td_thragent_t *__ta, td_thr_events_t *__event)
td_ta_setconcurrency	thread_db.h	/^extern td_err_e td_ta_setconcurrency (const td_thragent_t *__ta, int __level);$/;"	p	signature:(const td_thragent_t *__ta, int __level)
td_ta_stats	thread_db.h	/^typedef struct td_ta_stats$/;"	s
td_ta_stats::a_concurrency_den	thread_db.h	/^  int a_concurrency_den;	\/* Achieved concurrency level, denominator.  *\/$/;"	m	struct:td_ta_stats	access:public
td_ta_stats::a_concurrency_num	thread_db.h	/^  int a_concurrency_num;	\/* Achieved concurrency level, numerator.  *\/$/;"	m	struct:td_ta_stats	access:public
td_ta_stats::nidle_den	thread_db.h	/^  int nidle_den;		\/* Average number of idling processes,$/;"	m	struct:td_ta_stats	access:public
td_ta_stats::nidle_num	thread_db.h	/^  int nidle_num;		\/* Average number of idling processes,$/;"	m	struct:td_ta_stats	access:public
td_ta_stats::nlwps_den	thread_db.h	/^  int nlwps_den;		\/* Average number of processes in use,$/;"	m	struct:td_ta_stats	access:public
td_ta_stats::nlwps_num	thread_db.h	/^  int nlwps_num;		\/* Average number of processes in use,$/;"	m	struct:td_ta_stats	access:public
td_ta_stats::nrunnable_den	thread_db.h	/^  int nrunnable_den;		\/* Average runnable threads, denominator.  *\/$/;"	m	struct:td_ta_stats	access:public
td_ta_stats::nrunnable_num	thread_db.h	/^  int nrunnable_num;		\/* Average runnable threads, numerator.  *\/$/;"	m	struct:td_ta_stats	access:public
td_ta_stats::nthreads	thread_db.h	/^  int nthreads;       		\/* Total number of threads in use.  *\/$/;"	m	struct:td_ta_stats	access:public
td_ta_stats::r_concurrency	thread_db.h	/^  int r_concurrency;		\/* Concurrency level requested by user.  *\/$/;"	m	struct:td_ta_stats	access:public
td_ta_stats_t	thread_db.h	/^} td_ta_stats_t;$/;"	t	typeref:struct:td_ta_stats
td_ta_thr_iter	thread_db.h	/^extern td_err_e td_ta_thr_iter (const td_thragent_t *__ta,$/;"	p	signature:(const td_thragent_t *__ta, td_thr_iter_f *__callback, void *__cbdata_p, td_thr_state_e __state, int __ti_pri, sigset_t *__ti_sigmask_p, unsigned int __ti_user_flags)
td_ta_tsd_iter	thread_db.h	/^extern td_err_e td_ta_tsd_iter (const td_thragent_t *__ta, td_key_iter_f *__ki,$/;"	p	signature:(const td_thragent_t *__ta, td_key_iter_f *__ki, void *__p)
td_thr_clear_event	thread_db.h	/^extern td_err_e td_thr_clear_event (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, td_thr_events_t *__event)
td_thr_dbresume	thread_db.h	/^extern td_err_e td_thr_dbresume (const td_thrhandle_t *__th);$/;"	p	signature:(const td_thrhandle_t *__th)
td_thr_dbsuspend	thread_db.h	/^extern td_err_e td_thr_dbsuspend (const td_thrhandle_t *__th);$/;"	p	signature:(const td_thrhandle_t *__th)
td_thr_event_enable	thread_db.h	/^extern td_err_e td_thr_event_enable (const td_thrhandle_t *__th, int __event);$/;"	p	signature:(const td_thrhandle_t *__th, int __event)
td_thr_event_getmsg	thread_db.h	/^extern td_err_e td_thr_event_getmsg (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, td_event_msg_t *__msg)
td_thr_events	thread_db.h	/^typedef struct td_thr_events$/;"	s
td_thr_events::event_bits	thread_db.h	/^  uint32_t event_bits[TD_EVENTSIZE];$/;"	m	struct:td_thr_events	access:public
td_thr_events_t	thread_db.h	/^} td_thr_events_t;$/;"	t	typeref:struct:td_thr_events
td_thr_get_info	thread_db.h	/^extern td_err_e td_thr_get_info (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, td_thrinfo_t *__infop)
td_thr_getfpregs	thread_db.h	/^extern td_err_e td_thr_getfpregs (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, prfpregset_t *__regset)
td_thr_getgregs	thread_db.h	/^extern td_err_e td_thr_getgregs (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, prgregset_t __gregs)
td_thr_getxregs	thread_db.h	/^extern td_err_e td_thr_getxregs (const td_thrhandle_t *__th, void *__xregs);$/;"	p	signature:(const td_thrhandle_t *__th, void *__xregs)
td_thr_getxregsize	thread_db.h	/^extern td_err_e td_thr_getxregsize (const td_thrhandle_t *__th, int *__sizep);$/;"	p	signature:(const td_thrhandle_t *__th, int *__sizep)
td_thr_iter_f	thread_db.h	/^typedef int td_thr_iter_f (const td_thrhandle_t *, void *);$/;"	t
td_thr_set_event	thread_db.h	/^extern td_err_e td_thr_set_event (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, td_thr_events_t *__event)
td_thr_setfpregs	thread_db.h	/^extern td_err_e td_thr_setfpregs (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, const prfpregset_t *__fpregs)
td_thr_setgregs	thread_db.h	/^extern td_err_e td_thr_setgregs (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, prgregset_t __gregs)
td_thr_setprio	thread_db.h	/^extern td_err_e td_thr_setprio (const td_thrhandle_t *__th, int __prio);$/;"	p	signature:(const td_thrhandle_t *__th, int __prio)
td_thr_setsigpending	thread_db.h	/^extern td_err_e td_thr_setsigpending (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, unsigned char __n, const sigset_t *__ss)
td_thr_setxregs	thread_db.h	/^extern td_err_e td_thr_setxregs (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, const void *__addr)
td_thr_sigsetmask	thread_db.h	/^extern td_err_e td_thr_sigsetmask (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, const sigset_t *__ss)
td_thr_state_e	thread_db.h	/^} td_thr_state_e;$/;"	t	typeref:enum:__anon60
td_thr_tls_get_addr	thread_db.h	/^extern td_err_e td_thr_tls_get_addr (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, psaddr_t __map_address, size_t __offset, psaddr_t *__address)
td_thr_tlsbase	thread_db.h	/^extern td_err_e td_thr_tlsbase (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, unsigned long int __modid, psaddr_t *__base)
td_thr_tsd	thread_db.h	/^extern td_err_e td_thr_tsd (const td_thrhandle_t *__th,$/;"	p	signature:(const td_thrhandle_t *__th, const thread_key_t __tk, void **__data)
td_thr_type_e	thread_db.h	/^} td_thr_type_e;$/;"	t	typeref:enum:__anon61
td_thr_validate	thread_db.h	/^extern td_err_e td_thr_validate (const td_thrhandle_t *__th);$/;"	p	signature:(const td_thrhandle_t *__th)
td_thragent_t	thread_db.h	/^typedef struct td_thragent td_thragent_t;$/;"	t	typeref:struct:td_thragent
td_thrhandle	thread_db.h	/^typedef struct td_thrhandle$/;"	s
td_thrhandle::th_ta_p	thread_db.h	/^  td_thragent_t *th_ta_p;$/;"	m	struct:td_thrhandle	access:public
td_thrhandle::th_unique	thread_db.h	/^  psaddr_t th_unique;$/;"	m	struct:td_thrhandle	access:public
td_thrhandle_t	thread_db.h	/^} td_thrhandle_t;$/;"	t	typeref:struct:td_thrhandle
td_thrinfo	thread_db.h	/^typedef struct td_thrinfo$/;"	s
td_thrinfo::ti_db_suspended	thread_db.h	/^  unsigned char ti_db_suspended;	\/* Nonzero if suspended by debugger. *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_events	thread_db.h	/^  td_thr_events_t ti_events;		\/* Set of enabled events.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_flags	thread_db.h	/^  short int ti_flags;			\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_lid	thread_db.h	/^  lwpid_t ti_lid;			\/* Kernel PID for this thread.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_pc	thread_db.h	/^  intptr_t ti_pc;			\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_pending	thread_db.h	/^  sigset_t ti_pending;			\/* Set of pending signals.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_pirecflag	thread_db.h	/^  unsigned char ti_pirecflag;		\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_preemptflag	thread_db.h	/^  unsigned char ti_preemptflag;		\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_pri	thread_db.h	/^  int ti_pri;				\/* Thread priority.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_ro_area	thread_db.h	/^  psaddr_t ti_ro_area;			\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_ro_size	thread_db.h	/^  int ti_ro_size;			\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_sigmask	thread_db.h	/^  sigset_t ti_sigmask;			\/* Signal mask.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_sp	thread_db.h	/^  intptr_t ti_sp;			\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_startfunc	thread_db.h	/^  psaddr_t ti_startfunc;		\/* Start function passed to$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_state	thread_db.h	/^  td_thr_state_e ti_state;		\/* Thread state.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_stkbase	thread_db.h	/^  psaddr_t ti_stkbase;			\/* Base of thread's stack.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_stksize	thread_db.h	/^  long int ti_stksize;			\/* Size of thread's stack.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_ta_p	thread_db.h	/^  td_thragent_t *ti_ta_p;		\/* Process handle.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_tid	thread_db.h	/^  thread_t ti_tid;			\/* Thread ID returned by$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_tls	thread_db.h	/^  char *ti_tls;				\/* Pointer to thread-local data.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_traceme	thread_db.h	/^  unsigned char ti_traceme;		\/* Nonzero if event reporting$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_type	thread_db.h	/^  td_thr_type_e ti_type;		\/* Type of the thread (system vs$/;"	m	struct:td_thrinfo	access:public
td_thrinfo::ti_user_flags	thread_db.h	/^  unsigned int ti_user_flags;		\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
td_thrinfo_t	thread_db.h	/^} td_thrinfo_t;$/;"	t	typeref:struct:td_thrinfo
tdelete	search.h	/^extern void *tdelete (__const void *__restrict __key,$/;"	p	signature:(__const void *__restrict __key, void **__restrict __rootp, __compar_fn_t __compar)
tdestroy	search.h	/^extern void tdestroy (void *__root, __free_fn_t __freefct);$/;"	p	signature:(void *__root, __free_fn_t __freefct)
temp	obstack.h	/^  } temp;			\/* Temporary for some macros.  *\/$/;"	m	struct:obstack	typeref:union:obstack::__anon81	access:public
tempint	obstack.h	/^    PTR_INT_TYPE tempint;$/;"	m	union:obstack::__anon81	access:public
tempptr	obstack.h	/^    void *tempptr;$/;"	m	union:obstack::__anon81	access:public
text	zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s	access:public
tfind	search.h	/^extern void *tfind (__const void *__key, void *__const *__rootp,$/;"	p	signature:(__const void *__key, void *__const *__rootp, __compar_fn_t __compar)
tgamma	tgmath.h	389;"	d
th_p	thread_db.h	/^  const td_thrhandle_t *th_p;	\/* Thread reporting the event.  *\/$/;"	m	struct:td_event_msg	access:public
th_ta_p	thread_db.h	/^  td_thragent_t *th_ta_p;$/;"	m	struct:td_thrhandle	access:public
th_unique	thread_db.h	/^  psaddr_t th_unique;$/;"	m	struct:td_thrhandle	access:public
thousands_sep	locale.h	/^  char *thousands_sep;		\/* Thousands separator.  *\/$/;"	m	struct:lconv	access:public
thread_key_t	thread_db.h	/^typedef pthread_key_t thread_key_t;$/;"	t
thread_t	thread_db.h	/^typedef pthread_t thread_t;$/;"	t
ti_db_suspended	thread_db.h	/^  unsigned char ti_db_suspended;	\/* Nonzero if suspended by debugger. *\/$/;"	m	struct:td_thrinfo	access:public
ti_events	thread_db.h	/^  td_thr_events_t ti_events;		\/* Set of enabled events.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_flags	thread_db.h	/^  short int ti_flags;			\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_lid	thread_db.h	/^  lwpid_t ti_lid;			\/* Kernel PID for this thread.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_pc	thread_db.h	/^  intptr_t ti_pc;			\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_pending	thread_db.h	/^  sigset_t ti_pending;			\/* Set of pending signals.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_pirecflag	thread_db.h	/^  unsigned char ti_pirecflag;		\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_preemptflag	thread_db.h	/^  unsigned char ti_preemptflag;		\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_pri	thread_db.h	/^  int ti_pri;				\/* Thread priority.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_ro_area	thread_db.h	/^  psaddr_t ti_ro_area;			\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_ro_size	thread_db.h	/^  int ti_ro_size;			\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_sigmask	thread_db.h	/^  sigset_t ti_sigmask;			\/* Signal mask.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_sp	thread_db.h	/^  intptr_t ti_sp;			\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_startfunc	thread_db.h	/^  psaddr_t ti_startfunc;		\/* Start function passed to$/;"	m	struct:td_thrinfo	access:public
ti_state	thread_db.h	/^  td_thr_state_e ti_state;		\/* Thread state.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_stkbase	thread_db.h	/^  psaddr_t ti_stkbase;			\/* Base of thread's stack.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_stksize	thread_db.h	/^  long int ti_stksize;			\/* Size of thread's stack.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_ta_p	thread_db.h	/^  td_thragent_t *ti_ta_p;		\/* Process handle.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_tid	thread_db.h	/^  thread_t ti_tid;			\/* Thread ID returned by$/;"	m	struct:td_thrinfo	access:public
ti_tls	thread_db.h	/^  char *ti_tls;				\/* Pointer to thread-local data.  *\/$/;"	m	struct:td_thrinfo	access:public
ti_traceme	thread_db.h	/^  unsigned char ti_traceme;		\/* Nonzero if event reporting$/;"	m	struct:td_thrinfo	access:public
ti_type	thread_db.h	/^  td_thr_type_e ti_type;		\/* Type of the thread (system vs$/;"	m	struct:td_thrinfo	access:public
ti_user_flags	thread_db.h	/^  unsigned int ti_user_flags;		\/* Unused.  *\/$/;"	m	struct:td_thrinfo	access:public
time	zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s	access:public
time_t	time.h	/^typedef __time_t time_t;$/;"	t
timer_t	time.h	/^typedef __timer_t timer_t;$/;"	t
timespec	time.h	/^struct timespec$/;"	s
timespec::tv_nsec	time.h	/^    long int tv_nsec;		\/* Nanoseconds.  *\/$/;"	m	struct:timespec	access:public
timespec::tv_sec	time.h	/^    __time_t tv_sec;		\/* Seconds.  *\/$/;"	m	struct:timespec	access:public
tm	time.h	/^struct tm$/;"	s
tm::__tm_gmtoff	time.h	/^  long int __tm_gmtoff;		\/* Seconds east of UTC.  *\/$/;"	m	struct:tm	access:public
tm::__tm_zone	time.h	/^  __const char *__tm_zone;	\/* Timezone abbreviation.  *\/$/;"	m	struct:tm	access:public
tm::tm_gmtoff	time.h	/^  long int tm_gmtoff;		\/* Seconds east of UTC.  *\/$/;"	m	struct:tm	access:public
tm::tm_hour	time.h	/^  int tm_hour;			\/* Hours.	[0-23] *\/$/;"	m	struct:tm	access:public
tm::tm_isdst	time.h	/^  int tm_isdst;			\/* DST.		[-1\/0\/1]*\/$/;"	m	struct:tm	access:public
tm::tm_mday	time.h	/^  int tm_mday;			\/* Day.		[1-31] *\/$/;"	m	struct:tm	access:public
tm::tm_min	time.h	/^  int tm_min;			\/* Minutes.	[0-59] *\/$/;"	m	struct:tm	access:public
tm::tm_mon	time.h	/^  int tm_mon;			\/* Month.	[0-11] *\/$/;"	m	struct:tm	access:public
tm::tm_sec	time.h	/^  int tm_sec;			\/* Seconds.	[0-60] (1 leap second) *\/$/;"	m	struct:tm	access:public
tm::tm_wday	time.h	/^  int tm_wday;			\/* Day of week.	[0-6] *\/$/;"	m	struct:tm	access:public
tm::tm_yday	time.h	/^  int tm_yday;			\/* Days in year.[0-365]	*\/$/;"	m	struct:tm	access:public
tm::tm_year	time.h	/^  int tm_year;			\/* Year	- 1900.  *\/$/;"	m	struct:tm	access:public
tm::tm_zone	time.h	/^  __const char *tm_zone;	\/* Timezone abbreviation.  *\/$/;"	m	struct:tm	access:public
tm_gmtoff	time.h	/^  long int tm_gmtoff;		\/* Seconds east of UTC.  *\/$/;"	m	struct:tm	access:public
tm_hour	time.h	/^  int tm_hour;			\/* Hours.	[0-23] *\/$/;"	m	struct:tm	access:public
tm_isdst	time.h	/^  int tm_isdst;			\/* DST.		[-1\/0\/1]*\/$/;"	m	struct:tm	access:public
tm_mday	time.h	/^  int tm_mday;			\/* Day.		[1-31] *\/$/;"	m	struct:tm	access:public
tm_min	time.h	/^  int tm_min;			\/* Minutes.	[0-59] *\/$/;"	m	struct:tm	access:public
tm_mon	time.h	/^  int tm_mon;			\/* Month.	[0-11] *\/$/;"	m	struct:tm	access:public
tm_sec	time.h	/^  int tm_sec;			\/* Seconds.	[0-60] (1 leap second) *\/$/;"	m	struct:tm	access:public
tm_wday	time.h	/^  int tm_wday;			\/* Day of week.	[0-6] *\/$/;"	m	struct:tm	access:public
tm_yday	time.h	/^  int tm_yday;			\/* Days in year.[0-365]	*\/$/;"	m	struct:tm	access:public
tm_year	time.h	/^  int tm_year;			\/* Year	- 1900.  *\/$/;"	m	struct:tm	access:public
tm_zone	time.h	/^  __const char *tm_zone;	\/* Timezone abbreviation.  *\/$/;"	m	struct:tm	access:public
toascii	ctype.h	210;"	d
toascii_l	ctype.h	316;"	d
tolower	ctype.h	/^__NTH (tolower (int __c))$/;"	f	signature:(int __c)
tolower	ctype.h	204;"	d
tolower_l	ctype.h	275;"	d
total_in	zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s	access:public
total_out	zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s	access:public
toupper	ctype.h	/^__NTH (toupper (int __c))$/;"	f	signature:(int __c)
toupper	ctype.h	205;"	d
toupper_l	ctype.h	276;"	d
trunc	tgmath.h	364;"	d
truncate	unistd.h	1015;"	d
tsearch	search.h	/^extern void *tsearch (__const void *__key, void **__rootp,$/;"	p	signature:(__const void *__key, void **__rootp, __compar_fn_t __compar)
ttyent	ttyent.h	/^struct ttyent {$/;"	s
ttyent::ty_comment	ttyent.h	/^	char	*ty_comment;	\/* comment field *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_getty	ttyent.h	/^	char	*ty_getty;	\/* command to execute, usually getty *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_name	ttyent.h	/^	char	*ty_name;	\/* terminal device name *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_status	ttyent.h	/^	int	ty_status;	\/* status flags *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_type	ttyent.h	/^	char	*ty_type;	\/* terminal type for termcap *\/$/;"	m	struct:ttyent	access:public
ttyent::ty_window	ttyent.h	/^	char 	*ty_window;	\/* command to start up window manager *\/$/;"	m	struct:ttyent	access:public
tv_nsec	time.h	/^    long int tv_nsec;		\/* Nanoseconds.  *\/$/;"	m	struct:timespec	access:public
tv_sec	time.h	/^    __time_t tv_sec;		\/* Seconds.  *\/$/;"	m	struct:timespec	access:public
twalk	search.h	/^extern void twalk (__const void *__root, __action_fn_t __action);$/;"	p	signature:(__const void *__root, __action_fn_t __action)
ty_comment	ttyent.h	/^	char	*ty_comment;	\/* comment field *\/$/;"	m	struct:ttyent	access:public
ty_getty	ttyent.h	/^	char	*ty_getty;	\/* command to execute, usually getty *\/$/;"	m	struct:ttyent	access:public
ty_name	ttyent.h	/^	char	*ty_name;	\/* terminal device name *\/$/;"	m	struct:ttyent	access:public
ty_status	ttyent.h	/^	int	ty_status;	\/* status flags *\/$/;"	m	struct:ttyent	access:public
ty_type	ttyent.h	/^	char	*ty_type;	\/* terminal type for termcap *\/$/;"	m	struct:ttyent	access:public
ty_window	ttyent.h	/^	char 	*ty_window;	\/* command to start up window manager *\/$/;"	m	struct:ttyent	access:public
type	expat.h	/^  enum XML_Content_Type         type;$/;"	m	struct:XML_cp	typeref:enum:XML_cp::XML_Content_Type	access:public
type	libtasn1.h	/^    unsigned int type;		\/* Node type *\/$/;"	m	struct:node_asn_struct	access:public
type	libtasn1.h	/^    unsigned int type;		\/* Node type *\/$/;"	m	struct:static_struct_asn	access:public
type	math.h	/^    int type;$/;"	m	struct:__exception	access:public
type	thread_db.h	/^  td_notify_e type;		\/* Way the event is reported.  *\/$/;"	m	struct:td_notify	access:public
u	thread_db.h	/^  } u;$/;"	m	struct:td_notify	typeref:union:td_notify::__anon64	access:public
uInt	zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uInt	zconf.h	105;"	d
uIntf	zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uIntf	zconf.h	106;"	d
uLong	zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLong	zconf.h	107;"	d
uLongf	zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uLongf	zconf.h	108;"	d
uid_t	pwd.h	/^typedef __uid_t uid_t;$/;"	t
uid_t	signal.h	/^typedef __uid_t uid_t;$/;"	t
uid_t	stropts.h	/^typedef __uid_t uid_t;$/;"	t
uid_t	unistd.h	/^typedef __uid_t uid_t;$/;"	t
uint16_t	stdint.h	/^typedef unsigned short int	uint16_t;$/;"	t
uint32_t	stdint.h	/^typedef unsigned int		uint32_t;$/;"	t
uint64_t	stdint.h	/^typedef unsigned long int	uint64_t;$/;"	t
uint64_t	stdint.h	/^typedef unsigned long long int	uint64_t;$/;"	t
uint8_t	stdint.h	/^typedef unsigned char		uint8_t;$/;"	t
uint_fast16_t	stdint.h	/^typedef unsigned int		uint_fast16_t;$/;"	t
uint_fast16_t	stdint.h	/^typedef unsigned long int	uint_fast16_t;$/;"	t
uint_fast32_t	stdint.h	/^typedef unsigned int		uint_fast32_t;$/;"	t
uint_fast32_t	stdint.h	/^typedef unsigned long int	uint_fast32_t;$/;"	t
uint_fast64_t	stdint.h	/^typedef unsigned long int	uint_fast64_t;$/;"	t
uint_fast64_t	stdint.h	/^typedef unsigned long long int	uint_fast64_t;$/;"	t
uint_fast8_t	stdint.h	/^typedef unsigned char		uint_fast8_t;$/;"	t
uint_least16_t	stdint.h	/^typedef unsigned short int	uint_least16_t;$/;"	t
uint_least32_t	stdint.h	/^typedef unsigned int		uint_least32_t;$/;"	t
uint_least64_t	stdint.h	/^typedef unsigned long int	uint_least64_t;$/;"	t
uint_least64_t	stdint.h	/^typedef unsigned long long int	uint_least64_t;$/;"	t
uint_least8_t	stdint.h	/^typedef unsigned char		uint_least8_t;$/;"	t
uintmax_t	stdint.h	/^typedef unsigned long int	uintmax_t;$/;"	t
uintmax_t	stdint.h	/^typedef unsigned long long int	uintmax_t;$/;"	t
uintptr_t	stdint.h	/^typedef unsigned int		uintptr_t;$/;"	t
uintptr_t	stdint.h	/^typedef unsigned long int	uintptr_t;$/;"	t
uncompress	zconf.h	85;"	d
uncompress	zlib.h	/^ZEXTERN int ZEXPORT uncompress OF((Bytef *dest,   uLongf *destLen,$/;"	p	signature:(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)
ungetc	stdio.h	/^extern int ungetc (int __c, FILE *__stream);$/;"	p	signature:(int __c, FILE *__stream)
ungetwc	wchar.h	/^extern wint_t ungetwc (wint_t __wc, __FILE *__stream);$/;"	p	signature:(wint_t __wc, __FILE *__stream)
unused	resolv.h	/^	unsigned unused:23;$/;"	m	struct:__res_state	access:public
uordblks	malloc.h	/^  int uordblks; \/* total allocated space *\/$/;"	m	struct:mallinfo	access:public
updwtmpx	utmpx.h	/^extern void updwtmpx (__const char *__wtmpx_file,$/;"	p	signature:(__const char *__wtmpx_file, __const struct utmpx *__utmpx)
use_extra_arg	obstack.h	/^  unsigned use_extra_arg:1;	\/* chunk alloc\/dealloc funcs take extra arg *\/$/;"	m	struct:obstack	access:public
useconds_t	unistd.h	/^typedef __useconds_t useconds_t;$/;"	t
user	printf.h	/^  unsigned short int user;	\/* Bits for user-installed modifiers.  *\/$/;"	m	struct:printf_info	access:public
usleep	unistd.h	/^extern int usleep (__useconds_t __useconds);$/;"	p	signature:(__useconds_t __useconds)
usmblks	malloc.h	/^  int usmblks;  \/* maximum total allocated space *\/$/;"	m	struct:mallinfo	access:public
utimbuf	utime.h	/^struct utimbuf$/;"	s
utimbuf::actime	utime.h	/^    __time_t actime;		\/* Access time.  *\/$/;"	m	struct:utimbuf	access:public
utimbuf::modtime	utime.h	/^    __time_t modtime;		\/* Modification time.  *\/$/;"	m	struct:utimbuf	access:public
utmpxname	utmpx.h	/^extern int utmpxname (__const char *__file);$/;"	p	signature:(__const char *__file)
va_list	stdio.h	/^typedef _G_va_list va_list;$/;"	t
val	getopt.h	/^  int val;$/;"	m	struct:option	access:public
value	expat.h	/^  long int              value;$/;"	m	struct:__anon50	access:public
value	libtasn1.h	/^    const void *value;		\/* Node value *\/$/;"	m	struct:static_struct_asn	access:public
value	libtasn1.h	/^    unsigned char *value;	\/* Node value *\/$/;"	m	struct:node_asn_struct	access:public
value_len	libtasn1.h	/^    int value_len;$/;"	m	struct:node_asn_struct	access:public
vd_aux	elf.h	/^  Elf32_Word	vd_aux;			\/* Offset in bytes to verdaux array *\/$/;"	m	struct:__anon103	access:public
vd_aux	elf.h	/^  Elf64_Word	vd_aux;			\/* Offset in bytes to verdaux array *\/$/;"	m	struct:__anon104	access:public
vd_cnt	elf.h	/^  Elf32_Half	vd_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon103	access:public
vd_cnt	elf.h	/^  Elf64_Half	vd_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon104	access:public
vd_flags	elf.h	/^  Elf32_Half	vd_flags;		\/* Version information *\/$/;"	m	struct:__anon103	access:public
vd_flags	elf.h	/^  Elf64_Half	vd_flags;		\/* Version information *\/$/;"	m	struct:__anon104	access:public
vd_hash	elf.h	/^  Elf32_Word	vd_hash;		\/* Version name hash value *\/$/;"	m	struct:__anon103	access:public
vd_hash	elf.h	/^  Elf64_Word	vd_hash;		\/* Version name hash value *\/$/;"	m	struct:__anon104	access:public
vd_ndx	elf.h	/^  Elf32_Half	vd_ndx;			\/* Version Index *\/$/;"	m	struct:__anon103	access:public
vd_ndx	elf.h	/^  Elf64_Half	vd_ndx;			\/* Version Index *\/$/;"	m	struct:__anon104	access:public
vd_next	elf.h	/^  Elf32_Word	vd_next;		\/* Offset in bytes to next verdef$/;"	m	struct:__anon103	access:public
vd_next	elf.h	/^  Elf64_Word	vd_next;		\/* Offset in bytes to next verdef$/;"	m	struct:__anon104	access:public
vd_version	elf.h	/^  Elf32_Half	vd_version;		\/* Version revision *\/$/;"	m	struct:__anon103	access:public
vd_version	elf.h	/^  Elf64_Half	vd_version;		\/* Version revision *\/$/;"	m	struct:__anon104	access:public
vda_name	elf.h	/^  Elf32_Word	vda_name;		\/* Version or dependency names *\/$/;"	m	struct:__anon105	access:public
vda_name	elf.h	/^  Elf64_Word	vda_name;		\/* Version or dependency names *\/$/;"	m	struct:__anon106	access:public
vda_next	elf.h	/^  Elf32_Word	vda_next;		\/* Offset in bytes to next verdaux$/;"	m	struct:__anon105	access:public
vda_next	elf.h	/^  Elf64_Word	vda_next;		\/* Offset in bytes to next verdaux$/;"	m	struct:__anon106	access:public
vdprintf	stdio.h	/^extern int vdprintf (int __fd, __const char *__restrict __fmt,$/;"	p	signature:(int __fd, __const char *__restrict __fmt, _G_va_list __arg)
verr	err.h	/^extern void verr (int __status, __const char *__format, __gnuc_va_list)$/;"	p	signature:(int __status, __const char *__format, __gnuc_va_list)
verrx	err.h	/^extern void verrx (int __status, __const char *, __gnuc_va_list)$/;"	p	signature:(int __status, __const char *, __gnuc_va_list)
versionsort	dirent.h	351;"	d
vfprintf	stdio.h	/^extern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,$/;"	p	signature:(FILE *__restrict __s, __const char *__restrict __format, _G_va_list __arg)
vfscanf	stdio.h	518;"	d
vfwprintf	wchar.h	/^extern int vfwprintf (__FILE *__restrict __s,$/;"	p	signature:(__FILE *__restrict __s, __const wchar_t *__restrict __format, __gnuc_va_list __arg)
vfwscanf	wchar.h	/^extern int vfwscanf (__FILE *__restrict __s,$/;"	p	signature:(__FILE *__restrict __s, __const wchar_t *__restrict __format, __gnuc_va_list __arg)
vfwscanf	wchar.h	728;"	d
vn_aux	elf.h	/^  Elf32_Word	vn_aux;			\/* Offset in bytes to vernaux array *\/$/;"	m	struct:__anon107	access:public
vn_aux	elf.h	/^  Elf64_Word	vn_aux;			\/* Offset in bytes to vernaux array *\/$/;"	m	struct:__anon108	access:public
vn_cnt	elf.h	/^  Elf32_Half	vn_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon107	access:public
vn_cnt	elf.h	/^  Elf64_Half	vn_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon108	access:public
vn_file	elf.h	/^  Elf32_Word	vn_file;		\/* Offset of filename for this$/;"	m	struct:__anon107	access:public
vn_file	elf.h	/^  Elf64_Word	vn_file;		\/* Offset of filename for this$/;"	m	struct:__anon108	access:public
vn_next	elf.h	/^  Elf32_Word	vn_next;		\/* Offset in bytes to next verneed$/;"	m	struct:__anon107	access:public
vn_next	elf.h	/^  Elf64_Word	vn_next;		\/* Offset in bytes to next verneed$/;"	m	struct:__anon108	access:public
vn_version	elf.h	/^  Elf32_Half	vn_version;		\/* Version of structure *\/$/;"	m	struct:__anon107	access:public
vn_version	elf.h	/^  Elf64_Half	vn_version;		\/* Version of structure *\/$/;"	m	struct:__anon108	access:public
vna_flags	elf.h	/^  Elf32_Half	vna_flags;		\/* Dependency specific information *\/$/;"	m	struct:__anon109	access:public
vna_flags	elf.h	/^  Elf64_Half	vna_flags;		\/* Dependency specific information *\/$/;"	m	struct:__anon110	access:public
vna_hash	elf.h	/^  Elf32_Word	vna_hash;		\/* Hash value of dependency name *\/$/;"	m	struct:__anon109	access:public
vna_hash	elf.h	/^  Elf64_Word	vna_hash;		\/* Hash value of dependency name *\/$/;"	m	struct:__anon110	access:public
vna_name	elf.h	/^  Elf32_Word	vna_name;		\/* Dependency name string offset *\/$/;"	m	struct:__anon109	access:public
vna_name	elf.h	/^  Elf64_Word	vna_name;		\/* Dependency name string offset *\/$/;"	m	struct:__anon110	access:public
vna_next	elf.h	/^  Elf32_Word	vna_next;		\/* Offset in bytes to next vernaux$/;"	m	struct:__anon109	access:public
vna_next	elf.h	/^  Elf64_Word	vna_next;		\/* Offset in bytes to next vernaux$/;"	m	struct:__anon110	access:public
vna_other	elf.h	/^  Elf32_Half	vna_other;		\/* Unused *\/$/;"	m	struct:__anon109	access:public
vna_other	elf.h	/^  Elf64_Half	vna_other;		\/* Unused *\/$/;"	m	struct:__anon110	access:public
voidp	zconf.h	/^   typedef Byte       *voidp;$/;"	t
voidp	zconf.h	/^   typedef void       *voidp;$/;"	t
voidp	zconf.h	109;"	d
voidp	zconf.h	110;"	d
voidpc	zconf.h	/^   typedef Byte const *voidpc;$/;"	t
voidpc	zconf.h	/^   typedef void const *voidpc;$/;"	t
voidpc	zconf.h	111;"	d
voidpc	zconf.h	112;"	d
voidpf	zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t
voidpf	zconf.h	/^   typedef void FAR   *voidpf;$/;"	t
voidpf	zconf.h	113;"	d
voidpf	zconf.h	114;"	d
vprintf	stdio.h	/^extern int vprintf (__const char *__restrict __format, _G_va_list __arg);$/;"	p	signature:(__const char *__restrict __format, _G_va_list __arg)
vscanf	stdio.h	519;"	d
vsscanf	stdio.h	520;"	d
vswscanf	wchar.h	730;"	d
vwarn	err.h	/^extern void vwarn (__const char *__format, __gnuc_va_list)$/;"	p	signature:(__const char *__format, __gnuc_va_list)
vwarnx	err.h	/^extern void vwarnx (__const char *__format, __gnuc_va_list)$/;"	p	signature:(__const char *__format, __gnuc_va_list)
vwprintf	wchar.h	/^extern int vwprintf (__const wchar_t *__restrict __format,$/;"	p	signature:(__const wchar_t *__restrict __format, __gnuc_va_list __arg)
vwscanf	wchar.h	/^extern int vwscanf (__const wchar_t *__restrict __format,$/;"	p	signature:(__const wchar_t *__restrict __format, __gnuc_va_list __arg)
vwscanf	wchar.h	729;"	d
warn	err.h	/^extern void warn (__const char *__format, ...)$/;"	p	signature:(__const char *__format, ...)
warnx	err.h	/^extern void warnx (__const char *__format, ...)$/;"	p	signature:(__const char *__format, ...)
wcstoimax	inttypes.h	/^__NTH (wcstoimax (__const __gwchar_t *__restrict nptr,$/;"	f	signature:(__const __gwchar_t *__restrict nptr, __gwchar_t **__restrict endptr, int base)
wcstoumax	inttypes.h	/^__NTH (wcstoumax (__const __gwchar_t *__restrict nptr,$/;"	f	signature:(__const __gwchar_t *__restrict nptr, __gwchar_t **__restrict endptr, int base)
wctob	wchar.h	/^__NTH (wctob (wint_t __wc))$/;"	f	signature:(wint_t __wc)
wctrans_t	wctype.h	/^typedef __const __int32_t *wctrans_t;$/;"	t
wctype_t	wctype.h	/^typedef unsigned long int wctype_t;$/;"	t
we_offs	wordexp.h	/^    size_t we_offs;		\/* Slots to reserve in `we_wordv'.  *\/$/;"	m	struct:__anon70	access:public
we_wordc	wordexp.h	/^    size_t we_wordc;		\/* Count of words matched.  *\/$/;"	m	struct:__anon70	access:public
we_wordv	wordexp.h	/^    char **we_wordv;		\/* List of expanded words.  *\/$/;"	m	struct:__anon70	access:public
wide	printf.h	/^  unsigned int wide:1;		\/* Nonzero for wide character streams.  *\/$/;"	m	struct:printf_info	access:public
width	printf.h	/^  int width;			\/* Width.  *\/$/;"	m	struct:printf_info	access:public
wint_t	wchar.h	/^typedef __WINT_TYPE__ wint_t;$/;"	t
wint_t	wchar.h	/^typedef unsigned int wint_t;$/;"	t
wordexp	wordexp.h	/^extern int wordexp (__const char *__restrict __words,$/;"	p	signature:(__const char *__restrict __words, wordexp_t *__restrict __pwordexp, int __flags)
wordexp_t	wordexp.h	/^  } wordexp_t;$/;"	t	typeref:struct:__anon70
wprintf	wchar.h	/^extern int wprintf (__const wchar_t *__restrict __format, ...)$/;"	p	signature:(__const wchar_t *__restrict __format, ...)
write	libio.h	/^  __io_write_fn *write;		\/* Write bytes.  *\/$/;"	m	struct:__anon130	access:public
wscanf	wchar.h	/^extern int wscanf (__const wchar_t *__restrict __format, ...)$/;"	p	signature:(__const wchar_t *__restrict __format, ...)
wscanf	wchar.h	673;"	d
xerror	gettext-po.h	/^  void (*xerror) (int severity,$/;"	m	struct:po_xerror_handler	access:public
xerror2	gettext-po.h	/^  void (*xerror2) (int severity,$/;"	m	struct:po_xerror_handler	access:public
xflags	zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s	access:public
yyFlexLexer	FlexLexer.h	/^	yyFlexLexer( FLEX_STD istream* arg_yyin = 0, FLEX_STD ostream* arg_yyout = 0 );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* arg_yyin = 0, FLEX_STD ostream* arg_yyout = 0 )
yyFlexLexer	FlexLexer.h	/^class yyFlexLexer : public FlexLexer {$/;"	c	inherits:FlexLexer
yyFlexLexer::LexerError	FlexLexer.h	/^	virtual void LexerError( const char* msg );$/;"	p	class:yyFlexLexer	access:protected	signature:( const char* msg )
yyFlexLexer::LexerInput	FlexLexer.h	/^	virtual int LexerInput( char* buf, int max_size );$/;"	p	class:yyFlexLexer	access:protected	signature:( char* buf, int max_size )
yyFlexLexer::LexerOutput	FlexLexer.h	/^	virtual void LexerOutput( const char* buf, int size );$/;"	p	class:yyFlexLexer	access:protected	signature:( const char* buf, int size )
yyFlexLexer::switch_streams	FlexLexer.h	/^	virtual void switch_streams( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )
yyFlexLexer::yyFlexLexer	FlexLexer.h	/^	yyFlexLexer( FLEX_STD istream* arg_yyin = 0, FLEX_STD ostream* arg_yyout = 0 );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* arg_yyin = 0, FLEX_STD ostream* arg_yyout = 0 )
yyFlexLexer::yy_buffer_stack	FlexLexer.h	/^	struct yy_buffer_state ** yy_buffer_stack; \/**< Stack as an array. *\/$/;"	m	class:yyFlexLexer	typeref:struct:yyFlexLexer::yy_buffer_state	access:protected
yyFlexLexer::yy_buffer_stack_max	FlexLexer.h	/^	size_t yy_buffer_stack_max; \/**< capacity of stack. *\/$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_buffer_stack_top	FlexLexer.h	/^	size_t yy_buffer_stack_top; \/**< index of top of stack. *\/$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_c_buf_p	FlexLexer.h	/^	char* yy_c_buf_p;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_create_buffer	FlexLexer.h	/^	struct yy_buffer_state* yy_create_buffer( FLEX_STD istream* s, int size );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* s, int size )
yyFlexLexer::yy_delete_buffer	FlexLexer.h	/^	void yy_delete_buffer( struct yy_buffer_state* b );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* b )
yyFlexLexer::yy_did_buffer_switch_on_eof	FlexLexer.h	/^	int yy_did_buffer_switch_on_eof;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_flush_buffer	FlexLexer.h	/^	void yy_flush_buffer( struct yy_buffer_state* b );$/;"	p	class:yyFlexLexer	access:protected	signature:( struct yy_buffer_state* b )
yyFlexLexer::yy_full_lp	FlexLexer.h	/^	int yy_full_lp;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_full_match	FlexLexer.h	/^	char* yy_full_match;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_full_state	FlexLexer.h	/^	int* yy_full_state;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_get_next_buffer	FlexLexer.h	/^	int yy_get_next_buffer();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yy_get_previous_state	FlexLexer.h	/^	yy_state_type yy_get_previous_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yy_hold_char	FlexLexer.h	/^	char yy_hold_char;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_init	FlexLexer.h	/^	int yy_init;		\/\/ whether we need to initialize$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_init_buffer	FlexLexer.h	/^	void yy_init_buffer( struct yy_buffer_state* b, FLEX_STD istream* s );$/;"	p	class:yyFlexLexer	access:protected	signature:( struct yy_buffer_state* b, FLEX_STD istream* s )
yyFlexLexer::yy_last_accepting_cpos	FlexLexer.h	/^	char* yy_last_accepting_cpos;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_last_accepting_state	FlexLexer.h	/^	yy_state_type yy_last_accepting_state;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_load_buffer_state	FlexLexer.h	/^	void yy_load_buffer_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yy_looking_for_trail_begin	FlexLexer.h	/^	int yy_looking_for_trail_begin;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_lp	FlexLexer.h	/^	int yy_lp;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_more_flag	FlexLexer.h	/^	int yy_more_flag;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_more_len	FlexLexer.h	/^	int yy_more_len;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_more_offset	FlexLexer.h	/^	int yy_more_offset;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_n_chars	FlexLexer.h	/^	int yy_n_chars;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_pop_state	FlexLexer.h	/^	void yy_pop_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yy_prev_more_offset	FlexLexer.h	/^	int yy_prev_more_offset;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_push_state	FlexLexer.h	/^	void yy_push_state( int new_state );$/;"	p	class:yyFlexLexer	access:protected	signature:( int new_state )
yyFlexLexer::yy_start	FlexLexer.h	/^	int yy_start;		\/\/ start state number$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_start_stack	FlexLexer.h	/^	int* yy_start_stack;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_start_stack_depth	FlexLexer.h	/^	int yy_start_stack_depth;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_start_stack_ptr	FlexLexer.h	/^	int yy_start_stack_ptr;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_state_buf	FlexLexer.h	/^	yy_state_type* yy_state_buf;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_state_ptr	FlexLexer.h	/^	yy_state_type* yy_state_ptr;$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yy_switch_to_buffer	FlexLexer.h	/^	void yy_switch_to_buffer( struct yy_buffer_state* new_buffer );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
yyFlexLexer::yy_top_state	FlexLexer.h	/^	int yy_top_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yy_try_NUL_trans	FlexLexer.h	/^	yy_state_type yy_try_NUL_trans( yy_state_type current_state );$/;"	p	class:yyFlexLexer	access:protected	signature:( yy_state_type current_state )
yyFlexLexer::yyensure_buffer_stack	FlexLexer.h	/^	void yyensure_buffer_stack(void);$/;"	p	class:yyFlexLexer	access:protected	signature:(void)
yyFlexLexer::yyin	FlexLexer.h	/^	FLEX_STD istream* yyin;	\/\/ input source for default LexerInput$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yyinput	FlexLexer.h	/^	int yyinput();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyFlexLexer::yylex	FlexLexer.h	/^	virtual int yylex();$/;"	p	class:yyFlexLexer	access:public	signature:()
yyFlexLexer::yyout	FlexLexer.h	/^	FLEX_STD ostream* yyout;	\/\/ output sink for default LexerOutput$/;"	m	class:yyFlexLexer	access:protected
yyFlexLexer::yypop_buffer_state	FlexLexer.h	/^	void yypop_buffer_state();$/;"	p	class:yyFlexLexer	access:public	signature:()
yyFlexLexer::yypush_buffer_state	FlexLexer.h	/^	void yypush_buffer_state( struct yy_buffer_state* new_buffer );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
yyFlexLexer::yyrestart	FlexLexer.h	/^	void yyrestart( FLEX_STD istream* s );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* s )
yyFlexLexer::yyunput	FlexLexer.h	/^	void yyunput( int c, char* buf_ptr );$/;"	p	class:yyFlexLexer	access:protected	signature:( int c, char* buf_ptr )
yyFlexLexer::yywrap	FlexLexer.h	/^	virtual int yywrap();$/;"	p	class:yyFlexLexer	access:public	signature:()
yyFlexLexer::~yyFlexLexer	FlexLexer.h	/^	virtual ~yyFlexLexer();$/;"	p	class:yyFlexLexer	access:public	signature:()
yyFlexLexerOnce	FlexLexer.h	108;"	d
yy_buffer_stack	FlexLexer.h	/^	struct yy_buffer_state ** yy_buffer_stack; \/**< Stack as an array. *\/$/;"	m	class:yyFlexLexer	typeref:struct:yyFlexLexer::yy_buffer_state	access:protected
yy_buffer_stack_max	FlexLexer.h	/^	size_t yy_buffer_stack_max; \/**< capacity of stack. *\/$/;"	m	class:yyFlexLexer	access:protected
yy_buffer_stack_top	FlexLexer.h	/^	size_t yy_buffer_stack_top; \/**< index of top of stack. *\/$/;"	m	class:yyFlexLexer	access:protected
yy_c_buf_p	FlexLexer.h	/^	char* yy_c_buf_p;$/;"	m	class:yyFlexLexer	access:protected
yy_create_buffer	FlexLexer.h	/^		yy_create_buffer( FLEX_STD istream* s, int size ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* s, int size )
yy_create_buffer	FlexLexer.h	/^	struct yy_buffer_state* yy_create_buffer( FLEX_STD istream* s, int size );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* s, int size )
yy_delete_buffer	FlexLexer.h	/^	virtual void yy_delete_buffer( struct yy_buffer_state* b ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( struct yy_buffer_state* b )
yy_delete_buffer	FlexLexer.h	/^	void yy_delete_buffer( struct yy_buffer_state* b );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* b )
yy_did_buffer_switch_on_eof	FlexLexer.h	/^	int yy_did_buffer_switch_on_eof;$/;"	m	class:yyFlexLexer	access:protected
yy_flex_debug	FlexLexer.h	/^	int yy_flex_debug;	\/\/ only has effect with -d or "%option debug"$/;"	m	class:FlexLexer	access:protected
yy_flush_buffer	FlexLexer.h	/^	void yy_flush_buffer( struct yy_buffer_state* b );$/;"	p	class:yyFlexLexer	access:protected	signature:( struct yy_buffer_state* b )
yy_full_lp	FlexLexer.h	/^	int yy_full_lp;$/;"	m	class:yyFlexLexer	access:protected
yy_full_match	FlexLexer.h	/^	char* yy_full_match;$/;"	m	class:yyFlexLexer	access:protected
yy_full_state	FlexLexer.h	/^	int* yy_full_state;$/;"	m	class:yyFlexLexer	access:protected
yy_get_next_buffer	FlexLexer.h	/^	int yy_get_next_buffer();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yy_get_previous_state	FlexLexer.h	/^	yy_state_type yy_get_previous_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yy_hold_char	FlexLexer.h	/^	char yy_hold_char;$/;"	m	class:yyFlexLexer	access:protected
yy_init	FlexLexer.h	/^	int yy_init;		\/\/ whether we need to initialize$/;"	m	class:yyFlexLexer	access:protected
yy_init_buffer	FlexLexer.h	/^	void yy_init_buffer( struct yy_buffer_state* b, FLEX_STD istream* s );$/;"	p	class:yyFlexLexer	access:protected	signature:( struct yy_buffer_state* b, FLEX_STD istream* s )
yy_last_accepting_cpos	FlexLexer.h	/^	char* yy_last_accepting_cpos;$/;"	m	class:yyFlexLexer	access:protected
yy_last_accepting_state	FlexLexer.h	/^	yy_state_type yy_last_accepting_state;$/;"	m	class:yyFlexLexer	access:protected
yy_load_buffer_state	FlexLexer.h	/^	void yy_load_buffer_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yy_looking_for_trail_begin	FlexLexer.h	/^	int yy_looking_for_trail_begin;$/;"	m	class:yyFlexLexer	access:protected
yy_lp	FlexLexer.h	/^	int yy_lp;$/;"	m	class:yyFlexLexer	access:protected
yy_more_flag	FlexLexer.h	/^	int yy_more_flag;$/;"	m	class:yyFlexLexer	access:protected
yy_more_len	FlexLexer.h	/^	int yy_more_len;$/;"	m	class:yyFlexLexer	access:protected
yy_more_offset	FlexLexer.h	/^	int yy_more_offset;$/;"	m	class:yyFlexLexer	access:protected
yy_n_chars	FlexLexer.h	/^	int yy_n_chars;$/;"	m	class:yyFlexLexer	access:protected
yy_pop_state	FlexLexer.h	/^	void yy_pop_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yy_prev_more_offset	FlexLexer.h	/^	int yy_prev_more_offset;$/;"	m	class:yyFlexLexer	access:protected
yy_push_state	FlexLexer.h	/^	void yy_push_state( int new_state );$/;"	p	class:yyFlexLexer	access:protected	signature:( int new_state )
yy_start	FlexLexer.h	/^	int yy_start;		\/\/ start state number$/;"	m	class:yyFlexLexer	access:protected
yy_start_stack	FlexLexer.h	/^	int* yy_start_stack;$/;"	m	class:yyFlexLexer	access:protected
yy_start_stack_depth	FlexLexer.h	/^	int yy_start_stack_depth;$/;"	m	class:yyFlexLexer	access:protected
yy_start_stack_ptr	FlexLexer.h	/^	int yy_start_stack_ptr;$/;"	m	class:yyFlexLexer	access:protected
yy_state_buf	FlexLexer.h	/^	yy_state_type* yy_state_buf;$/;"	m	class:yyFlexLexer	access:protected
yy_state_ptr	FlexLexer.h	/^	yy_state_type* yy_state_ptr;$/;"	m	class:yyFlexLexer	access:protected
yy_state_type	FlexLexer.h	/^typedef int yy_state_type;$/;"	t
yy_switch_to_buffer	FlexLexer.h	/^		yy_switch_to_buffer( struct yy_buffer_state* new_buffer ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
yy_switch_to_buffer	FlexLexer.h	/^	void yy_switch_to_buffer( struct yy_buffer_state* new_buffer );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
yy_top_state	FlexLexer.h	/^	int yy_top_state();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yy_try_NUL_trans	FlexLexer.h	/^	yy_state_type yy_try_NUL_trans( yy_state_type current_state );$/;"	p	class:yyFlexLexer	access:protected	signature:( yy_state_type current_state )
yyensure_buffer_stack	FlexLexer.h	/^	void yyensure_buffer_stack(void);$/;"	p	class:yyFlexLexer	access:protected	signature:(void)
yyin	FlexLexer.h	/^	FLEX_STD istream* yyin;	\/\/ input source for default LexerInput$/;"	m	class:yyFlexLexer	access:protected
yyinput	FlexLexer.h	/^	int yyinput();$/;"	p	class:yyFlexLexer	access:protected	signature:()
yyleng	FlexLexer.h	/^	int yyleng;$/;"	m	class:FlexLexer	access:protected
yylex	FlexLexer.h	/^	int yylex( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )$/;"	f	class:FlexLexer	access:public	signature:( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )
yylex	FlexLexer.h	/^	virtual int yylex() = 0;$/;"	p	class:FlexLexer	access:public	signature:()
yylex	FlexLexer.h	/^	virtual int yylex();$/;"	p	class:yyFlexLexer	access:public	signature:()
yylineno	FlexLexer.h	/^	int yylineno;		\/\/ only maintained if you use %option yylineno$/;"	m	class:FlexLexer	access:protected
yyout	FlexLexer.h	/^	FLEX_STD ostream* yyout;	\/\/ output sink for default LexerOutput$/;"	m	class:yyFlexLexer	access:protected
yypop_buffer_state	FlexLexer.h	/^	void yypop_buffer_state();$/;"	p	class:yyFlexLexer	access:public	signature:()
yypush_buffer_state	FlexLexer.h	/^	void yypush_buffer_state( struct yy_buffer_state* new_buffer );$/;"	p	class:yyFlexLexer	access:public	signature:( struct yy_buffer_state* new_buffer )
yyrestart	FlexLexer.h	/^	virtual void yyrestart( FLEX_STD istream* s ) = 0;$/;"	p	class:FlexLexer	access:public	signature:( FLEX_STD istream* s )
yyrestart	FlexLexer.h	/^	void yyrestart( FLEX_STD istream* s );$/;"	p	class:yyFlexLexer	access:public	signature:( FLEX_STD istream* s )
yytext	FlexLexer.h	/^	char* yytext;$/;"	m	class:FlexLexer	access:protected
yyunput	FlexLexer.h	/^	void yyunput( int c, char* buf_ptr );$/;"	p	class:yyFlexLexer	access:protected	signature:( int c, char* buf_ptr )
yywrap	FlexLexer.h	/^	virtual int yywrap();$/;"	p	class:yyFlexLexer	access:public	signature:()
zError	zconf.h	86;"	d
zError	zlib.h	/^ZEXTERN const char   * ZEXPORT zError           OF((int));$/;"	p	signature:(int)
z_errmsg	zconf.h	87;"	d
z_off64_t	zlib.h	1439;"	d
z_off64_t	zlib.h	1442;"	d
z_off_t	zconf.h	366;"	d
z_off_t	zlibdefs.h	12;"	d
z_stream	zconf.h	115;"	d
z_stream	zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	zconf.h	121;"	d
z_stream_s	zlib.h	/^typedef struct z_stream_s {$/;"	s
z_stream_s::adler	zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::avail_in	zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::avail_out	zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::data_type	zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::msg	zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::next_in	zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::next_out	zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::opaque	zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::reserved	zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::state	zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR	access:public
z_stream_s::total_in	zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::total_out	zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::zalloc	zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::zfree	zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s	access:public
z_streamp	zconf.h	116;"	d
z_streamp	zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
zalloc	zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s	access:public
zcalloc	zconf.h	88;"	d
zcfree	zconf.h	89;"	d
zfree	zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s	access:public
zlibCompileFlags	zconf.h	90;"	d
zlibCompileFlags	zlib.h	/^ZEXTERN uLong ZEXPORT zlibCompileFlags OF((void));$/;"	p	signature:(void)
zlibVersion	zconf.h	91;"	d
zlibVersion	zlib.h	/^ZEXTERN const char * ZEXPORT zlibVersion OF((void));$/;"	p	signature:(void)
zlib_version	zlib.h	211;"	d
~FlexLexer	FlexLexer.h	/^	virtual ~FlexLexer()	{ }$/;"	f	class:FlexLexer	access:public	signature:()
~__pthread_cleanup_class	pthread.h	/^  ~__pthread_cleanup_class () { if (__do_it) __cancel_routine (__cancel_arg); }$/;"	f	class:__pthread_cleanup_class	access:public	signature:()
~autosprintf	autosprintf.h	/^    ~autosprintf ();$/;"	p	class:gnu::autosprintf	access:public	signature:()
~yyFlexLexer	FlexLexer.h	/^	virtual ~yyFlexLexer();$/;"	p	class:yyFlexLexer	access:public	signature:()
